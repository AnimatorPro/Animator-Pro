fpack_ctable PACKCMAP.C /^Errcode fpack_ctable(
report_cache_stats PDRACCES.C /^Boolean report_cache_stats =
isbatch PDRACCES.C /^Boolean isbatch; // global t
say_fatal PDRACCES.C /^Errcode say_fatal(char *errm
pdr_unload PDRACCES.C /^void pdr_unload(void)
pdr_load PDRACCES.C /^Errcode pdr_load(Popot pdrna
pdr_find_load PDRACCES.C /^Errcode pdr_find_load(Popot 
opt_exist PDRACCES.C /^Boolean opt_exist(void)
opt_pdrclear PDRACCES.C /^void opt_pdrclear(void)
opt_rgbclear PDRACCES.C /^void opt_rgbclear(void)
opt_rgbpreset PDRACCES.C /^long opt_rgbpreset(Boolean d
opt_pdrpreset PDRACCES.C /^long opt_pdrpreset(Boolean d
opt_enable_stats PDRACCES.C /^void opt_enable_stats(void)
pic_getsize PDRACCES.C /^Errcode pic_getsize(Popot pa
pic_load PDRACCES.C /^Errcode pic_load(Popot path,
pic_save PDRACCES.C /^Errcode pic_save(Popot path,
colors_256 RGB2CMAP.C /^Boolean 	colors_256;
load_rgbconvert RGB2CMAP.C /^Errcode load_rgbconvert(ULON
CCACHE_H CCACHE.H /^#define CCACHE_H 1
RGBCMAP_H PACKCMAP.H /^#define RGBCMAP_H
HIST_BYTES PACKCMAP.H /^#define HIST_BYTES	  ((64*64
HIST64_SIZE PACKCMAP.H /^#define HIST64_SIZE   ((64*6
HIST256_SIZE PACKCMAP.H /^#define HIST256_SIZE  ((256*
basename_prompt NUMPIC.POC /^char basename_prompt[]		   =
rgbname_prompt NUMPIC.POC /^char rgbname_prompt[]		   = 
dirfile_prompt NUMPIC.POC /^char dirfile_prompt[]	   = "
replace_changes_prompt NUMPIC.POC /^char replace_changes_prompt[
change_flic_size_prompt NUMPIC.POC /^char change_flic_size_prompt
menu_prompt NUMPIC.POC /^char menu_prompt[]	 = "Conve
menu_choices NUMPIC.POC /^char *menu_choices[] =
load_prompt NUMPIC.POC /^char load_prompt[]	= "Found 
load_choices NUMPIC.POC /^char *load_choices[] = {"App
pdr_prompt NUMPIC.POC /^char pdr_prompt[]	= "Please 
pdr_choices NUMPIC.POC /^char *pdr_choices[] = {"GIF"
pdr_names NUMPIC.POC /^char *pdr_names[]	= {"GIF.PD
start_of_final_digits NUMPIC.POC /^char *start_of_final_digits(
get_num_name NUMPIC.POC /^int get_num_name(char *name)
count_digits NUMPIC.POC /^int count_digits(int num)
make_num_name NUMPIC.POC /^void make_num_name(char *buf
set_up_for_output NUMPIC.POC /^ErrCode set_up_for_output(ch
save_pics NUMPIC.POC /^void save_pics(char *name)
fexists NUMPIC.POC /^Boolean fexists(char *name)
count_files NUMPIC.POC /^int count_files(char *base_n
report_about_error NUMPIC.POC /^Boolean report_about_error(E
load_pics NUMPIC.POC /^void load_pics(char *base_na
load_pic_list NUMPIC.POC /^void load_pic_list(char **li
load_dir NUMPIC.POC /^void load_dir(char *base_nam
delete_files NUMPIC.POC /^void delete_files(char *base
do_one_set NUMPIC.POC /^Boolean do_one_set(char *bas
main NUMPIC.POC /^void main(void)
pathprompt PICLIST.POC /^char	pathprompt[]	= "List pi
pathbutton PICLIST.POC /^char	pathbutton[]	= "This Pa
listbuttons PICLIST.POC /^char	*listbuttons[]	= {"Ok",
listptemplate PICLIST.POC /^char	listptemplate[] = "Pict
listprompt PICLIST.POC /^char	listprompt[PATH_SIZE+si
no_files PICLIST.POC /^char	no_files[]		= "No pictu
load_error PICLIST.POC /^char	load_error[]	= "Error a
working_msg PICLIST.POC /^char	working_msg[]	= "Gettin
actionprompt PICLIST.POC /^char	actionprompt[]	= "Selec
actionbuttons PICLIST.POC /^char	*actionbuttons[]= {"Pre
picpath PICLIST.POC /^char	picpath[PATH_SIZE];
listcount PICLIST.POC /^int 	listcount;
display_list PICLIST.POC /^char	**display_list;
display_data PICLIST.POC /^char	*display_data;
display_template PICLIST.POC /^char	display_template[] = " 
build_list PICLIST.POC /^int build_list(char *path)
load_pic PICLIST.POC /^Errcode load_pic(char *picna
view_pic PICLIST.POC /^void view_pic(char *picname)
select_picture PICLIST.POC /^void select_picture(int pici
tidyup_pathname PICLIST.POC /^void tidyup_pathname(char *p
main PICLIST.POC /^void main(void)
tools_dir PICTOOLS.POC /^char	tools_dir[] = "\\paa\\p
menuprompt PICTOOLS.POC /^char	menuprompt[] = "Please 
choices PICTOOLS.POC /^char	*choices[] = {
programs PICTOOLS.POC /^char	*programs[] = {"NUMPIC.
main PICTOOLS.POC /^void main(void)
askoverwrite RGBTOOL.POC /^char	askoverwrite[]	=		"Okay
picpdr_unknown RGBTOOL.POC /^char	picpdr_unknown[]=		"Sor
save_was_good RGBTOOL.POC /^char	save_was_good[] =		"Pic
psuffi RGBTOOL.POC /^char	*psuffi[]		=		{".TIF","
lastsuffix RGBTOOL.POC /^long	lastsuffix;
loadbutton RGBTOOL.POC /^char	loadbutton[]	=		"Load";
savebutton RGBTOOL.POC /^char	savebutton[]	=		"Save";
loadprompt RGBTOOL.POC /^char	loadprompt[]	=		"Select
saveprompt RGBTOOL.POC /^char	saveprompt[]	=		"Select
mainprompt RGBTOOL.POC /^char	mainprompt[]	=		" RGB P
mainchoices RGBTOOL.POC /^char	*mainchoices[]	=	 {	" L
frameprompt RGBTOOL.POC /^char	frameprompt[]	=		"You a
framechoices RGBTOOL.POC /^char	*framechoices[] =	 {	"A
optprompt RGBTOOL.POC /^char	optprompt[]   = 		" Pre
optchoices RGBTOOL.POC /^char	*optchoices[] = 	 {	" R
mainhelptext RGBTOOL.POC /^char	mainhelptext[]	=
mainhelpchoices RGBTOOL.POC /^char	*mainhelpchoices[] = {"
loadhelptext RGBTOOL.POC /^char	loadhelptext[]	=	"When 
savehelptext RGBTOOL.POC /^char	savehelptext[]	=	"When 
optnhelptext RGBTOOL.POC /^char	optnhelptext[]	=	"The S
opt_rgb_valid RGBTOOL.POC /^Boolean opt_rgb_valid = FALS
opt_tga_valid RGBTOOL.POC /^Boolean opt_tga_valid = FALS
opt_tif_valid RGBTOOL.POC /^Boolean opt_tif_valid = FALS
opt_pic_valid RGBTOOL.POC /^Boolean opt_pic_valid = FALS
opt_rgb_values RGBTOOL.POC /^long	opt_rgb_values;
opt_tga_values RGBTOOL.POC /^long	opt_tga_values;
opt_tif_values RGBTOOL.POC /^long	opt_tif_values;
opt_pic_values RGBTOOL.POC /^long	opt_pic_values;
pic_save RGBTOOL.POC /^Errcode pic_save(char *pdrna
pic_load RGBTOOL.POC /^Errcode pic_load(char *pdrna
pdr_for_pic RGBTOOL.POC /^char *pdr_for_pic(char *picp
do_picfile_dialog RGBTOOL.POC /^Boolean do_picfile_dialog(ch
do_nextframe_dialog RGBTOOL.POC /^void do_nextframe_dialog(voi
set_optflags RGBTOOL.POC /^void set_optflags()
do_options_dialog RGBTOOL.POC /^void do_options_dialog(void)
do_help_dialog RGBTOOL.POC /^void do_help_dialog(void)
get_global_num RGBTOOL.POC /^Errcode get_global_num(char 
set_global_num RGBTOOL.POC /^void set_global_num(char *va
global_values RGBTOOL.POC /^void global_values(int optio
main RGBTOOL.POC /^void main(void)
