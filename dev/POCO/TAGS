po_init_qbop_table BOP.C /^void po_init_qbop_table(Poco
po_get_binop_expression BOP.C /^void po_get_binop_expression
po_get_csource_line CHOPPER.C /^char *po_get_csource_line(Po
po_skip_space CHOPPER.C /^char *po_skip_space(register
po_chop_to CHOPPER.C /^char *po_chop_to(char *line,
po_init_code_buf CODE.C /^void po_init_code_buf(Poco_c
po_trash_code_buf CODE.C /^void po_trash_code_buf(Poco_
po_add_op CODE.C /^Boolean po_add_op(Poco_cb *p
po_backup_code CODE.C /^void po_backup_code(Poco_cb 
po_cbuf_code_size CODE.C /^long po_cbuf_code_size(Code_
po_cat_code CODE.C /^Boolean po_cat_code(Poco_cb 
po_copy_code CODE.C /^Boolean po_copy_code(Poco_cb
po_code_op CODE.C /^void po_code_op(Poco_cb *pcb
po_add_code_fixup CODE.C /^void po_add_code_fixup(Poco_
po_code_pop CODE.C /^void po_code_pop(Poco_cb *pc
po_code_void_pt CODE.C /^void po_code_void_pt(Poco_cb
po_code_double CODE.C /^void po_code_double(Poco_cb 
po_code_long CODE.C /^void po_code_long(Poco_cb *p
po_code_address CODE.C /^void po_code_address(Poco_cb
po_code_int CODE.C /^long po_code_int(Poco_cb *pc
po_code_popot CODE.C /^void po_code_popot(Poco_cb *
po_int_fixup CODE.C /^void po_int_fixup(Code_buf *
po_compress_func CODE.C /^Boolean po_compress_func(Poc
po_sym_to_fuf DECLARE.C /^Func_frame *po_sym_to_fuf(Sy
po_get_proto DECLARE.C /^Func_frame *po_get_proto(Typ
po_pop_off_result DECLARE.C /^void po_pop_off_result(Poco_
po_get_typedef DECLARE.C /^void po_get_typedef(Poco_cb 
po_get_typename DECLARE.C /^void po_get_typename(Poco_cb
po_get_declaration DECLARE.C /^void po_get_declaration(Poco
po_dummy_lib DUMMYLIB.C /^Poco_lib po_dummy_lib = {
translate_escapes ESCAPE.C /^int translate_escapes(regist
po_fold_const FOLD.C /^void po_fold_const(Poco_cb *
po_eval_const_expression FOLD.C /^int po_eval_const_expression
slist_el LINKLIST.C /^void *slist_el(register Slno
slist_ix LINKLIST.C /^int slist_ix(register Slnode
slist_len LINKLIST.C /^int slist_len(register Slnod
join_slists LINKLIST.C /^void *join_slists(Slnode *s1
remove_el LINKLIST.C /^void *remove_el(void *list, 
init_list LINKLIST.C /^void init_list(Dlheader *lis
add_head LINKLIST.C /^void add_head(Dlheader *list
add_tail LINKLIST.C /^void add_tail(Dlheader *list
insert_after LINKLIST.C /^void insert_after(register D
insert_before LINKLIST.C /^void insert_before(register 
get_head LINKLIST.C /^Dlnode *get_head(register Dl
see_head LINKLIST.C /^Dlnode *see_head(register Dl
get_tail LINKLIST.C /^Dlnode *get_tail(register Dl
see_tail LINKLIST.C /^Dlnode *see_tail(register Dl
rem_node LINKLIST.C /^void rem_node(register Dlnod
safe_rem_node LINKLIST.C /^void safe_rem_node(register 
list_tohead LINKLIST.C /^void list_tohead( register D
list_totail LINKLIST.C /^void list_totail(Dlheader *f
listlen LINKLIST.C /^LONG listlen(Dlheader *list)
find_header LINKLIST.C /^Dlheader *find_header(regist
isin_list LINKLIST.C /^Boolean isin_list(register D
insert_compare LINKLIST.C /^void insert_compare(register
isort_list LINKLIST.C /^void isort_list(Dlheader *li
sort_indarray LINKLIST.C /^void sort_indarray(void **ar
sort_slist LINKLIST.C /^void *sort_slist(register Sl
sort_names LINKLIST.C /^Names *sort_names(register N
po_math_lib MATHLIB.C /^Poco_lib po_math_lib = {
po_init_memory_management POCMEMRY.C /^Errcode po_init_memory_manag
po_free_compile_memory POCMEMRY.C /^void po_free_compile_memory(
po_free_all_memory POCMEMRY.C /^void po_free_all_memory(void
po_freemem POCMEMRY.C /^void po_freemem(void *pt)
po_memalloc POCMEMRY.C /^void *po_memalloc(Poco_cb *p
po_memzalloc POCMEMRY.C /^void *po_memzalloc(Poco_cb *
po_cache_malloc POCMEMRY.C /^void *po_cache_malloc(Poco_c
po_clone_string POCMEMRY.C /^char *po_clone_string(Poco_c
po_check_instr_table POCODIS.C /^Boolean po_check_instr_table
find_c_name POCODIS.C /^char *find_c_name(C_frame *l
po_disasm POCODIS.C /^void *po_disasm(FILE *f, voi
dump_code POCODIS.C /^void dump_code(Poco_cb *pcb,
po_dump_file POCODIS.C /^void po_dump_file(Poco_cb *p
po_compile_errhandler POCOFACE.C /^jmp_buf po_compile_errhandle
po_version_number POCOFACE.C /^int 	po_version_number = VRS
po_show_basic_sizes POCOFACE.C /^void po_show_basic_sizes()
print_pocolib POCOFACE.C /^Errcode print_pocolib(char *
po_findpoe POCOFACE.C /^int po_findpoe(char *libname
po_open_library POCOFACE.C /^Poco_lib *po_open_library(Po
po_get_libproto_line POCOFACE.C /^char *po_get_libproto_line(P
compile_poco POCOFACE.C /^Errcode compile_poco(
run_poco POCOFACE.C /^Errcode run_poco(void **ppex
free_poco POCOFACE.C /^void free_poco(void **ppexe)
po_fuf_name POCOFACE.C /^char *po_fuf_name(void *fuf)
po_fuf_code POCOFACE.C /^void *po_fuf_code(void *fuf)
po_file_to_stdout POCOFACE.C /^Errcode po_file_to_stdout(ch
po_init_libs POCOLIB.C /^Errcode po_init_libs(Poco_li
po_cleanup_libs POCOLIB.C /^void po_cleanup_libs(Poco_li
poco_freez POCOLIB.C /^void poco_freez(Popot *pt)
po_check_formatf POCOLIB.C /^Errcode po_check_formatf(int
po_ins_table POCOOP.C /^Poco_op_table po_ins_table[]
po_ins_table_els POCOOP.C /^int po_ins_table_els = Array
po_mul_ops POCOOP.C /^Op_type po_mul_ops[NUM_IDOS]
po_div_ops POCOOP.C /^Op_type po_div_ops[NUM_IDOS]
po_mod_ops POCOOP.C /^Op_type po_mod_ops[NUM_IDOS]
po_add_ops POCOOP.C /^Op_type po_add_ops[NUM_IDOS]
po_sub_ops POCOOP.C /^Op_type po_sub_ops[NUM_IDOS]
po_lshift_ops POCOOP.C /^Op_type po_lshift_ops[NUM_ID
po_rshift_ops POCOOP.C /^Op_type po_rshift_ops[NUM_ID
po_lt_ops POCOOP.C /^Op_type po_lt_ops[NUM_IDOS] 
po_le_ops POCOOP.C /^Op_type po_le_ops[NUM_IDOS] 
po_gt_ops POCOOP.C /^Op_type po_gt_ops[NUM_IDOS] 
po_ge_ops POCOOP.C /^Op_type po_ge_ops[NUM_IDOS] 
po_eq_ops POCOOP.C /^Op_type po_eq_ops[NUM_IDOS] 
po_ne_ops POCOOP.C /^Op_type po_ne_ops[NUM_IDOS] 
po_band_ops POCOOP.C /^Op_type po_band_ops[NUM_IDOS
po_xor_ops POCOOP.C /^Op_type po_xor_ops[NUM_IDOS]
po_bor_ops POCOOP.C /^Op_type po_bor_ops[NUM_IDOS]
po_land_ops POCOOP.C /^Op_type po_land_ops[NUM_IDOS
po_lor_ops POCOOP.C /^Op_type po_lor_ops[NUM_IDOS]
po_push_ops POCOOP.C /^Op_type po_push_ops[NUM_IDOS
po_pop_ops POCOOP.C /^Op_type po_pop_ops[NUM_IDOS]
po_clean_ops POCOOP.C /^Op_type po_clean_ops[NUM_IDO
po_ccall_ops POCOOP.C /^Op_type po_ccall_ops[NUM_IDO
po_con_ops POCOOP.C /^Op_type po_con_ops[NUM_IDOS]
po_add_offset_ops POCOOP.C /^Op_type po_add_offset_ops[NU
po_neg_ops POCOOP.C /^Op_type po_neg_ops[NUM_IDOS]
po_not_ops POCOOP.C /^Op_type po_not_ops[NUM_IDOS]
po_comp_ops POCOOP.C /^Op_type po_comp_ops[NUM_IDOS
po_dupe_ops POCOOP.C /^Op_type po_dupe_ops[NUM_IDOS
po_check_type_names POCOTYPE.C /^Boolean po_check_type_names(
po_new_type_info POCOTYPE.C /^Type_info *po_new_type_info(
po_is_int_ido POCOTYPE.C /^Boolean po_is_int_ido(SHORT 
po_is_string POCOTYPE.C /^Boolean po_is_string(Type_in
po_is_pointer POCOTYPE.C /^Boolean po_is_pointer(Type_i
po_is_array POCOTYPE.C /^Boolean po_is_array(Type_inf
po_is_struct POCOTYPE.C /^Boolean po_is_struct(Type_in
po_is_func POCOTYPE.C /^Boolean po_is_func(Type_info
po_set_ido_type POCOTYPE.C /^void po_set_ido_type(Type_in
po_append_type POCOTYPE.C /^Boolean po_append_type(Poco_
po_set_base_type POCOTYPE.C /^Boolean po_set_base_type(Poc
po_copy_type POCOTYPE.C /^Boolean po_copy_type(Poco_cb
po_cat_type POCOTYPE.C /^Boolean po_cat_type(Poco_cb 
po_is_void_ptr POCOTYPE.C /^Boolean po_is_void_ptr(Type_
po_ptypes_same POCOTYPE.C /^Boolean po_ptypes_same(Type_
po_fuf_types_same POCOTYPE.C /^Boolean po_fuf_types_same(Fu
po_types_same POCOTYPE.C /^Boolean po_types_same(Type_i
po_print_type POCOTYPE.C /^void po_print_type(Poco_cb *
po_get_type_size POCOTYPE.C /^long po_get_type_size(Type_i
po_get_subtype_size POCOTYPE.C /^long po_get_subtype_size(Poc
po_get_base_type POCOTYPE.C /^Boolean po_get_base_type(Poc
po_need_local_symbol POCOTYPE.C /^Symbol *po_need_local_symbol
po_typi_type POCOTYPE.C /^Type_info *po_typi_type(Ityp
po_add_local_string POSTRING.C /^void po_add_local_string(Poc
po_free_local_string_list POSTRING.C /^void po_free_local_string_li
po_code_free_string_ops POSTRING.C /^void po_code_free_string_ops
po_sr_new POSTRING.C /^String_ref *po_sr_new(int le
po_sr_new_copy POSTRING.C /^String_ref *po_sr_new_copy(c
po_sr_new_string POSTRING.C /^String_ref *po_sr_new_string
po_sr_cat POSTRING.C /^String_ref *po_sr_cat(String
po_sr_inc_ref POSTRING.C /^void po_sr_inc_ref(String_re
po_sr_destroy POSTRING.C /^void po_sr_destroy(String_re
po_sr_clean_ref POSTRING.C /^Boolean po_sr_clean_ref(Stri
po_sr_dec_ref POSTRING.C /^void po_sr_dec_ref(String_re
po_sr_eq POSTRING.C /^Boolean po_sr_eq(String_ref 
po_sr_ge POSTRING.C /^Boolean po_sr_ge(String_ref 
po_sr_le POSTRING.C /^Boolean po_sr_le(String_ref 
po_sr_eq_and_clean POSTRING.C /^Boolean po_sr_eq_and_clean(S
po_sr_ge_and_clean POSTRING.C /^Boolean po_sr_ge_and_clean(S
po_sr_le_and_clean POSTRING.C /^Boolean po_sr_le_and_clean(S
po_sr_cat_and_clean POSTRING.C /^String_ref *po_sr_cat_and_cl
pp_fatal PP.C /^void pp_fatal(char *s)
po_free_pp PP.C /^void po_free_pp(Poco_cb *pcb
po_init_pp PP.C /^Boolean po_init_pp(Poco_cb *
po_pp_next_line PP.C /^char *po_pp_next_line(Poco_c
po_pp_eval PPEVAL.C /^long po_pp_eval(char *line, 
po_run_protos RUNOPS.C /^C_frame *po_run_protos;
po_trace_file RUNOPS.C /^FILE *po_trace_file;
po_trace_flag RUNOPS.C /^Boolean po_trace_flag = FALS
poco_cont_ops RUNOPS.C /^Errcode poco_cont_ops(void *
po_run_ops RUNOPS.C /^Errcode po_run_ops(Poco_run_
po_in_rlist SAFEFILE.C /^Rnode *po_in_rlist(Dlheader 
po_FILE_lib SAFEFILE.C /^Poco_lib po_FILE_lib =
poco_lmalloc SAFEFILE.C /^Popot poco_lmalloc(long size
po_malloc SAFEFILE.C /^Popot po_malloc(int size)
po_free SAFEFILE.C /^void po_free(Popot ppt)
po_memcpy SAFEFILE.C /^Popot po_memcpy(Popot d, Pop
po_memmove SAFEFILE.C /^Popot po_memmove(Popot d, Po
po_memcmp SAFEFILE.C /^int po_memcmp(Popot d, Popot
po_memset SAFEFILE.C /^Popot po_memset(Popot d, int
po_mem_lib SAFEFILE.C /^Poco_lib po_mem_lib =
po_file_to_stdout SAFEFILE.C /^Errcode po_file_to_stdout(ch
po_eat_semi STATEMEN.C /^Boolean po_eat_semi(Poco_cb 
po_eat_rbrace STATEMEN.C /^Boolean po_eat_rbrace(Poco_c
po_eat_lbrace STATEMEN.C /^Boolean po_eat_lbrace(Poco_c
po_get_statements STATEMEN.C /^void po_get_statements(Poco_
po_get_block STATEMEN.C /^void po_get_block(Poco_cb *p
po_need_comma_or_brace STATEMEN.C /^int po_need_comma_or_brace(P
po_check_array_dim STATEMEN.C /^void po_check_array_dim(Poco
po_label_to_symbol STATEMEN.C /^Code_label *po_label_to_symb
po_get_top_switch STATEMEN.C /^Loop_frame *po_get_top_switc
po_get_goto STATEMEN.C /^void po_get_goto(Poco_cb *pc
po_exp_statement STATEMEN.C /^void po_exp_statement(Poco_c
po_str_lib STRLIB.C /^Poco_lib po_str_lib =
po_free_sif_list STRUCT.C /^void po_free_sif_list(Struct
po_move_sifs_to_parent STRUCT.C /^void po_move_sifs_to_parent(
po_get_struct STRUCT.C /^Struct_info *po_get_struct(P
htol TOKEN.C /^long htol(char *s)
tokenize_word TOKEN.C /^UBYTE *tokenize_word(registe
po_new_line_data TRACE.C /^Line_data *po_new_line_data(
po_compress_line_data TRACE.C /^Boolean po_compress_line_dat
po_free_line_data TRACE.C /^void po_free_line_data(Line_
po_add_line_data TRACE.C /^Boolean po_add_line_data(Poc
find_line TRACE.C /^long find_line(Line_data *ld
po_seems_ascii TRACE.C /^po_seems_ascii(char *s)
po_print_trace TRACE.C /^void po_print_trace(Poco_run
_stklen MAIN.C /^  unsigned _stklen = MAX_STA
jioerr MAIN.C /^short	jioerr; /* last io err
incdirs MAIN.C /^  Names incdirs[] = {
incdirs MAIN.C /^  Names incdirs[] = {
incdirs MAIN.C /^  Names incdirs[] = {
pj_malloc MAIN.C /^void *pj_malloc(int i)
pj_zalloc MAIN.C /^void *pj_zalloc(unsigned siz
pj_free MAIN.C /^void pj_free(void *v)
pj_gentle_free MAIN.C /^void pj_gentle_free(void *p)
pj_freez MAIN.C /^void pj_freez(void **p)
pj_load_pocorex MAIN.C /^Errcode pj_load_pocorex(Poco
pj_free_pocorexes MAIN.C /^void pj_free_pocorexes(Poco_
matherr MAIN.C /^int matherr()
boxf MAIN.C /^void boxf(long vargcount, lo
check_abort MAIN.C /^Boolean check_abort(void *no
pj_delete MAIN.C /^int pj_delete(char *name)
pj_ioerr MAIN.C /^int pj_ioerr()
upc MAIN.C /^void upc(register char *s)
clone_string MAIN.C /^char *clone_string(char *s)
pj_delete MAIN.C /^pj_delete(char *name)
boxf MAIN.C /^void boxf(long vargcount, lo
check_abort MAIN.C /^check_abort(void *nobody)
errline MAIN.C /^void errline(int err, char *
get_errtext MAIN.C /^int get_errtext(Errcode err,
tryme MAIN.C /^int tryme(Popot v)
po_puts MAIN.C /^po_puts(Popot s)
po_printf MAIN.C /^int po_printf(long vargcount
po_main_lib MAIN.C /^Poco_lib po_main_lib =
redirection_save MAIN.C /^FILE	 redirection_save;
f MAIN.C /^FILE	 *f;
builtin_err MAIN.C /^Errcode	builtin_err;	/* Erro
main MAIN.C /^int main(int argc, char *arg
po_get_param_size FUNCCALL.C /^int po_get_param_size(Poco_c
po_get_function FUNCCALL.C /^void po_get_function(Poco_cb
po_say_err POCO.C /^void po_say_err(Poco_cb *pcb
po_say_fatal POCO.C /^void po_say_fatal(Poco_cb *p
po_say_internal POCO.C /^void po_say_internal(Poco_cb
po_expecting_got POCO.C /^void po_expecting_got(Poco_c
po_expecting_got_str POCO.C /^void po_expecting_got_str(Po
po_need_token POCO.C /^Boolean po_need_token(Poco_c
po_redefined POCO.C /^void po_redefined(Poco_cb *p
po_undefined POCO.C /^void po_undefined(Poco_cb *p
po_unmatched_paren POCO.C /^void po_unmatched_paren(Poco
po_expecting_lbrace POCO.C /^void po_expecting_lbrace(Poc
po_expecting_rbrace POCO.C /^void po_expecting_rbrace(Poc
po_freelist POCO.C /^void po_freelist(void *l)
po_hashfunc POCO.C /^int po_hashfunc(UBYTE *s)
po_unlink_el POCO.C /^Symbol *po_unlink_el(Symbol 
po_unhash_symbol POCO.C /^void po_unhash_symbol(Poco_c
po_rehash POCO.C /^int po_rehash(Poco_cb *pcb, 
po_free_symbol POCO.C /^void po_free_symbol(Symbol *
po_free_symbol_list POCO.C /^void po_free_symbol_list(Sym
po_new_symbol POCO.C /^Symbol *po_new_symbol(Poco_c
po_link_len POCO.C /^int po_link_len(Symbol *l)
po_reverse_links POCO.C /^void *po_reverse_links(Symbo
po_lookup_freshtoken POCO.C /^void po_lookup_freshtoken(Po
po_is_next_token POCO.C /^Boolean po_is_next_token(Poc
po_eat_token POCO.C /^Boolean po_eat_token(Poco_cb
po_eat_rbracket POCO.C /^Boolean po_eat_rbracket(Poco
po_eat_lparen POCO.C /^Boolean po_eat_lparen(Poco_c
po_eat_rparen POCO.C /^Boolean po_eat_rparen(Poco_c
po_check_rparen POCO.C /^Boolean po_check_rparen(Poco
po_find_local_assign POCO.C /^SHORT po_find_local_assign(P
po_find_assign_op POCO.C /^SHORT po_find_assign_op(Poco
po_ido_table POCO.C /^Ido_table po_ido_table[] =
po_find_local_use POCO.C /^SHORT po_find_local_use(Poco
po_code_elsize POCO.C /^void po_code_elsize(Poco_cb 
po_make_deref POCO.C /^void po_make_deref(Poco_cb *
po_scoped_address_op POCO.C /^int po_scoped_address_op[2] 
po_new_var_space POCO.C /^void po_new_var_space(Poco_c
po_get_temp_space POCO.C /^int po_get_temp_space(Poco_c
po_init_expframe POCO.C /^void po_init_expframe(Poco_c
po_new_expframe POCO.C /^Exp_frame *po_new_expframe(P
po_trash_expframe POCO.C /^void po_trash_expframe(Poco_
po_dispose_expframe POCO.C /^void po_dispose_expframe(Poc
po_force_num_exp POCO.C /^SHORT po_force_num_exp(Poco_
po_force_int_exp POCO.C /^SHORT po_force_int_exp(Poco_
po_force_ptr_or_num_exp POCO.C /^SHORT po_force_ptr_or_num_ex
po_coerce_to_boolean POCO.C /^void po_coerce_to_boolean(Po
po_coerce_to_string POCO.C /^void po_coerce_to_string(Poc
po_coerce_numeric_exp POCO.C /^void po_coerce_numeric_exp(P
po_coerce_expression POCO.C /^void po_coerce_expression(Po
po_get_prim POCO.C /^void po_get_prim(Poco_cb *pc
po_get_unop_expression POCO.C /^void po_get_unop_expression(
po_assign_after_equals POCO.C /^Boolean po_assign_after_equa
po_get_expression POCO.C /^void po_get_expression(Poco_
po_new_frame POCO.C /^Boolean po_new_frame(Poco_cb
po_old_frame POCO.C /^void po_old_frame(Poco_cb *p
po_check_undefined_funcs POCO.C /^Boolean po_check_undefined_f
po_compile_file POCO.C /^Boolean po_compile_file(Poco
po_free_run_env POCO.C /^void po_free_run_env(Poco_ru
LOSTDIO_H LOSTDIO.H /^#define LOSTDIO_H
POCO_H POCO.H /^#define POCO_H
DEVELOPMENT POCO.H /^  #define DEVELOPMENT	/* Inc
VRSN_NUM POCO.H /^  #define VRSN_NUM 175
VRSN_TO_STR POCO.H /^#define VRSN_TO_STR(a) #a
VRSN_STR POCO.H /^#define VRSN_STR	   VRSN_TO_
memset POCO.H /^  #define memset(a,b,c) setm
MAX_STACK POCO.H /^#define MAX_STACK		14336	/* 
HASH_SIZE POCO.H /^#define HASH_SIZE		256 	/* h
SZTOKE POCO.H /^#define SZTOKE			512 	/* max
MAX_SYM_LEN POCO.H /^#define MAX_SYM_LEN 	40		/* 
MAX_STRLIT_LEN POCO.H /^#define MAX_STRLIT_LEN	4096	
SMALL_CODE_SIZE POCO.H /^#define SMALL_CODE_SIZE 48		
FUNC_MAGIC POCO.H /^#define FUNC_MAGIC	0x2768031
PoBoolean POCO.H /^typedef char PoBoolean; 		/*
SMALLBLK_CACHE_SIZE POCO.H /^#define SMALLBLK_CACHE_SIZE 
cache_ctl POCO.H /^typedef struct cache_ctl		/*
Cache_ctl POCO.H /^	} Cache_ctl;
CCRYPTIC POCO.H /^#define CCRYPTIC		0x8765
CTRASHED POCO.H /^#define CTRASHED		0x8674
code_buf POCO.H /^typedef struct code_buf
Code_buf POCO.H /^	} Code_buf;
Type_comp POCO.H /^typedef UBYTE Type_comp;
pt_long POCO.H /^typedef union pt_long
Pt_long POCO.H /^	} Pt_long;
type_info POCO.H /^typedef struct type_info
Type_info POCO.H /^	} Type_info;
MAX_TYPE_COMPS POCO.H /^#define MAX_TYPE_COMPS 21
itypi POCO.H /^typedef struct itypi
Itypi POCO.H /^	} Itypi;
NUM_IDOS POCO.H /^#define NUM_IDOS	(IDO_LAST)
Ido_table POCO.H /^	}  Ido_table;
po_find_pop_op POCO.H /^#define po_find_pop_op(pcb, 
po_find_push_op POCO.H /^#define po_find_push_op(pcb,
po_find_clean_op POCO.H /^#define po_find_clean_op(pcb
ptoken_t POCO.H /^typedef enum ptoken_t {
PToken_t POCO.H /^	} PToken_t;
symbol POCO.H /^typedef struct symbol
Symbol POCO.H /^	} Symbol;
struct_info POCO.H /^typedef struct struct_info
Struct_info POCO.H /^	} Struct_info;
use_label POCO.H /^typedef struct use_label
Use_label POCO.H /^	} Use_label;
code_label POCO.H /^typedef struct code_label
Code_label POCO.H /^	} Code_label;
FREFS POCO.H /^#define FREFS 64
SSZ POCO.H /^#define SSZ 1024
MAX_TYPES POCO.H /^#define MAX_TYPES 1024
loop_frame POCO.H /^typedef struct loop_frame
Loop_frame POCO.H /^	} Loop_frame;
exp_frame POCO.H /^typedef struct exp_frame
Exp_frame POCO.H /^	} Exp_frame;
line_data POCO.H /^typedef struct line_data
Line_data POCO.H /^	} Line_data;
cff_type POCO.H /^typedef enum cff_type
Cff_type POCO.H /^	} Cff_type;
CFF_FIELDS POCO.H /^#define CFF_FIELDS \
	char		
local_string POCO.H /^typedef struct local_string
Local_string POCO.H /^	} Local_string;
poco_frame POCO.H /^typedef struct poco_frame
Poco_frame POCO.H /^	} Poco_frame;
func_frame POCO.H /^typedef struct func_frame
Func_frame POCO.H /^	} Func_frame;
C_frame POCO.H /^typedef Func_frame C_frame;
tunion POCO.H /^typedef union tunion
Tunion POCO.H /^	} Tunion;
tstack POCO.H /^typedef struct tstack
Tstack POCO.H /^	} Tstack;
MAX_CP POCO.H /^#define MAX_CP 10
cwinit POCO.H /^typedef struct cwinit {
Cwinit POCO.H /^	} Cwinit;
Fsflags POCO.H /^	} Fsflags;
file_stack POCO.H /^typedef struct file_stack
File_stack POCO.H /^	} File_stack;
Ts_flags POCO.H /^	} Ts_flags;
PPToken POCO.H /^	} PPToken;
text_symbol POCO.H /^typedef struct text_symbol
Text_symbol POCO.H /^	} Text_symbol;
PP_else_state POCO.H /^	} PP_else_state;
conditional POCO.H /^typedef struct conditional
Conditional POCO.H /^	} Conditional;
token POCO.H /^typedef struct token
Token POCO.H /^	} Token;
poco_run_env POCO.H /^typedef struct poco_run_env
Poco_run_env POCO.H /^	} Poco_run_env;
poco_cb POCO.H /^typedef struct poco_cb
Poco_cb POCO.H /^	} Poco_cb;
Alloc_a POCO.H /^#define Alloc_a(pcb,type)			
Alloc_z POCO.H /^#define Alloc_z(pcb,type)			
poc_gentle_freemem POCO.H /^#define poc_gentle_freemem(a
any_code POCO.H /^#define any_code(pcb, c)			(
clear_code_buf POCO.H /^#define clear_code_buf(pcb, 
pushback_token POCO.H /^#define pushback_token(t)			
lookup_token POCO.H /^#define lookup_token(pcb)			
POCOOP_H POCOOP.H /^#define POCOOP_H
Code POCOOP.H /^typedef UBYTE Code;
Stack POCOOP.H /^typedef UBYTE Stack;
INT_SIZE POCOOP.H /^#define INT_SIZE 	(sizeof(in
INTY_SIZE POCOOP.H /^#define INTY_SIZE 	(sizeof(i
OPY_SIZE POCOOP.H /^#define OPY_SIZE 	(sizeof(in
OPSZ POCOOP.H /^#define OPSZ 		OPY_SIZE
INTYSZ POCOOP.H /^#define INTYSZ 		INTY_SIZE
Op_type POCOOP.H /^typedef int Op_type;
poco_op_tab POCOOP.H /^typedef struct poco_op_tab
Poco_op_table POCOOP.H /^	} Poco_op_table;
PP_H PP.H /^#define PP_H
text_symbol PP.H /^struct text_symbol
Text_symbol PP.H /^typedef struct text_symbol T
file_place PP.H /^struct file_place
File_place PP.H /^typedef struct file_place Fi
conditional PP.H /^struct conditional
Conditional PP.H /^typedef struct conditional C
TOKEN_MAX PP.H /^#define TOKEN_MAX 2048
LINE_MAX PP.H /^#define LINE_MAX 2048
HASH_SIZE PP.H /^#define HASH_SIZE 256
LBRACE PP.H /^#define LBRACE '{'
RBRACE PP.H /^#define RBRACE '}'
LPAREN PP.H /^#define LPAREN '('
RPAREN PP.H /^#define RPAREN ')'
iscsymf PP.H /^#define iscsymf(c) (isalpha(
iscsym PP.H /^#define iscsym(c) (isalnum(c
PPLISTS_H PPLISTS.H /^#define PPLISTS_H
PARANOID PPLISTS.H /^#define PARANOID
TRUE PPLISTS.H /^#define TRUE 1
FALSE PPLISTS.H /^#define FALSE 0
WORD PPLISTS.H /^#define WORD int
lprintf PPLISTS.H /^#define lprintf printf
bool PPLISTS.H /^typedef WORD bool;		/*boolea
name_list PPLISTS.H /^struct name_list
Names PPLISTS.H /^typedef struct name_list Nam
POINTER PPLISTS.H /^typedef int * POINTER;
item_list PPLISTS.H /^struct item_list
Item_list PPLISTS.H /^typedef struct item_list Ite
Alloc_a PPLISTS.H /^#define Alloc_a(type) (type 
Alloc_z PPLISTS.H /^#define Alloc_z(type) (type 
Clone_a PPLISTS.H /^#define Clone_a(pt, type) (t
Free_a PPLISTS.H /^#define Free_a(pt)	free(pt)
Copy_a PPLISTS.H /^#define Copy_a(s, d) pj_copy
Array_els PPLISTS.H /^#define Array_els(array) (si
STATEMEN_H STATEMEN.H /^#define STATEMEN_H
STRUCT_H STRUCT.H /^#define STRUCT_H
