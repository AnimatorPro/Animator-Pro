
#ifdef LATER
typedef struct double_range
/* Keep track of all the values a number takes on. */
	{
	char *name;
	double small_plus, big_plus, small_minus, big_minus;
	long values;
	} Double_range;

static void dr_construct(Double_range *dr, char *name)
{
	dr->name = name;
	dr->small_plus = HUGE_VAL;
	dr->big_plus = 0;
	dr->small_minus = -HUGE_VAL;
	dr->big_minus = 0;
	dr->values = 0;
}

static void dr_check(Double_range *dr, double val)
{
	if (val >= 0)
		{
		if (val < dr->small_plus)
			dr->small_plus = val;
		if (val > dr->big_plus)
			dr->big_plus = val;
		}
	else
		{
		if (val > dr->small_minus)
			dr->small_minus = val;
		if (val < dr->big_minus)
			dr->big_minus = val;
		}
	++dr->values;
}

FILE *dr_record;

static void dr_print(Double_range *dr)
{
	fprintf(dr_record, "%s (%d tests) %f %f %f %f\n"
	, dr->name, dr->values
	, dr->big_minus, dr->small_minus, dr->small_plus, dr->big_plus);
}

Double_range dr_ax,dr_bx,dr_cx,dr_ay,dr_by,dr_cy,dr_vx,dr_vy;

static void init_drs()
{
	dr_record = fopen("F:\\PAA\\FONT\\BEZIER.TXT", "w");
	dr_construct(&dr_ax, "ax");
	dr_construct(&dr_bx, "bx");
	dr_construct(&dr_cx, "cx");
	dr_construct(&dr_ay, "ay");
	dr_construct(&dr_by, "by");
	dr_construct(&dr_cy, "cy");
	dr_construct(&dr_vx, "vx");
	dr_construct(&dr_vy, "vy");
}

static void print_drs()
{
	dr_print(&dr_ax);
	dr_print(&dr_bx);
	dr_print(&dr_cx);
	dr_print(&dr_ay);
	dr_print(&dr_by);
	dr_print(&dr_cy);
	dr_print(&dr_vx);
	dr_print(&dr_vy);
	fclose(dr_record);
}
#endif /* LATER

