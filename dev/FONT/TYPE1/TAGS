t1pointer AT1.C /^char *t1pointer= (char*)(&t1
t1_fullname AT1.C /^char t1_fullname[256];		/* F
t1_chars AT1.C /^int t1_chars;			/* Chars in 
t1_width AT1.C /^int t1_width;			/* Current c
t1_minx AT1.C /^int t1_minx,t1_miny,t1_maxx,
t1_miny AT1.C /^int t1_minx,t1_miny,t1_maxx,
t1_maxx AT1.C /^int t1_minx,t1_miny,t1_maxx,
t1_maxy AT1.C /^int t1_minx,t1_miny,t1_maxx,
dbgat3 AT1.C /^int dbgat3=0;
databyte AT1.C /^unsigned char databyte;
usermap AT1.C /^char *usermap[224];		      /
charmap AT1.C /^char **charmap = isomap;	   
ostream AT1.C /^FILE *ostream=NULL;
rtype1 AT1.C /^int rtype1(int hdronly)
a1lastx AT1.C /^int a1lastx,a1lasty;
a1lasty AT1.C /^int a1lastx,a1lasty;
at1_open AT1.C /^at1_open(char *fname)
at1_get_char AT1.C /^at1_get_char(int ch)
at1_close AT1.C /^at1_close(void)
dump_at1 AT1.C /^dump_at1()
beh PLTEXT.C /^} beh;
fstream PLTEXT.C /^FILE *fstream;
tx_ptct PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_x1 PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_y1 PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_y2 PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_w PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_flag PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
thisx PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
pbase PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
spc_size PLTEXT.C /^int tx_ptct,tx_x1,tx_y1,tx_y
tx_minx PLTEXT.C /^int tx_minx,tx_miny;
tx_miny PLTEXT.C /^int tx_minx,tx_miny;
txstat PLTEXT.C /^int txstat;
error_in_font PLTEXT.C /^int error_in_font=0;
fontct PLTEXT.C /^short fontct;
fidptr PLTEXT.C /^long fidptr,fixptr,fdptr;
fixptr PLTEXT.C /^long fidptr,fixptr,fdptr;
fdptr PLTEXT.C /^long fidptr,fixptr,fdptr;
tx1 PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
tx2 PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
ty1 PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
ty2 PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
txscale PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
tyscale PLTEXT.C /^float tx1,tx2,ty1,ty2,txscal
nqh PLTEXT.C /^NQ_hdr nqh;
tx_stringq PLTEXT.C /^struct stringq tx_stringq =
tx_feel PLTEXT.C /^struct feel_tab tx_feel[]=
tx_edit PLTEXT.C /^struct edit_tab tx_edit[]=
pltx_setup PLTEXT.C /^pltx_setup(void)
do_pltx PLTEXT.C /^do_pltx(int forced)
select_font PLTEXT.C /^select_font(void)
rdy_txdia PLTEXT.C /^rdy_txdia(void)
tx_ok PLTEXT.C /^tx_ok(Flicmenu *m)
tx_can PLTEXT.C /^tx_can(Flicmenu *m)
enter_text PLTEXT.C /^enter_text(void)
cont_warned PLTEXT.C /^int cont_warned;
lookup_string PLTEXT.C /^lookup_string(char *string,i
get_fntchar PLTEXT.C /^get_fntchar(int ch,int useof
tx_to_world PLTEXT.C /^tx_to_world(int xin,int yin,
bez_fix PLTEXT.C /^bez_fix(int pt,int infix,int
nq_open PLTEXT.C /^nq_open(char *fname)
nq_close PLTEXT.C /^int nq_close(void)
nq_get_char PLTEXT.C /^nq_get_char(int index)
be_open PLTEXT.C /^be_open(char *fname)
be_close PLTEXT.C /^int be_close(void)
be_get_char PLTEXT.C /^be_get_char(int index)
TRUE TYPE1.H /^#define TRUE    1
FALSE TYPE1.H /^#define FALSE   0
EOS TYPE1.H /^#define EOS     '\0'
point TYPE1.H /^typedef double point[2];
X TYPE1.H /^#define X   0
Y TYPE1.H /^#define Y   1
cscommand TYPE1.H /^enum cscommand {
file_section TYPE1.H /^typedef enum { Header, FontI
ELEMENTS TYPE1.H /^#define ELEMENTS(array) (siz
abs TYPE1.H /^#define abs(x)   ((x) < 0   
max TYPE1.H /^#define max(a,b) ((a) >  (b)
min TYPE1.H /^#define min(a,b) ((a) <= (b)
NCdefs TYPE1.H /^#define NCdefs  300         
