#include "errcodes.h"

char flicname[PATH_SIZE];
Flic *theflic;
int  num_frames;

char *mainmenu[] = {
	"Set Options",
	"Play",
	"Play Once",
	"Play Timed (10 secs)",
	"Play Count (10 frames)",
	"Play Until <ESC>",
	"Seek test (10 random)",
	"Exit"
};

void wait(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	int dmy;

	WaitClick(&dmy, &dmy, &dmy, &dmy, &dmy);
}

void test_options(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	static int	speed		  = -1;
	static int	input_stops   = 0;
	static int	see_mouse	  = 0;
	int 		selection;
	char		stopc;
	char		mousec;
	char		speedline[40];
	char		stopsline[40];
	char		mouseline[40];
	char		*menulines[] = {speedline, stopsline, mouseline,
							   " Exit (Set options)", " Cancel (Discard Changes)"};

	do	{
		stopc = mousec = ' ';
		if (input_stops)
			stopc = '*';
		if (see_mouse)
			mousec = '*';
		sprintf(speedline, " Speed (%d)", speed);
		sprintf(stopsline, "%cInput stops playback", stopc);
		sprintf(mouseline, "%cSee mouse during playback", mousec);
		selection = Qmenu(menulines, Array_els(menulines), "Options:");
		switch (selection) {
			case 0:
				break;
			case 1:
				Qnumber(&speed, -1, 1000, "New speed:");
				break;
			case 2:
				input_stops = !input_stops;
				break;
			case 3:
				see_mouse = !see_mouse;
				break;
			case 4:
				FlicOptions(theflic, speed, input_stops, see_mouse, NULL, 0, 0);
				/* fall thru */
			default:
				return; /* musta been Err_abort */
		}
	} while (selection != 0);

}

void test_seek(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	int i, frame;

	for (i = 0; i < 10; ++i) {
		frame = rnd(num_frames);
		FlicSeekFrame(theflic, frame);
		printf("Now showing frame %d", frame);
		wait();
	}
}

void test_play(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	FlicPlay(theflic);
}

void test_play_once(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	FlicPlayOnce(theflic);
}

void test_play_timed(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	FlicPlayTimed(theflic, 10000);
}

void test_play_count(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	FlicPlayCount(theflic, 10);
}

int detector(Flic *f, void *u, long loop, long frame, long nframes)
/*****************************************************************************
 *
 ****************************************************************************/
{
	int dmy, key;

	PollInput(&dmy, &dmy, &dmy, &dmy, &key);
	return ((key & 0x00FF) != '\x1B');
}

void test_play_until(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	FlicPlayUntil(theflic, detector, NULL);
}

Errcode test_flic_info(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	Errcode err;
	int 	width, height, speed, frames;

	if (Success != (err = FlicInfo(flicname, &width, &height, &speed, &frames))) {
		return Qerror(err, "Cannot open flic file '%s'", flicname);
	}

	Qtext("Flic file %s:\n"
		  "  Width:  %d\n"
		  "  Height: %d\n"
		  "  Speed:  %d\n"
		  "  Frames: %d\n",
		  flicname, width, height, speed, frames);

	num_frames = frames; /* set global var for seek test */

	return Success;
}


void main(void)
/*****************************************************************************
 *
 ****************************************************************************/
{
	int 	selection;
	Errcode err;

	Clear();

	do	{
		selection = Qfile(".FL?;.CEL", "Use",
						flicname, flicname, FALSE, "Flic for testing:");
		if (selection == 0) {
			exit(0);
		}
		if (Success == (err = test_flic_info())) {
			theflic = FlicOpen(flicname);
		}
	} while (err != Success);


	do	{
		FlicRewind(theflic);
		selection = Qmenu(mainmenu, Array_els(mainmenu), "Choose action:");
		switch (selection) {
			case 1:
				test_options();
				break;
			case 2:
				test_play();
				break;
			case 3:
				test_play_once();
				break;
			case 4:
				test_play_timed();
				break;
			case 5:
				test_play_count();
				break;
			case 6:
				test_play_until();
				break;
			case 7:
				test_seek();
				break;
			default:
				break; /* abort or EXIT, ignore */
		}
	} while (selection > 0);

	FlicClose(theflic);
	exit(0);
}
