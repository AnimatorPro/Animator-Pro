#CFLAGS= -d2
!include "\paa\make.inc"

# add -s (disable stack overflow checks) to avoid undefined reference to _stk
CPF = -j -3s -fpi -w2 -s -I$(IL) $(EXTCPF)

libs: trdutil.lib cutil.lib
	@cd
	@echo libs made

## very low level utilities, assembler interfaces etc

LOWUTILO = \
 dosecode.obj doserror.obj dosmfree.obj dossvmod.obj\
 dosgvmod.obj dosvblan.obj i86_inb.obj i86_inw.obj i86_outb.obj i86_outw.obj\
 i86_swou.obj i86dswap.obj i86swap.obj ptrenorm.obj ptrtoint.obj\
 fastclk.obj stackchk.obj serial.obj setgs.obj

## tempory file system compatible memory management

MEMTRDO = \
	dpmiutil.obj memtrdlo.obj memtrd.obj memgetrd.obj

## "C" malloc and free memory management

MEMCO = \
	memclow.obj memgetc.obj

## basic memory oriented utilities

MEMO = \
 mempeek.obj membcont.obj membcopy.obj membkcpy.obj\
 membnon0.obj membsame.obj membset.obj memcask.obj memcrc.obj\
 memdstuf.obj memnulod.obj memswap.obj\
 memwcopy.obj memwstuf.obj memxlate.obj\
 memxorbt.obj memzero.obj memeallo.obj memgfree.obj\
 memfreez.obj blockall.obj

## string and data oriented utilities

STRO = \
 encrypt.obj newname.obj parsemi.obj strclone.obj strcrc.obj \
 trstring.obj txtcmp.obj txtncmp.obj \
 upc.obj wildcmp.obj

## string formatting utilities sprintf and the like

FORMATFO = \
 focountf.obj folenf.obj fonsprtf.obj forparse.obj formatf.obj formatxt.obj\
 fosprint.obj fovcntf.obj fovnsptf.obj ftextf.obj ftextfmt.obj ftxtfarg.obj\
 sftextf.obj vsftextf.obj snftextf.obj vnftextf.obj

## linked list utilities including a shell sort

LINKLISTO = \
 dladhead.obj dladtail.obj dlcirnex.obj dlcirpre.obj dlclone.obj\
 dlfndhdr.obj dlgethd.obj dlgettl.obj dlinit.obj dlinsaft.obj\
 dlinsbef.obj dlinscmp.obj dlisin.obj dlisort.obj dlistlen.obj\
 dlremnod.obj dlseehd.obj dlseetl.obj dlswap.obj dltohead.obj\
 dltotail.obj nalngest.obj namein.obj namesort.obj argparse.obj\
 shelsort.obj slistel.obj slistix.obj slistlen.obj slfree.obj\
 slremel.obj slrevers.obj slstjoin.obj slstlast.obj slstsort.obj textin.obj

## integer and fixed point math utilities

IMATHO = \
 imabs.obj imclcdst.obj imlcmult.obj immax.obj imptlrot.obj imrotate.obj\
 imrsclby.obj imsieve.obj imsincos.obj imsqroot.obj imssclby.obj\
 imusclby.obj imintmin.obj imintmax.obj imintabs.obj fixpoint.obj


## floating point math utilities

FMATHO = \
 fmath.obj

### "C" conditional compilations ********

memgetrd.obj: memalloc.c\
			  $(IL)release.h\
			  $(IL)memory.h
	$(CC) memalloc.c $(CPF) /dTRD_MEMORY -fo=$*.obj

memgetc.obj: memalloc.c\
			 $(IL)release.h\
			 $(IL)memory.h
	$(CC) memalloc.c $(CPF) /dCLIB_MEMORY -fo=$*.obj

## utilities library with all modules and temp file (trd) memory allocation

trdutil.lib: makefile\
			$(LOWUTILO) lowutil.obs\
			$(MEMTRDO)	memtrd.obs\
			$(MEMO) 	memutil.obs\
			$(STRO) 	strutil.obs\
			$(LINKLISTO) linklist.obs\
			$(FORMATFO) formatf.obs\
			$(IMATHO)	intmath.obs\
			$(FMATHO)	fpmath.obs
 wlib /n trdutil.lib \
	@lowutil.obs @memtrd.obs @memutil.obs @strutil.obs \
	@linklist.obs @formatf.obs @intmath.obs @fpmath.obs

## utilities library with all modules and "C" memory allocation

cutil.lib: makefile\
			$(LOWUTILO) lowutil.obs\
			$(MEMCO) memc.obs\
			$(MEMO) memutil.obs\
			$(STRO) strutil.obs\
			$(LINKLISTO) linklist.obs\
			$(FORMATFO) formatf.obs\
			$(IMATHO) intmath.obs\
			$(FMATHO) fpmath.obs
 wlib /n cutil.lib \
	@lowutil.obs @memc.obs @memutil.obs @strutil.obs \
	@linklist.obs @formatf.obs @intmath.obs @fpmath.obs

