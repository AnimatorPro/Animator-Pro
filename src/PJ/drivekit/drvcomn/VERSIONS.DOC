Common driver routines revision notes...

 NOTE:  Originally, the common driver routines were an integral part of
        the VESA driver.  At v20, they were split out for use in both the
        vesa and svga autodetect drivers (and maybe others, some day?)  At
        v24, they were placed into their own subdirectory. These notes track
        thru all the changes.


 001 thru 014       Development and testing.

 015 thru 019       Minor bugfixes and some speed enhancements, brun and lc
                    decompressors added.

 019    06/01/91    The vesa driver was split into several vesa-specific
                    modules and a large set of 'common driver routines'.
                    The idea is that the common driver routines can be used
                    (often without any changes at all) for most any driver
                    for supervga hardware.  So, now it's easy to clone a new
                    hardware-specific driver from this code; all you have to
                    do is supply detect/setup and bankswitching, and use the
                    code in the common driver library for the rest.

  020    06/10/91   A little fine-tuning to finish up the separation of vesa
                    and common routines.  This was distributed to Jim & Jake.

  021    06/22/91   Fixed a bug in DRVRAST.ASM that was glitching out the
                    xor_to/from_rast() routines when the hardware bytes-per-
                    row was not the same as the hardware display width (and
                    consequently not the same as the bytemap bpr).  It will be
                    the rare piece of hardware that has differening pitch and
                    width, so the fix is just to punt to the generic library
                    when such hardware is used.  Also fixed a bug in
                    DRVUNSS2.ASM that was glitching on some split lines. Now,
                    instead of calling put_hseg and set_hline to handle split
                    lines, there's a ton of messy special-case code right in
                    the unss2 routine (but at least it works).

  022     06/28/91  Fixed a glitch in set_xmode() in vesaintf.asm: if the
                    width value passed in is zero, setup of a graphics mode
                    is bypassed, since zero-width is a key that says the
                    caller wants a return to a non-graphics mode.  (And,
                    since the caller also passes a zero height, we were
                    trying to build a ytable for a 4-billion-line display!)
                    Also, did a tiny tweak to the unss2 routine to slightly
                    bias its performance to make it faster to get to a copy
                    of a literal than to a run of a word.  This is based on
                    the fact that storing the run is a bit faster than
                    storing a copy, and also the new ss2 compressor will
                    always issue a copy-1 rather than run-1 when a delta is
                    a single word.

 023      07/12/91  Jim K. integrated in Jim Byers' fix to line 254 of
                    device.c so that Everex TC and other boards with
                    non-8-bit packed pixel arrangements don't screw us up.

024 07/30/91        Split common driver routines into their own directory.
                    Also, all global names now start with pj_ for FLILIB
                    compatibility.

