

The way error status codes are to be passed back from routines.

	o -	Ecodes are of type SHORT or larger. 

	o -	Ecodes are negative if an error occurred.
		0 or positive values are the normal data a function is to send back.

			ie: if((retlen = read(buff,file)) < 0)
					goto error;

	o - If a routine is to allocate a data area AND pass back an Ecode the
		Ecode should be the returned value an &data_pointer passed 
		in to the routine. This avoids size and sign extention problems on
		error codes. and makes code more consistent.  Certainly, any routine
		that does not pass back an error code can pass back whatever you want.

			ie: if((err = alloc_the_thing(&thing_ptr, init_spec)) < 0)
					goto error;

			NOT: if((thing_ptr = alloc_the_thing(&err)) == NULL)
					goto error;

			OK:  if((thing_ptr = alloc_thing()) == NULL)
				 {
				 	err = Err_no_memory;
					goto error;
				 }

