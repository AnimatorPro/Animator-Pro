Poco is a subset of the C language.  Poco is also a macro language for
PJ.  

Things in ANSI C but not Poco:
	o - Structure assignments.
	o - Structure function return values or parameters.
	o - The ternary operator:
		expression ? expression : expression

Other limitations:
	o - Type casting between pointers and integers is not allowed.
	o - no further cases are allowed in a switch after default.
	o - Boolean expressions are always evaluated fully in Poco, while
	    they are short-cut evaluated in C.  Therefore while this
		statement might work in C, it could cause a run-time error in Poco:
			if ( pt != NULL && *pt == 1)
				do_something...
	o - Functions must use Ansi C/C++ parameter declarations.
	    	dot(int x, int y)
		rather than
			dot(x,y)
			int x,y;

Extra  features
	o - // comments out the rest of the line (like in C++)
	o - Local variables start out initialized to zero (NULL for pointers).
	o - NULL pointer references are trapped.
	o - Out of bounds array indexes and pointer references are trapped.
	o - You can declare a variable anywhere, not just at the
	    start of a block.

Types in Poco:
	char	8 bit integer
	short	16 bit integer
	int		16 or 32 bit integer (depending on machine)
	long	32 bit integer
	float	32 or 64 bit floating point (depending on machine)
	double	64 bit floating point
	void	no value.  Void * is a 'generic' pointer and is the type of NULL.
			Other pointers may be converted to and from void *  without
			casting.
	FILE	Actually only allowed as a FILE *.  File handle for 
			fread() fwrite()family of functions.
	Screen  Only allowed as Screen *.  Screen handle for graphics function.


