//rainbow.poc - This convert the current cluster into a rainbow.


typedef struct
	{
	int r,g,b;
	} RGB;
typedef struct
	{
	int h,l,s;
	} HLS:

main()
{
	int *cluster, cluster_size;
	RGB rgb;
	HLS start,end;
	HLS hls;
	double dh, dl, ds;
	double percent, divc;
	int i;

	GetCluster(&cluster_size, &cluster);
	GetColorMap(cluster[0], &rgb.r, &rgb.g, &rgb.b);
	RGBtoHLS(rgb.r, rgb.g, rgb.b, &start.h, &start.l, &start.s);
	GetColorMap(cluster[cluster_size-1], &rgb.r, &rgb.g, &rgb.b);
	RGBtoHLS(rgb.r, rgb.g, rgb.b, &end.h, &end.l, &end.s);
	dh = end.h - start.h;
	if (dh <= 0)
		dh += 256.0;
	dl = end.l - start.l;
	ds = end.s - start.s;
	divc = cluster_size-1;
	for (i=0; i<cluster_size; ++i)
		{
		percent = ((double)i)/divc;
		hls.h = start.h + percent*dh;
		hls.l = start.l + percent*dl;
		hls.s = start.s + percent*ds;
		HLStoRGB(hls.h, hls.l, hls.s, &rgb.r, &rgb.g, &rgb.b);
		SetColorMap(cluster[i], rgb.r, rgb.g, rgb.b);
		}
	free(cluster);
}

