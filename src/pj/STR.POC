
main()
{

char *a;
char *b;
char *c;
char *d;
int answer;
int i;

a="this is a test";
b="this is a TEST";

answer=strcmp(a,b);
Qquestion ( " strcmp test = %d\n%s\n%s", answer, a, b);

answer=strcmp(b,a);
Qquestion ( " strcmp test 2 = %d\n%s\n%s", answer, b, a);

answer=strcmp(a,a);
Qquestion(" strcmp test 3 = %d\n%s\n%s", answer, a,a);

//answer=strcmp(d,c);
//Qquestion(" strcmp test 4 = %d\n%s\n%s", answer, d,c);
// this attempt yields a NULL pointer error as expected

answer=stricmp(a,b);
Qquestion(" stricmp test 1 = %d\n%s\n%s", answer,a,b);

answer=stricmp(b,a);
Qquestion(" stricmp test 2 = %d\n%s\n%s", answer,b,a);

answer = stricmp(a,a);
Qquestion(" stricmp test 3 = %d\n%s\n%s", answer,a,a);

//answer=stricmp(c,d);
//Qquestion(" stricmp test 4 = %d\n%s\n%s", answer,c,d);
// as above

for(i=16;i>-3;i--)
     {
     answer = strncmp(a,b,i);
     Qquestion(" strncmp test %d = %d\n%s\n%s", i, answer, a,b);
     }
     // NOTE: why does this yield 32 as the answer when true or negative?

for ( i=-2; i<18 ; i++ )
     {
     answer = strncmp(b,a,i);
     Qquestion(" strncmp test %d = %d\n%s\n%s", i, answer, b, a);
     }
     // same as above (is it ok to test on a negative i?)

answer = strlen(a);
     Qquestion ("strlen test 1 = %d\n%s",answer,a);

//answer = strlen(a+b);
//   Qquestion ("strlen test 2 = %d\n%s",answer,a+b);
//   THIS ONE CAUSED A PROGRAM TERMINATION WHEN ENCOUNTERED

answer = strlen(a+c);
     Qquestion ("strlen test 3 = %d\n%s",answer,a+c);

//answer = strlen(c);
//   Qquestion ("strlen test 4 = %d\n%s",answer,c);
//    this one didnt work, which was expected

}
