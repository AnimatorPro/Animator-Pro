
test_split(char *name)
{
char path[80];
char dev[3], dir[66], file[9], suffix[5];
ErrCode err;

strcpy(path,name);
if ((err = fnsplit(path, dev, dir, file, suffix)) < 0)
	Qerror(err, "problem parsing %s", name);
Qtext("%s splits into:\n\t%s\n\t%s\n\t%s\n\t%s\n", path,dev,dir,file,suffix);
if ((err = fnmerge(path,dev,dir,file,suffix)) < 0)
	Qerror(err, "problem merging %s", name);
Qtext("and comes back to %s", path);
}

test_dir(char *pat, Boolean dirs)
{
char **list;
int count;
int select;
int spos = 0;
char path[80];
char lbuf[100];

count = DirList(&list, pat, dirs);
GetDir(path);
sprintf(lbuf, "List of %s", path);
Qlist(&select, list, count, &spos, lbuf);
}

main()
{
char wild[10];

for (;;)
	{
	if (!Qstring(wild, sizeof(wild), "Choose wild card?"))
		break;
	test_dir(wild, 1);
	}
}


