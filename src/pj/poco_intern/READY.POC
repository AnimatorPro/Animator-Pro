#include "errcodes.h"

/* Read a Y component file. */

#define WIDTH 352
#define HEIGHT 240

Errcode read_y(char *file_name, int width, int height)
{
FILE *f;
int y;
char *buf;
Screen *s = GetPicScreen();

if ((f = fopen(file_name, "rb")) == NULL)
	return Qerror(Err_no_file, "%s", file_name);
if ((buf = malloc(width)) == NULL)
	{
	fclose(f);
	return Qerror(Err_no_memory, "Couldn't allocate line buffer of %d bytes"
	, width);
	}
for (y=0; y<height; ++y)
	{
	fread(buf, width, 1, f);
	SetBlock(s, buf, 0, y, width, 1);
	}
free(buf);
fclose(f);
}

omain()
{
int i;
static char file_name[80] = "e:\\mpegsrc\\short1.y";
int width, height;
char lastc;

for (;;)
	{
	if (!Qfile(".y;.u;.v"
	, "Load", file_name, file_name, FALSE, "Load yuv file"))
		return;
	lastc = file_name[strlen(file_name)-1];
	if (lastc == 'y' || lastc == 'Y')
		{
		width = WIDTH;
		height = HEIGHT;
		}
	else
		{
		width = WIDTH/2;
		height = HEIGHT/2;
		}
	ResizeReset(width,height);
	for (i=0; i<256; ++i)
		SetColorMap(i, i, i, i);
	read_y(file_name, width, height);
	}
}

main()
{
int i;
char file_name[80];

ResizeReset(WIDTH,HEIGHT);
for (i=0; i<256; ++i)
	SetColorMap(i,i,i,i);
SetFrameCount(6);
for (i=1; i<=6; ++i)
	{
	sprintf(file_name, "e:\\mpegsrc\\short%d.y", i);
	read_y(file_name,  WIDTH, HEIGHT);
	NextFrame();
	}
}