// CELPLC.POC VERSION 1.1    drag and turn a cell durning paste operation
//              drag to move the cel
//              right click to turn cel x degrees
//              press <-> key to reverse direction of turns
//              press <0> key to adjust the number of degrees per turn
//              press <space> key to exit without paste but with reposition of buffer
//              press <return> bar to exit and finalize the paste of the cel buffer
//              press <esc> to exit and leave cel buffer unchanged
//
//	Charles G. Rohn
//	72 Canterbury RD
//	Brewer, ME 04412
//
//	CIS ID 76020,1273
//
main()
{
int xbegin,ybegin;
int x,y,lft,right,key;
int direc=1;
char ibuf[16];
int cbuf;
Screen *oldscr,*picscr;
int ecode,rad;
int False=0,adjust,exitkey=0;
int newang=5;
double ang=5,mang,abegin;

oldscr = GetUndoScreen();
picscr = GetPicScreen();

if (!CelExists()) goto finish;
CelWhere(&xbegin,&ybegin,&abegin);
SetFilled(1);
GetInk(ibuf);
cbuf = GetColor();

SetInk("Opaque");
key = 0;

SetAbort(False);
while (exitkey == 0) 
	{
contdrag:
	WaitInput(&x,&y,&lft,&right,&key);
	if (right == 2) {       /* right press indicated by right = 2 */
				mang = ang * 5.625 * direc;
                 /* see documentation on bug  requiring the 5.625 multiplier */
				CelTurn(mang);
				CopyScreen(oldscr,picscr);
				CelPaste();
			    }
	if (lft ==1)      {     /* drag indicated by lft=1 */
				CopyScreen(oldscr,picscr);
				CelMoveTo(x,y);
				CelPaste();
			    }

	switch (key)
		{
		case 3117 : /* <-> Key entered */
			   direc = -direc;
			   break;				

		case 561 :  ang = 1; /* <1> key entered */
			   break;

		case 818:  ang = 5; /* <5> key entered */
			   break;

		case 2864: /* 0 entered to ask for adjustment dialogue box*/
			    adjust = Qnumber(&newang,1,180,"Enter the degrees of rotation");
			   if (adjust) ang = newang;	
			   break;

		case 283: /* ESC cancel all changes */
			   CopyScreen(oldscr,picscr);
			   CelMoveTo(xbegin,ybegin);
			   CelTurnTo(abegin);
			   exitkey = 1;
			   break;

		case 14624: /* Space No paste but leave changes to cel position */
			   CopyScreen(oldscr,picscr);
			   exitkey = 1;
			   break;

		case 7181: /* Return complete paste and exit */
			   exitkey = 1;
			   break;

		}
	}

finish:
SetInk(ibuf);
SetColor(cbuf);
}

