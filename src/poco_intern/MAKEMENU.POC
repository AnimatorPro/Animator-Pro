
Screen *savem,*undo,*pencel;

get_hit_boxes(FILE *out)
{
int x,y,w,h;
char name_buf[20];

for (;;)
	{
	CopyScreen(pencel,undo);
	if (!RubBox(&x,&y,&w,&h))
		{
		if (Qquestion("Done making hit boxes?"))
			break;
		else
			continue;
		}
	name_buf[0] = 0;
	Box(x, y, w, h);
	if (Qstring(name_buf, sizeof(name_buf)-1, "Name of Button?"))
		{
		fprintf(out, "%s %d %d %d %d\n", name_buf, x,y,w,h);
		}
	else
		{
		CopyScreen(undo,pencel);
		}
	}
}

main()
{
char outname[80];
FILE *out;
Boolean ofill;
char oink[16];
int ostrength;
int obsize;
int w,h;

/* find the screens */
GetSize(&w,&h);
if (Qerror(AllocScreen(&savem,w,h), "Can't allocate save screen") < 0)
	return;
undo = GetUndoScreen();
pencel = GetPicScreen();
/* Save the PJ state variables we're going to use somewhere */ 
ofill = GetFilled();
GetInk(oink);
ostrength = GetInkStrength();
obsize = GetBrushSize();
/* And set state variables */
SetFilled(0);
SetInk("glass");
SetInkStrength(50);
SetBrushSize(0);
outname[0] = 0;
if (Qfile(".hit", "Save", outname, outname,1,"File for hit box definitions"))
	{
	if ((out = fopen(outname, "w")) != NULL)
		{
		CopyScreen(pencel,savem);
		get_hit_boxes(out);
		CopyScreen(pencel, undo);
		CopyScreen(savem, pencel);
		fclose(out);
		}
	}
FreeScreen(&savem);
SetFilled(ofill);
SetInk(oink);
SetInkStrength(ostrength);
SetBrushSize(obsize);
}
