// Program to test some of the build-it-yourself menu functions.  (Low level physical
// screen io and input.


drizzle_all_over()
{
	Screen *pscreen = GetPhysicalScreen();
	int x,y,left,right,key;

	for (;;)
		{
		PhysicalWaitInput(&x,&y,&left,&right,&key);
		if (left)
			SetPixel(pscreen,  255, x, y);
		if (right)
			break;
		}
}

random(int max)
{
	return rand()%max;
}

lotsa_boxes()
{
	int x,y,left,right,key;
	int randw;
	Screen *pscreen = GetPhysicalScreen();
	int sw,sh;

	GetScreenSize(pscreen,&sw,&sh);
	for (;;)
		{
		PhysicalPollInput(&x, &y, &left, &right, &key);
		if (right)
			break;
		randw = random(sh/2);
		SetBox(pscreen, random(256), x-randw, y-randw, 2*randw, 2*randw);
		}
}

menu_text()
{
	int x,y,left,right,key;
	int x1,y1;
	Screen *pscreen = GetPhysicalScreen();

	for (;;)
		{
		PhysicalWaitClick(&x,&y,&left,&right,&key);
		if (right)
			break;
		if (left)
			MenuText(pscreen, 255, x,y,"Hello");
		}
}

hollow_box(Screen *s, int color, int x, int y, int width, int height)
{
	SetBox(s, color, x, y, width, 1);
	SetBox(s, color, x, y, 1, height);
	SetBox(s, color, x, y+height-1, width, 1);
	SetBox(s, color, x+width-1, y, 1, height);
}

typedef struct rect
	{
	int x,y,w,h;
	} Rect;


draw_button(Screen *s, Rect *r, char *text
, int background_color, int outline_color, int text_color)
{
	int x,y;

	SetBox(s, background_color, r->x, r->y, r->w, r->h);
	hollow_box(s, outline_color, r->x, r->y, r->w, r->h);
	x = r->x + (r->w - MenuTextWidth(text))/2;
	y = r->y + (r->h - MenuTextHeight())/2;
	MenuText(s, text_color, x, y, text);
}

psuedo_menus()
{
Screen *pscreen = GetPhysicalScreen();
int pw, ph;
Rect m;
Rect a,b;
int black, grey, light, bright, red;


GetMenuColors(&black, &grey, &light, &bright, &red);
GetScreenSize(pscreen, &pw, &ph);
m.w = pw/3;
m.h = ph/3;
m.x = (pw-m.w)/2;
m.y = (ph-m.h)/2;
SetBox(pscreen, light, m.x, m.y, m.w, m.h);
hollow_box(pscreen, grey, m.x, m.y, m.w, m.h);
a.w = b.w = m.w*0.67;
a.h = b.h = MenuTextHeight()*1.5;
a.x = b.x = m.x + (m.w - a.w)/2;
a.y = m.y + a.h*2;
b.y = a.y + a.h*2;
draw_button(pscreen, &a, "Ok Boss", bright, grey, red);
draw_button(pscreen, &b, "No Way Dude", light, grey, black);
}

scroll_em()
{
Screen *pscreen = GetPhysicalScreen();
int pw, ph;
int x,y,left,right,key;
char *buf;

GetScreenSize(pscreen, &pw, &ph);
buf = calloc(pw,ph);
for (;;)
	{
	PhysicalPollInput(&x, &y, &left, &right, &key);
	if (right || key)
		break;
	GetBlock(pscreen, buf, 0,0,pw,ph);
	SetBlock(pscreen, buf, 0, 10, pw, ph);
	SetBlock(pscreen, buf, 0, 10-ph, pw, ph);
	}
}


char *main_choices[] =
	{
	"Drizzle All Over",
	"Lotsa Boxes",
	"Menu Text",
	"Fake Menus",
	"Scrollin",
	"Exit",
	};

main()
{
for (;;)
	{
		switch (Qmenu(main_choices, Array_els(main_choices), "What to do"))
			{
			case 0:
				return;
			case 1:
				drizzle_all_over();
				break;
			case 2:
				lotsa_boxes();
				break;
			case 3:
				menu_text();
				break;
			case 4:
				psuedo_menus();
				break;
			case 5:
				scroll_em();
				break;
			}
	}
}
