
int time_scale;
int time_frames;
int time_ix;

/* incorporate ease in, ping pong, etc into time scale */
calc_time_scale(ix, intween)
int ix, intween;
{
time_ix = ix;
if (vs.ado_pong)
	{
	time_frames = (intween+1)/2;
	if (time_ix > time_frames)
		time_ix = time_frames - (time_ix-time_frames);
	}
else
	{
	time_frames = intween - vs.ado_complete;
	if (vs.ado_reverse)
		{
		time_ix = time_frames - time_ix;
		}
	}
if (vs.ado_tween)
	{
	if (vs.ado_ease)
		{
		/* find index into sine table */
		time_scale = rscale_by( TWOPI/2+1, time_ix, time_frames) - TWOPI/4;
		time_scale = isin(time_scale);
		time_scale /= 2;
		time_scale += SCALE_ONE/2;
		}
	else
		time_scale = rscale_by(SCALE_ONE, time_ix, time_frames);
	}
else
	time_scale = SCALE_ONE;
}

