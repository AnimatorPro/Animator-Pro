/* test for deeply nested structure handling */
#pragma poco echo "expect>Success"

#define TRUE  1
#define FALSE 0

typedef struct { int a; int b; } S1;
typedef struct {S1 a; int b; } S2;
typedef struct {S2 a; int b; } S3;
typedef struct {S3 a; int b; } S4;
typedef struct {S4 a; int b; } S5;
typedef struct {S5 a; int b; } S6;
typedef struct {S6 a; int b; } S7;
typedef struct {S7 a; int b; } S8;
typedef struct {S8 a; int b; } S9;
typedef struct {S9 a; int b; } S10;
typedef struct {S10 a; int b; } S11;
typedef struct {S11 a; int b; } S12;
typedef struct {S12 a; int b; } S13;
typedef struct {S13 a; int b; } S14;
typedef struct {S14 a; int b; } S15;
typedef struct {S15 a; int b; } S16;
typedef struct {S16 a; int b; } S17;
typedef struct {S17 a; int b; } S18;
typedef struct {S18 a; int b; } S19;
typedef struct {S19 a; int b; } S20;
typedef struct {S20 a; int b; } S21;
typedef struct {S21 a; int b; } S22;
typedef struct {S22 a; int b; } S23;

Boolean test_em(int *pt, int size)
{
int 	i;
Boolean rv = TRUE;
for (i = size-1; i >= 0; --i, ++pt)
	{
	printf("%d ", *pt);
	if (i != 23-*pt)
		rv = FALSE;
	}
printf("\n");
return rv;
}

main()
{
S23 s23;

s23.b = 23;
s23.a.b = 22;
s23.a.a.b = 21;
s23.a.a.a.b = 20;
s23.a.a.a.a.b = 19;
s23.a.a.a.a.a.b = 18;
s23.a.a.a.a.a.a.b = 17;
s23.a.a.a.a.a.a.a.b = 16;
s23.a.a.a.a.a.a.a.a.b = 15;
s23.a.a.a.a.a.a.a.a.a.b = 14;
s23.a.a.a.a.a.a.a.a.a.a.b = 13;
s23.a.a.a.a.a.a.a.a.a.a.a.b = 12;
s23.a.a.a.a.a.a.a.a.a.a.a.a.b = 11;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 10;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 9;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 8;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 7;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 6;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 5;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 4;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 3;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 2;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b = 1;
s23.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a = 0;
printf("Should see numbers 0 - 23...\n");
if (test_em((int *)&s23, sizeof(s23)/sizeof(int)))
	printf("Success");
else
	printf("Error");
}

