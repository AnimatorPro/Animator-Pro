bhashctl BHASH.C /^BhashCtl bhashctl;			// glob
free_bhash BHASH.C /^void free_bhash(void)
make_bhash BHASH.C /^Errcode make_bhash(void)
is_bhash BHASH.C /^Boolean is_bhash(void)	/* us
bclosest_col BHASH.C /^int bclosest_col(register Rg
cant_use_module CANTUSEM.C /^Errcode cant_use_module(Errc
valloc_bytemap CELALLOC.C /^Errcode valloc_bytemap(Raste
valloc_ramcel CELALLOC.C /^Errcode valloc_ramcel(Rcel *
clone_rcel CELALLOC.C /^Rcel *clone_rcel(Rcel *s)
clone_any_rcel CELALLOC.C /^Rcel *clone_any_rcel(Rcel *s
valloc_anycel CELALLOC.C /^Errcode valloc_anycel(Rcel *
pj_col_load COLLOAD.C /^Errcode pj_col_load(char *na
empty_str COMMONST.C /^char empty_str[] = "";
space_str COMMONST.C /^char space_str[] = " ";
r_str COMMONST.C /^char r_str[] = "r";
w_str COMMONST.C /^char w_str[] = "w";
rb_str COMMONST.C /^char rb_str[] = "rb";
wb_str COMMONST.C /^char wb_str[] = "wb";
unnamed_str COMMONST.C /^char *unnamed_str;
any_continue COMMONST.C /^char *any_continue;
enter_choice COMMONST.C /^char *enter_choice;
continue_str COMMONST.C /^char *continue_str;
yes_str COMMONST.C /^char *yes_str;
no_str COMMONST.C /^char *no_str;
ok_str COMMONST.C /^char *ok_str;
cancel_str COMMONST.C /^char *cancel_str;
load_str COMMONST.C /^char *load_str;
save_str COMMONST.C /^char *save_str;
lrmenu_font_name COMMONST.C /^char *lrmenu_font_name;
menu_font_name COMMONST.C /^char *menu_font_name;
hrmenu_font_name COMMONST.C /^char *hrmenu_font_name;
please_wait_str COMMONST.C /^char *please_wait_str;
default_common_str COMMONST.C /^void default_common_str()
init_common_str COMMONST.C /^Errcode init_common_str(Soft
cleanup_common_str COMMONST.C /^void cleanup_common_str()
vconfg CONFIG.C /^AA_config vconfg = {  /* Ram
pj_insure_suffix CONFIG.C /^void pj_insure_suffix(char *
init_config CONFIG.C /^Errcode init_config(Boolean 
rewrite_config CONFIG.C /^Errcode rewrite_config(void)
cleanup_config CONFIG.C /^void cleanup_config()
pack_ctable CPACK.C /^void pack_ctable(Rgb3 *sourc
set_cursor_ccolor CURSXLAT.C /^void set_cursor_ccolor(Pixel
get_cursor_xlat CURSXLAT.C /^Tcolxldat *get_cursor_xlat()
get_default_cursor DEFLTCUR.C /^Rastcursor *get_default_curs
cant_find ERRCFIND.C /^void cant_find(char *name)
cant_load ERRCLOAD.C /^Errcode cant_load(Errcode er
cant_use_module ERRCUSEM.C /^Errcode cant_use_module(Errc
errline ERRLINE.C /^Errcode errline(Errcode err,
get_errtext ERRTEXT.C /^int get_errtext(Errcode err,
fli_pdr_name FLIPDR.C /^char fli_pdr_name[] = "=FLC.
fli_local_pdr FLIPDR.C /^Local_pdr fli_local_pdr = {
qfcb FONTREQ.C /^Qfont_cb *qfcb;
fmu_menu FONTREQ.C /^Menuhdr fmu_menu = {
font_req FONTREQ.C /^Errcode font_req(
gif_pdr_name GIFNAME.C /^char gif_pdr_name[] = "GIF.P
cinsert IMAGES.C /^Image cinsert =	IMAGE_INIT1(
ckill IMAGES.C /^Image ckill = IMAGE_INIT1(IT
zin IMAGES.C /^Image zin = IMAGE_INIT1(ITYP
zout IMAGES.C /^Image zout = IMAGE_INIT1(ITY
cdown IMAGES.C /^Image cdown = 	IMAGE_INIT1(I
cleft IMAGES.C /^Image cleft = 	IMAGE_INIT1(I
cright IMAGES.C /^Image cright = 	IMAGE_INIT1(
cup IMAGES.C /^Image cup = 	IMAGE_INIT1(ITY
cright2 IMAGES.C /^Image cright2 = 	IMAGE_INIT1
ctridown IMAGES.C /^Image ctridown = IMAGE_INIT1
ctriup IMAGES.C /^Image ctriup = IMAGE_INIT1(I
circ3_image IMAGES.C /^Image circ3_image = IMAGE_IN
leftright_arrs IMAGES.C /^Image *leftright_arrs[2] = {
updown_arrs IMAGES.C /^Image *updown_arrs[2]	= { &c
zoutin_arrs IMAGES.C /^Image *zoutin_arrs[2]	= { &z
pj_default_cmap INITCMAP.C /^Cmap *pj_default_cmap = &icm
pj_get_default_cmap INITCMAP.C /^void pj_get_default_cmap(Cma
jiffies_to_millisec JIFFYCON.C /^ULONG jiffies_to_millisec(US
millisec_to_jiffies JIFFYCON.C /^USHORT millisec_to_jiffies(U
return_to_main MAINRET.C /^void return_to_main(Errcode 
_f_o_rce_reference MATHHOST.C /^double _f_o_rce_reference(do
aa_mathlib MATHHOST.C /^Mathhost_lib aa_mathlib = {
__ACOS MATHHOST.C /^	__ACOS,
__ASIN MATHHOST.C /^	__ASIN,
__ATAN MATHHOST.C /^	__ATAN,
__ATAN2 MATHHOST.C /^	__ATAN2,
__COS MATHHOST.C /^	__COS,
__COSH MATHHOST.C /^	__COSH,
__EXP MATHHOST.C /^	__EXP,
__FMOD MATHHOST.C /^	__FMOD,
__LOG MATHHOST.C /^	__LOG,
__LOG10 MATHHOST.C /^	__LOG10,
__POW MATHHOST.C /^	__POW,
__SIN MATHHOST.C /^	__SIN,
__SINH MATHHOST.C /^	__SINH,
__SQRT MATHHOST.C /^	__SQRT,
__TAN MATHHOST.C /^	__TAN,
__TANH MATHHOST.C /^	__TANH,
minitime_sel MINITIME.C /^Button minitime_sel =  MB_IN
pj_read_palchunk PALREAD.C /^Errcode pj_read_palchunk(Jfi
pj_write_palchunk PALWRITE.C /^Errcode pj_write_palchunk(Jf
go_pdr_menu PDRMENU.C /^Errcode go_pdr_menu( char *h
pdr_load_picture PDRPIC.C /^Errcode pdr_load_picture(cha
clip_penwinrect PENCEL.C /^void clip_penwinrect(Rectang
set_pencel_size PENCEL.C /^Errcode set_pencel_size(SHOR
draw_flibord PENCEL.C /^void draw_flibord()
erase_flibord PENCEL.C /^void erase_flibord()
fliborder_off PENCEL.C /^void fliborder_off()
fliborder_on PENCEL.C /^void fliborder_on()
pj_read_pichead PICHEAD.C /^Errcode pj_read_pichead(Jfil
pic_anim_info PICINFO.C /^Errcode pic_anim_info(char *
pj_read_picbody PICLOAD.C /^Errcode pj_read_picbody(Jfil
load_pic PICLOAD.C /^Errcode load_pic(char *name,
pic_pdr_name PICPDR.C /^char pic_pdr_name[] = "=PIC.
pic_local_pdr PICPDR.C /^Local_pdr pic_local_pdr = {
save_pic PICSAVE.C /^Errcode save_pic(char *name,
qchoice QCHOICE.C /^int qchoice(USHORT *qc_flags
qchoicef QCHOICE.C /^int qchoicef(USHORT *qc_flag
soft_qchoice QCHOICE.C /^int soft_qchoice(USHORT *qc_
qreq_number QREQNUM.C /^Boolean qreq_number(short *i
qreq_string QREQSTR.C /^Boolean qreq_string(char *st
ud_qreq_number QREQUNUM.C /^Boolean ud_qreq_number(short
qscroller QSCROLL.C /^Boolean qscroller(
resource_exists RESEXIST.C /^Boolean resource_exists(char
req_resource_name RESOUREQ.C /^Boolean req_resource_name(ch
init_scodes SCODES.C /^Errcode init_scodes()
get_relvers SCODES.C /^void get_relvers(char *buf)
get_userid_string SCODES.C /^void get_userid_string(char 
get_userid SCODES.C /^LONG get_userid()
get_screen_ainfo SCRAINFO.C /^void get_screen_ainfo(Rcel *
old_video SCRCLOSE.C /^void old_video()
cleanup_screen SCRCLOSE.C /^void cleanup_screen()
go_resize_screen SCREENMU.C /^Errcode go_resize_screen(Err
init_input SCRNINIT.C /^Errcode init_input(void)
free_menu_font SCRNINIT.C /^void free_menu_font(void)
get_menu_font SCRNINIT.C /^Vfont *get_menu_font()
init_screen SCRNINIT.C /^Errcode init_screen(Screen_m
soft_continu_box SMUCONT.C /^Errcode soft_continu_box(cha
softerr SMUERR.C /^Errcode softerr(Errcode err,
soft_multi_box SMULTBOX.C /^Boolean soft_multi_box(char 
scale_pull SMUPULL.C /^void scale_pull( Menuhdr *mh
load_soft_pull SMUPULL.C /^Errcode load_soft_pull(
clip_soft_qreq_number SMUQRECN.C /^Boolean clip_soft_qreq_numbe
soft_qreq_number SMUQREQN.C /^Boolean soft_qreq_number(sho
soft_qreq_string SMUQREQS.C /^Boolean soft_qreq_string(cha
soft_ud_qreq_number SMUQRUNU.C /^Boolean soft_ud_qreq_number(
soft_menu_err SMUTEXT.C /^Errcode soft_menu_err(Errcod
soft_string SMUTEXT.C /^char *soft_string(char *key,
soft_strings SMUTEXT.C /^Errcode soft_strings(char *s
soft_scatters SMUTEXT.C /^Errcode soft_scatters(char *
soft_name_scatters SMUTEXT.C /^Errcode soft_name_scatters(c
soft_load_text SMUTEXT.C /^Errcode soft_load_text(char 
soft_load_ftext_type SMUTEXT.C /^Errcode soft_load_ftext_type
soft_ttextf SMUTTEXT.C /^Errcode soft_ttextf(char *ke
vsoft_qreq_number SMUVQREN.C /^Boolean vsoft_qreq_number(sh
soft_put_wait_box SMUWAITB.C /^Errcode soft_put_wait_box(ch
soft_yes_no_box SMUYESNO.C /^Boolean soft_yes_no_box(char
temp_save_rcel TEMPRCEL.C /^Errcode temp_save_rcel(Rcel_
report_temp_save_rcel TEMPRCEL.C /^Errcode report_temp_save_rce
temp_restore_rcel TEMPRCEL.C /^Errcode temp_restore_rcel(Rc
report_temp_restore_rcel TEMPRCEL.C /^Errcode report_temp_restore_
mtd_ix_dofeel TIMEFUNC.C /^void mtd_ix_dofeel(Button *b
mini_clear_overlays TIMEFUNC.C /^void mini_clear_overlays(Min
mini_draw_overlays TIMEFUNC.C /^void mini_draw_overlays(Mini
mtd_clear_dofeel TIMEFUNC.C /^void mtd_clear_dofeel(Button
mt_feel_prev TIMEFUNC.C /^void mt_feel_prev(Button *b)
mt_feel_next TIMEFUNC.C /^void mt_feel_next(Button *b)
mt_feel_first TIMEFUNC.C /^void mt_feel_first(Button *b
mt_feel_play TIMEFUNC.C /^void mt_feel_play(Button *b)
mt_feel_last TIMEFUNC.C /^void mt_feel_last(Button *b)
update_time_sel TIMEFUNC.C /^void update_time_sel(Button 
mini_seek_frame TIMEFUNC.C /^void mini_seek_frame(Minitim
mini_playit TIMEFUNC.C /^void mini_playit(Minitime_da
mini_prev_frame TIMEFUNC.C /^void mini_prev_frame(Minitim
mini_next_frame TIMEFUNC.C /^void mini_next_frame(Minitim
mini_first_frame TIMEFUNC.C /^void mini_first_frame(Miniti
mini_last_frame TIMEFUNC.C /^void mini_last_frame(Minitim
timeslider_sel TIMESLID.C /^Button timeslider_sel = MB_I
toggle_menu TOGLMENU.C /^void toggle_menu(void)
varg_qreq_number VQREQNUM.C /^Boolean varg_qreq_number(SHO
varg_qreq_string VQREQSTR.C /^Boolean varg_qreq_string(cha
pj_col_save COLSAVE.C /^Errcode pj_col_save(char *na
fq_ok_plus FILEMENU.C /^void fq_ok_plus(), fq_wild_s
feel1 FILEMENU.C /^void feel1(Button *b)
is_directory FILEMENU.C /^Boolean is_directory(char *p
accept_file_name FILEMENU.C /^void accept_file_name(Button
pj_get_filename FILEMENU.C /^char *pj_get_filename(char *
vb STARTUP.C /^Vbcb vb =  /* yep, this is w
debug STARTUP.C /^	int debug; /* and this *
builtin_err STARTUP.C /^Errcode builtin_err; /* for 
restore_ivmode STARTUP.C /^void restore_ivmode()
make_good_dir STARTUP.C /^Errcode make_good_dir(char *
matherr STARTUP.C /^int matherr(struct exception
cleanup_startup STARTUP.C /^void cleanup_startup()
init_pj_startup STARTUP.C /^Errcode init_pj_startup(Argp
copy_insure_suffix STARTUP.C /^void copy_insure_suffix(char
open_pj_startup_screen STARTUP.C /^Errcode open_pj_startup_scre
get_startup_dir STARTUP.C /^void get_startup_dir(char *b
show_rastcursor RASTCURS.C /^void show_rastcursor(Rastcur
hide_rastcursor RASTCURS.C /^void hide_rastcursor(Rastcur
move_rastcursor RASTCURS.C /^void move_rastcursor(Rastcur
cleanup_toptext TTEXTF.C /^void cleanup_toptext(void)
check_top_wndo_pos TTEXTF.C /^void check_top_wndo_pos()
ttextf TTEXTF.C /^Errcode ttextf(char *fmt,va_
resource_dir RESOURCE.C /^char resource_dir[PATH_SIZE]
smu_sm RESOURCE.C /^Softmenu smu_sm;		/* softmen
no_resource RESOURCE.C /^Errcode no_resource(Errcode 
init_resource_path RESOURCE.C /^Errcode init_resource_path(c
make_resource_path RESOURCE.C /^char *make_resource_path(cha
make_resource_name RESOURCE.C /^char *make_resource_name(cha
cleanup_menu_resource RESOURCE.C /^void cleanup_menu_resource()
init_menu_resource RESOURCE.C /^Errcode init_menu_resource(c
go_driver_scroller DRIVERMU.C /^Errcode go_driver_scroller(c
cant_query_driver DRIVERMU.C /^Errcode cant_query_driver(Er
go_updir DEVSELS.C /^void go_updir(Button *b)
go_rootdir DEVSELS.C /^void go_rootdir(Button *b)
alloc_dev_sels DEVSELS.C /^Errcode alloc_dev_sels(Butto
cleanup_dev_sels DEVSELS.C /^void cleanup_dev_sels(Button
