
//   TURTLE FLOWER
//   BY Conan B. Harmon-Walker
//   (c) 1990

branch(double len, int color,double spread,int thick)
{
double x,y,a;

SetColor(color);
SetBrushSize(thick);
Move(len);
if ((len *= 0.6666667) >= 1)
    {
    if (thick > 0)
        thick -= 1;
    spread *= 0.90;
    color += 1;
    Where(&x,&y,&a);
    Right(spread);
    branch(len,color,spread,thick);
    MoveTo(x,y,a);
    Left(spread);
    branch(len,color,spread,thick);
    }
}

flower( int dgr, int armlen, int xpos, int ypos, int col, int spd,
int thk)
{
int ang;
double x,y,a;
for(ang=0;ang<360;ang=ang+dgr)
     {
     Home();
     PenUp();
     Left(ang);
     Back(0);
     PenDown();
     Where(&x,&y,&a);
     MoveTo(xpos,ypos,a);
     branch(armlen,col,spd,thk);
     }
}


main()
{
int armlen,x,y,radius;
int degree=30;
armlen=15;
int color=120;
int spread=35;
int thick=1;
int numopts=6;
int choice = 1;
char *choices[]=
     {
     "DRAW FLOWER",
     "Number Branches",
     "Branch Thickness",
     "Degree of Spread",
     "Starting Color",
     "Return",
     };
int truefalse = 1;

for(;;)
     {
     choice = Qmenu(choices,numopts,"Turtle Flower");
     if(choice == 0)
          {
          if(Qquestion("Are You Sure?"))
               return;
          }
     else if(choice == 1)
          {
          degree = 360 / degree;
          if( RubCircle(&x,&y,&radius))
               flower(degree,radius/2.7,x,y,color,spread,thick);
          degree = 360 / degree;
          }
     else if(choice == 2)
          {
          if(!Qnumber(&degree,1,360,"Starting Number of Branches"))
               return;
          }
     else if(choice == 3)
          {
          if(!Qnumber(&thick,1,10,"Starting branch thickness?"))
               return;
          }
     else if(choice == 4)
          {
          if(!Qnumber(&spread,1,180,"Branch spread?"))
               return;
          }
     else if(choice == 5)
          if(!Qnumber(&color,1,256,"Starting color from pallet?"))
               return;
          };
     
     }
}


