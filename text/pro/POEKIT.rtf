{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq2\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq2\fttruetype Arial;}
{\f2\fnil\fcharset0\fprq2\fttruetype Dingbats;}
{\f3\fnil\fcharset0\fprq2\fttruetype Symbol;}
{\f4\fnil\fcharset0\fprq2\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red0\green0\blue0;}
{\stylesheet
{\s1\fi-431\li720\sbasedon28\snext28Contents 1;}
{\s2\fi-431\li1440\sbasedon28\snext28Contents 2;}
{\s3\fi-431\li2160\sbasedon28\snext28Contents 3;}
{\s8\fi-431\li720\sbasedon28Lower Roman List;}
{\s5\tx431\sbasedon24\snext28Numbered Heading 1;}
{\s6\tx431\sbasedon25\snext28Numbered Heading 2;}
{\s7\fi-431\li720Square List;}
{\*\cs11\sbasedon28Endnote Text;}
{\s4\fi-431\li2880\sbasedon28\snext28Contents 4;}
{\s9\fi-431\li720Diamond List;}
{\s10\fi-431\li720Numbered List;}
{\*\cs12\fs20\superEndnote Reference;}
{\s13\fi-431\li720Triangle List;}
{\s14\tx431\sbasedon26\snext28Numbered Heading 3;}
{\s15\fi-431\li720Dashed List;}
{\s16\fi-431\li720\sbasedon10Upper Roman List;}
{\s17\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 4;}
{\s18\fi-431\li720Heart List;}
{\s34\fi-431\li720Box List;}
{\s20\fi-431\li720\sbasedon10Upper Case List;}
{\s21\fi-431\li720Bullet List;}
{\s22\fi-431\li720Hand List;}
{\*\cs23\fs20\sbasedon28Footnote Text;}
{\s24\sb440\sa60\f1\fs34\b\sbasedon28\snext28Heading 1;}
{\s25\sb440\sa60\f1\fs28\b\sbasedon28\snext28Heading 2;}
{\s19\qc\sb240\sa120\f1\fs32\b\sbasedon28\snext28Contents Header;}
{\s27\fi-431\li720Tick List;}
{\s26\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 3;}
{\s29\fi-431\li720\sbasedon10Lower Case List;}
{\s30\li1440\ri1440\sa120\sbasedon28Block Text;}
{\s36\f4\sbasedon28Plain Text;}
{\s32\tx1584\sbasedon5\snext28Section Heading;}
{\s33\fi-431\li720Implies List;}
{\s28\f0\fs24\lang1033Normal;}
{\s35\fi-431\li720Star List;}
{\*\cs31\fs20\superFootnote Reference;}
{\s37\tx1584\sbasedon5\snext28Chapter Heading;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\info\uc1}\deftab720\viewkind1\paperw11905\paperh16837\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\headery0\footery0\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Contents}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Introduction to POE Module Development  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Environment  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Kit Files  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Data Types used in POE Programming  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Basic Data Types  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto Structure  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot Structure  3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OTFunc Prototype (for OverTime effect functions)  3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE Programming Requirements and Techniques  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting up the POE interfaces  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Pocolib Interface  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The REX/Host Interface  6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example of Coding the Interfaces  9}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch System Integrity Requirements  9}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The builtin_err Global Variable 10}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Handling Poco Protected Pointers 10}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE functions that accept variable argument lists 12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Notes on the runtime environment 14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Using Poco Built-in Library Functions 15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POCOLIB - Special Functions for POE Modules 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot_bufsize 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot_bufcheck 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch var2ppt 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch array2ppt 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch str2ppt 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ptr2ppt 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ppt2ptr 19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FindPoe 19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CheckAbort 20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPicScreen 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetMenuColors 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Overtime 22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverSegment 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverAll 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GFXLIB - Graphics Library Functions 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_rcel_copy 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_dot 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_dot 25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_hseg 25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_hseg 25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_vseg 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_vseg 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_rectpix 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_rectpix 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_hline 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_vline 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_rect 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_rast 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_xor_rect 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_mask1blit 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_mask2blit 29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_blitrect 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_tblitrect 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_swaprect 31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_xor_rast 31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_zoomblit 31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unbrun_rect 32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unss2_rect 33}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unlccomp_rect 33}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_colors 34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_wait_rast_vsync 34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_uncc256 35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_uncc64 35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SYSLIB - String, Memory, and Unbuffered I/O Functions 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch free 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch malloc 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcmp 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcpy 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memset 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcmp 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcpy 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strlen 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch zalloc 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_open 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_create 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_close 37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_read 37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_write 37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_seek 37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_tell 38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_delete 38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_rename 38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_exists 38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_ioerr 38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_load_path 39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_path_name 39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_path_suffix 39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch STDIOLIB - Standard C Stream I/O Functions 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch clearerr 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fclose 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch feof 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ferror 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fflush 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgetc 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgets 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fopen 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fprintf 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputc 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputs 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fread 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fseek 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ftell 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fwrite 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch printf 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rewind 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sprintf 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ungetc 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_errno_errcode 40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch MATHLIB - Standard C Math Support 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch acos 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch asin 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch atan 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch atan2 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ceil 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cos 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cosh 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch exp 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fabs 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch floor 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fmod 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch frexp 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ldexp 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch log 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch log10 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch modf 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pow 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sin 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sinh 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sqrt 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch tan 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch tanh 41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro File Formats 42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Common Hierarchial Chunked File Structure 42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FLC - Animator Pro Flic Files 43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC file header 43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC prefix chunk 45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC frame chunks 45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type  4 (FLI_COLOR256) - 256-Level Color 46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 11 (FLI_COLOR) - 64-Level Color 47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 13 (FLI_BLACK) - No Data 47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 16 (FLI_COPY) - No Compression 47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 15 (FLI_BRUN) - Byte Run Length Compression 47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 12 (FLI_LC) - Byte Aligned Delta Compression 48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type  7 (FLI_SS2) - Word Aligned Delta Compression 48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 18 (FLI_PSTAMP) - Postage Stamp Image 49}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FLI - Original Animator Flic Files 51}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLI file header 51}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLI frame chunks 52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CEL - Animation Cel Files 52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro CEL Files 52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator CEL Files 52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PIC - Picture Files 52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro PIC Files 53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator PIC Files 54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch MSK - Mask Data Files 55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro MSK Files 55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator MSK Files 55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch COL - Color Map Files 55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro COL Files 56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator COL Files 56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PLY - Polygon Files 56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TWE - Tween Data Files 57}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OPT - Optics Menu Settings Files 57}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Internal Usage Files (REC, SET, CFG, GLV, MU) 59}
\sect\sectd\sbknone\colsx360\headery0\footery0\marglsxn4320\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Introduction to POE Module Development}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the Poco interpreter does not provide enough horsepower or flexibility, you can add libraries of custom functions to the Poco programming environment.  The functions are written and compiled outside the Poco/Animator environment; when called from a Poco program, they execute at full 80386 machine speed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE (}{\cf2\f0\fs24\i\lang1033{\*\listtag0}PO}{\cf2\f0\fs24\lang1033{\*\listtag0}co }{\cf2\f0\fs24\i\lang1033{\*\listtag0}E}{\cf2\f0\fs24\lang1033{\*\listtag0}xecutable) module contains one or more functions which a Poco program can call.  The module may contain several utility functions provided to speed up a complex Poco program.  Or, it may contain a fully-functional application with a single entry point from a small Poco program that exists only to transfer control into the POE module.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In addition to providing functions that can be called from a Poco program, the functions within a POE module have full access to the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Environment}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module can be developed using one of the commercially available 386 Protected Mode development tools.  Among these are Watcom C/386, MetaWare High C, and the Phar Lap 386 Assembler and Linker.  In general, any 386 development system can be used, provided that it can create Phar Lap-compatible }{\cf2\f0\fs24\b\lang1033{\*\listtag0}REX}{\cf2\f0\fs24\lang1033{\*\listtag0} modules, and that it adheres to the High C/Watcom "-3s" function calling standard.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This document discusses POE development in the context of the C language.  Equivalent techniques can be used in other languages, but a support environment does not currently exist for languages other than C.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Kit Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The POE development kit contains several support libraries, a set of C-language header files, and several example programs.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following diagram shows the structure of the development kit, and provides a brief overview of the directories:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \\POEKIT}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\INCHeader files (C, ASM, MAKE)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\LIBSupport libraries}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\COLORUTLExample code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\LOOKUPExample code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\OTDEMOExample code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\PDRDEMOExample code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\PSTAMPExample code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9492 \uc0\u9472  \\SKELETONClone this to start a new POE}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Data Types used in POE Programming}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing POE modules involves using a variety of data types in the interface between your code and the library functions.  The data types are defined in header files supplied with the development kit.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Basic Data Types}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The STDTYPES.H file defines several standard macros and data types which are used in POE programming.  The macros are common C items, and have }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#ifdef}{\cf2\f0\fs24\lang1033{\*\listtag0}/}{\cf2\f0\fs24\b\lang1033{\*\listtag0}#endif}{\cf2\f0\fs24\lang1033{\*\listtag0} protective wrappers around them; they are defined only if you haven't already defined them.  The items defined in STDTYPES.H and the assumptions made concerning integral C data types are listed below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}Data Type/MacroDescription}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed or unsigned 8-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch short}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 16-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch int}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 32-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 32-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Pixel}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned char}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Ucoor}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Coor}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} Macro, defined as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}((void *)0)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}    Macro, defined as 1}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0}   Macro, defined as 0}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Success}{\cf2\f0\fs24\lang1033{\*\listtag0}Macro, defined as 0}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The POE interface uses the unqualified }{\cf2\f0\fs24\b\lang1033{\*\listtag0}char}{\cf2\f0\fs24\lang1033{\*\listtag0} type only when the signed versus unsigned status of the type doesn't matter.  When the sign handling is important, explicit }{\cf2\f0\fs24\b\lang1033{\*\listtag0}signed}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned}{\cf2\f0\fs24\lang1033{\*\listtag0} qualifiers are used.  If your compiler supports an option to make the default }{\cf2\f0\fs24\b\lang1033{\*\listtag0}char}{\cf2\f0\fs24\lang1033{\*\listtag0} type signed or unsigned, you can use whichever option setting you prefer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto Structure}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structure defines the connection between Poco and your functions in the POE module.  A POE module contains an array of these structures, with each array element describing a single function that can be called from a Poco program.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structure type is defined in POCOLIB.H, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct lib_proto \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*func;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char*proto;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Lib_proto;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func}{\cf2\f0\fs24\lang1033{\*\listtag0} field contains a pointer to a function in your POE module which can be called from a Poco program.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}proto}{\cf2\f0\fs24\lang1033{\*\listtag0} field contains a pointer to a character string which is passed to Poco as a prototype of the function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot Structure}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In Poco C source code, pointers are declared and used just as they are in standard C.  Internally, the pointers are maintained as a 12-byte structure, referred to as a Poco Protected Pointer.  When a Poco program passes a pointer parm in to a POE module, the POE function sees the full 12-byte structure.  The Popot type is defined in POCOLIB.H as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct popot \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*pt;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void  *min;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*max;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Popot;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} field the actual pointer.  It points to the data item in question, which must be located somewhere in the memory range described by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} field is a pointer to the first memory location that can be legally addressed by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}*pt.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} field is a pointer to the last memory location that can be legally addressed by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}*pt}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch OTFunc Prototype (for OverTime effect functions)}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE modules can render an effect over a range of frames, using a facility similar to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} function available to Poco programs.  An effect function in a POE module receives different parameters than a Poco effect function.  These parameters are described by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OTFunc}{\cf2\f0\fs24\lang1033{\*\listtag0} prototype, defined in POCOLIB.H as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef Errcode (*OTFunc) (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void *data,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch intix,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch inttotal,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch intscale}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}data}{\cf2\f0\fs24\lang1033{\*\listtag0} variable contains the value you specify in your call to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  It can be anything you want.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ix}{\cf2\f0\fs24\lang1033{\*\listtag0} variable contains the index of the current frame within the time sequence.  This starts at zero, and is incremented by one for each successive call, until it reaches }{\cf2\f0\fs24\b\lang1033{\*\listtag0}total-1}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}total}{\cf2\f0\fs24\lang1033{\*\listtag0} variable contains the number of frames in the time sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}scale}{\cf2\f0\fs24\lang1033{\*\listtag0} variable contains a value between 0 and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}SCALE_ONE}{\cf2\f0\fs24\lang1033{\*\listtag0}.  (The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}SCALE_ONE}{\cf2\f0\fs24\lang1033{\*\listtag0} constant is defined in POCOLIB.H as 2^14.)  This starts at zero and is incremented for each successive call, such that it reaches }{\cf2\f0\fs24\b\lang1033{\*\listtag0}SCALE_ONE}{\cf2\f0\fs24\lang1033{\*\listtag0} on the last frame in the time sequence.  This may be incremented in a non-linear fashion, depending on the settings in the time menu such as PING PONG, SLOW IN, SLOW OUT, etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch We recommend that you use the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}scale}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter we provide rather than calculating your own scaling based on the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ix}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}total}{\cf2\f0\fs24\lang1033{\*\listtag0} variables.  When you calculate your own scaling, you are effectively ignoring the settings in the time menu, which will be counter-intuitive from the user's point of view.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch POE Programming Requirements and Techniques}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module is run in a somewhat different environment than a normal standalone C program.  You compile your POE source code into a Phar Lap REX module.  Animator loads this REX module at runtime, does the relocation fixup, and makes the connections between the host libraries you've requested and the internal Animator functions that service those requests.  It also establishes connections between  Poco and the functions provided to it by your module.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In addition, you must use specific coding techniques for communicating with the Poco program that calls your functions.  The emphasis here is on Poco's special handling of pointers, and the actions your code must take to ensure system integrity.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following sections describe the runtime interfaces, and the coding requirements associated with them.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting up the POE interfaces}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Two layers of interface establish the connection between your POE functions and a Poco program.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}REX/Host}{\cf2\f0\fs24\lang1033{\*\listtag0} interface handles the loading and unloading of POE modules. It also makes host services available to the POE functions.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}Pocolib}{\cf2\f0\fs24\lang1033{\*\listtag0} interface provides information to Poco about your POE functions.  The following sections describe how to set up these interfaces in your C source code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch The Pocolib Interface}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Pocolib interface is an array of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structures which is allocated and initialized within the POE module.  Each element in the array provides a prototype of a POE function and a pointer to that function.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is defined as:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct lib_proto \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*func;  // pointer to POE function}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char*proto; // Poco prototype line}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Lib_proto;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The prototype lines must be syntactically correct Poco source code, including semicolons at the end of each prototype.  Comments are }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} allowed in the prototype strings.  Macros in the strings are }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} expanded.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the Poco compiler encounters a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#pragma poco library}{\cf2\f0\fs24\lang1033{\*\listtag0} statement, it loads the named POE module and processes the prototypes in the module's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} array as if they had appeared in the Poco program source code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In a POE module that contains two functions visible to a Poco program, the array might be coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto calls[] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     \{func1,"void SpecialFunction(int a, double b);"\},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     \{func2,"int  MundaneFunction(void);"\},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   \};}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This example doesn't include any pointer parameters or pointer return values.  Pointers require special handling in the Poco\~<->\~POE interface; they are discussed in detail in a later section of this document.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch The REX/Host Interface}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The REX interface is a subsystem within Animator that loads and unloads POE modules, and supplies the runtime service libraries (standard I/O, Poco builtin functions, etc).  It is also calls the optional initialization and cleanup routines as it loads and unloads the POE module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A data structure named }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rexlib_header}{\cf2\f0\fs24\lang1033{\*\listtag0} provides the primary interface between the REX subsystem and your POE module.  You should never need to worry about the contents of the structure.  A set of macros and header files protects you from most of the minute details of setting up the interface.  The following sections describe how to use these macros and header files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Runtime Library Support}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE modules cannot be linked with a standard C runtime library, because runtime libraries are generally not compatible with the Phar Lap REX module format.  Animator provides several libraries of functions that fill the basic needs provided by a runtime library.  It also supplies libraries containing functions specific to Animator, including the entire contents of the Poco builtin libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each of these host libraries has an associated C header file which you must }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} in the POE source code when you use the library's functions.  Some of the libraries also have an associated LIB file, required at link time.  Each library has a formal name which helps keep the REX interface layer "behind the}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  scenes" and simplifies setting up POE modules.  The following table describes the host libraries available and the associated support files:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch NameHeaderLink LIBFunctionality}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_SYSLIBSYSLIB.HAASYSLIB.LIBMemory and  string utils.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_STDIOLIBSTDIOLIB.HSTDIOLIB.LIBStandard C I/O. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_GFXLIBGFX.HGFXLIB.LIBGraphics.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_MATHLIBMATH.HMATHHOST.LIBFloating point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_POCOLIBPOCOLIB.H(none)Poco builtins.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Automatic Initialization and Cleanup}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module may contain initialization and cleanup routines which are automatically executed by Animator when the module is loaded and unloaded.  The init routine will be executed immediately after the POE module is loaded, before the Poco compiler begins to process the prototype lines.  The cleanup routine is executed just before the POE module is unloaded after the Poco program has ended.  This can be both after a normal exit from a Poco program, and when the Poco program aborts due to an internally-detected error.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The init and cleanup routines may use host-provided library functions from any of the libraries listed above.  When a POE module's functions acquire dynamic resources (memory or file handles, primarily), we recommend that you supply a cleanup routine to free those resources.  This protects the integrity of the system resources when the Poco program aborts before it frees the resources, and also protects against  Poco programs that don't clean up after themselves.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Coding the REX Interface}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Take the following steps, in this order, to set up the REX interface in your source code:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} statements for the header files corresponding to the host libraries you need.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include\~"POCOREX.H"}{\cf2\f0\fs24\lang1033{\*\listtag0}.  (POCOREX.H will automatically include POCOLIB.H if it has not been included already.)  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -If your POE module requires any custom header files of your own, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} them at this point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#define}{\cf2\f0\fs24\lang1033{\*\listtag0} statement for each host library you need.  For example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_1 AA_SYSLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_2 AA_GFXLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_3 AA_POCOLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Format the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}HLIB_TYPE_n}{\cf2\f0\fs24\lang1033{\*\listtag0} macros exactly as shown; each must end in a single numeric digit.  Start at 1 and leave no gaps in the numeric sequence.  For the values assigned to each macro, use only the names found in the table of host libraries provided above.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include "hliblist.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This statement must follow the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#define}{\cf2\f0\fs24\lang1033{\*\listtag0} statements that name the requested host libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Place your C source code at this point in the POE source module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code the array of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structures that describes the functions you provide to Poco programs.  Assuming one function, it might look like this:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto mycalls[] = }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{poe_entry, "void PoeMain(void);"\};}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Even when a single function is being set up, you must declare an array, or the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro won't work.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Code the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro.  This macro requires four parameters:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   - A pointer to the (optional) init routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   - A pointer to the (optional) cleanup routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -A pointer to a string; the name of the POE library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   - A pointer to the array of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structures.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Assuming the POE module has no init or cleanup routines, the macro might be coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Setup_Pocorex(NOFUNC, NOFUNC, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch "My POE Functions", mycalls);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro creates the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rexlib_header}{\cf2\f0\fs24\lang1033{\*\listtag0} structure and initializes it using the parameters you code.  The name string coded in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} is used as part of the cross-POE calling facility.  While there are no formal limits on the length or contents of the name string, we recommend that the name be at least 8 characters long and no more than about 20 characters.  We impose no formal standards to prevent naming conflicts between different POE modules.  It should be rare that any two POE modules have identical names. If it were to occur, it would }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} prevent both modules from being used simultaneously by the same Poco program.  It would, however, prevent cross-POE calls between the two libraries.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The HLIBLIST.H file builds a linked list of structures based on the libraries named in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}HLIB_TYPE_n}{\cf2\f0\fs24\lang1033{\*\listtag0} statements. This linked list is used by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro to inform the host of which libraries must be made available when the POE module is loaded.  Note that it is possible (although it seems unlikely) to write a POE module which does not require any host-provided library services.  In this case, do not code any }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#define HLIB_TYPE_n}{\cf2\f0\fs24\lang1033{\*\listtag0} statements and do not include HLIBLIST.H.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Example of Coding the Interfaces}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following is an example of a skeleton POE source code module. The example shows the inclusion of several host libraries for illustrative purposes; no host library functions are actually used in the skeleton code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "pocorex.h"}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "stdiolib.h"}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "gfx.h"}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_1 AA_POCOLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_2 AA_SYSLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_3 AA_STDIOLIB}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "hliblist.h"}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch // at this point, the function(s) provided by this POE}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch // module would be coded.  Assume one (fairly }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch // pointless) function...}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean flip(Boolean original)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch return !original;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch // interface details follow... }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto libcalls[] = \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   \{flip,\~"Boolean\~Complement(Boolean\~current_value);"\}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Setup_Pocorex(NULL,\~NULL,\~"POE\~Skeleton",\~libcalls);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch // end of source code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch System Integrity Requirements}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco built in library functions contain extensive "sanity" checking of the arguments passed in by the Poco program.  This helps prevent the possibility of an erroneous Poco program crashing Animator.  The functions within a POE module are essentially an extension of the built in libraries.  As such, they are expected to do the same sort of error checking.  This section details some of the techniques involved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch The builtin_err Global Variable}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Within Animator is a global variable, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The Poco virtual machine checks this variable after every library function call; if an error has occurred }{\cf2\f0\fs24\b\lang1033{\*\listtag0}(builtin_err\~!=\~0)}{\cf2\f0\fs24\lang1033{\*\listtag0}, the Poco program is terminated and the error is reported to the user.  When a library routine detects an error, it sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} to the appropriate error code value and returns.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE modules also have access to the global }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} variable.  The access is via a pointer in the REX interface layer but POCOLIB.H defines a macro which hides the indirection, allowing it to be coded simply as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} in the POE source code.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a POE function detects an error serious enough to warrant immediately stopping the Poco program (such as an invalid pointer), it must store the appropriate error code (e.g., }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_null_ref}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_parameter_range}{\cf2\f0\fs24\lang1033{\*\listtag0}, etc.) into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} and return control to Poco.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} has been set, it doesn't matter what value is returned from the POE function to Poco via the regular C-language }{\cf2\f0\fs24\b\lang1033{\*\listtag0}return}{\cf2\f0\fs24\lang1033{\*\listtag0} statement.  This is because the Poco program will be terminated before another virtual-machine instruction is executed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Handling Poco Protected Pointers}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Pointers in Poco programs are declared and used just as they would be in regular C code.  Internally, however, Poco maintains 3 values for each pointer.  In addition to the pointer itself, Poco stores the upper and lower boundaries of the memory area the pointer can legally reference.  The collection of 3 values for each Poco pointer is stored in a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure, which is defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct popot \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*pt;  // the pointer itself}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void  *min; // lower memory bound}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void*max;// upper memory bound}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Popot;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The difference between Poco protected pointers and standard C pointers becomes visible when they are passed back and forth between Poco and POE functions. Poco passes the entire }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to the POE function for each pointer parameter coded in the Poco program. (An exception to this is pointers within}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  variable argument lists, as discussed below.) Consider the following POE function and the prototype that is presented to Poco to describe that function:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot strscan(Popot str1, Popot str2)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch /* functional code */}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto mycalls[] = \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   \{strscan,"char *StrScan(char *str1, char *str2);"\},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The picture presented to Poco in the prototype indicates that two string pointers will be passed as parameters and a string pointer will be returned by the function.  In the POE code, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structures are declared, because Poco stacks the entire }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure for each pointer when it makes a call to a POE function.  Similarly, a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is expected by Poco as a return value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} is a pointer to a scalar item (i.e., a pointer to a single }{\cf2\f0\fs24\b\lang1033{\*\listtag0}char}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}long}{\cf2\f0\fs24\lang1033{\*\listtag0}, or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}double}{\cf2\f0\fs24\lang1033{\*\listtag0}), the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} fields will be equal, and the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} field will be }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min+sizeof(item-pointed-to)}{\cf2\f0\fs24\lang1033{\*\listtag0}.  When a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} points to an array or a dynamically allocated block of memory, the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} fields will be pointers to the first and last bytes of the array or memory block, respectively, and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} must point somewhere between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} (inclusive).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a variable is declared in Poco as a pointer to a pointer, it will appear on the POE side as a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} which has a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component that points to another }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Several macros and utility functions are available to POE modules to help manage }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointers.  These are documented in the chapter }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}POCOLIB - Special Functions for POE modules}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Checking Pointers passed to a POE Function}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer is passed as an argument to a POE function, the function makes the following checks:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component must be verified as non-}{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} before it is dereferenced.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component must point somewhere in the range of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min\~<=\~pt\~<= max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -If it is a pointer to a memory location into which the POE function will return a value, the function must verify that enough room exists between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} to hold the return value. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When these checks fail, the following error codes are the most appropriate values to store into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} before returning control to the Poco interpreter:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Err_null_ref}{\cf2\f0\fs24\lang1033{\*\listtag0}The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component is }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Err_index_small}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} is less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Err_index_big}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} is greater than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Err_string}{\cf2\f0\fs24\lang1033{\*\listtag0}On using the pointer to store a string value, not enough room remains between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} to store the return value.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Err_buf_too_small}{\cf2\f0\fs24\lang1033{\*\listtag0}On using the pointer to store a non-string value, not enough room remains between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} to store the return value.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The only differences between the error codes listed above are in the wording of the error message reported to the end user when the Poco program is aborted.  Look in the resource file AA.MU for the exact wording of the error messages, and choose one that describes your situation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Constructing Pointer Return Values}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer is returned from a POE function, (either via the C }{\cf2\f0\fs24\b\lang1033{\*\listtag0}return}{\cf2\f0\fs24\lang1033{\*\listtag0} statement, or indirectly via another pointer) construct it as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -When possible, copy the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} from the input parameters and modify the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component.  For example, a function which receives a pointer to a string and returns a pointer to a character within the string copies the input }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} to the return value }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}, then sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} in the return value to point to the character.  This preserves the proper }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} values for the returned pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -When returning a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer, set all three components to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -When returning a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer which is not based upon any input argument (a pointer to a data area belonging to the POE module, perhaps), set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} components to point to the value and set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} component to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt+sizeof(value)}{\cf2\f0\fs24\lang1033{\*\listtag0}.  If the pointer is to an array or allocated block of memory, set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} component to the last byte of the array or memory block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch POE functions that accept variable argument lists}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch There is one situation in which Poco will not pass the full }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to a library routine:  when a pointer parameter is passed as part of a variable}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  argument list.  For an example of this, consider the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} function as it might be prototyped in a POE module and the prototype Poco sees for it:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}void do_printf(Popot fmt, ...);  // proto in POE}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   void printf(char *fmt, ...);     // proto in Poco }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   printf("%s, %d", "A string", 2); // as used in Poco}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Because the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}fmt}{\cf2\f0\fs24\lang1033{\*\listtag0} variable is in the fixed part of the arguments, it is declared as a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.  However, Poco converts the pointer which appears in the variable part of the arguments (the pointer to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}"A\~string"}{\cf2\f0\fs24\lang1033{\*\listtag0}) to a standard 32-bit C pointer before stacking it.  This somewhat simplifies the task for a POE module which accepts a variable number of arguments, since all values on the stack in the variable part of the argument list will be normal C values, not }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointers.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The example POE }{\cf2\f0\fs24\b\lang1033{\*\listtag0}do_printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} prototype above is not quite complete.  When Poco calls a POE function that is prototyped to accept variable argument lists, the first two values stacked are the count of values stacked and the total number of bytes stacked.  These counts are }{\cf2\f0\fs24\i\lang1033{\*\listtag0}for the variable part of the argument list}{\cf2\f0\fs24\lang1033{\*\listtag0}; any fixed arguments are not included in the counts.  Thus, a more complete example of the POE prototype would be:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   void do_printf(long cnt, long len, Popot fmt, ...);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The prototype string presented to Poco would not change; the stacking of the argument count and length is a transparent process from the Poco program's point of view.  The argument count and length values are provided to the POE function to assist in checking that the proper number and type of arguments were passed in the variable part of the list.  (The nature of this checking, however, is necessarily dependent on the nature of the POE function.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Notes on the runtime environment}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When compiling a POE module that uses floating point math, you must set the compiler's options to generate inline 80387 instructions.  A valid 387 environment will exist when the POE module is loaded.  On machines not equipped with an 80387, Animator sets up a full 387 emulation environment.  If the inline-387 compiler option is not used, the POE module will not link correctly with MATHLIB.H.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When using the Phar Lap linker to generate a POE module, you must use the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}-DOSORDER}{\cf2\f0\fs24\lang1033{\*\listtag0} link option. When using the Watcom linker, the corresponding option is }{\cf2\f0\fs24\b\lang1033{\*\listtag0}DOSSEGS}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Upon entry to a POE function from Poco, you are guaranteed to have at least 2k of stack space available.  There is no way to determine how much stack space is actually available.  Some assumptions could be made in certain tightly-controlled situations, however.  Consider the following Poco program, for example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco stacksize 64k}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco library "eatstack.poe"}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void main(void) \{PoeMain();\}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This example assumes a situation in which the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}PoeMain()}{\cf2\f0\fs24\lang1033{\*\listtag0} call transfers control into a fairly complex POE module containing a complete application.  It would be safe for the POE module in this case to assume that most of the requested 64k of stack space is available.  A POE module may safely allocate its own stack and switch the 80386 hardware stack pointer to use it, providing that the stack pointer is restored to the proper value before returning control to the calling function in Poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Using Poco Built-in Library Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Most of the functions in the Poco built in libraries are accessible to a POE module via indirect function calls.  Several of the built in functions have not been made accessible because other host libraries more appropriately service the need.  (For example, it makes more sense to call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}strcpy()}{\cf2\f0\fs24\lang1033{\*\listtag0} from the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} library than to call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poestrcpy()}{\cf2\f0\fs24\lang1033{\*\listtag0} with the associated conversions between C and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer types.)  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To simplify the coding of POE modules which call built in library functions, we provide macros which evaluate to the indirect calling code for the built in functions.  These macros are defined in POCOLIB.H.  To call a built in function of a given name, simply preface the Poco built in function name with }{\cf2\f0\fs24\i\lang1033{\*\listtag0}poe}{\cf2\f0\fs24\lang1033{\*\listtag0}.  Thus, to call the built in function }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ResizeReset()}{\cf2\f0\fs24\lang1033{\*\listtag0} from a POE module, code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeResizeReset()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a POE function makes a call to a Poco built in library function, that library function believes that the caller is a Poco program.  For this reason, POE modules must "fool" the library routines by passing parameters the same way the Poco virtual machine does, and must in general behave as a Poco program would.  With the exception of pointers, the Poco virtual machine's data types and argument/return-value mechanisms are the same as the High C/Watcom "-3s" standard.  Handling of pointers as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} values is discussed in its own section, above.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a POE function makes a call to a built in library function that accepts a variable argument list, it must pass the count and length values to the built in function in the same way the Poco virtual machine does.  For example, a call to the built in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine might be coded as:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   poeprintf(4, 2\~*\~sizeof(int)\~+\~2\~*\~sizeof(char\~*),}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch       str2ppt("%s=%d, %s=%d"),}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch "Variable 1", 99,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch "Variable 2", 999);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This example call indicates to the built in library }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeprintf()}{\cf2\f0\fs24\lang1033{\*\listtag0} function that four arguments are being passed in the variable part of the argument list, and that the total number of bytes stacked is two times the size of an integer plus two times the size of a string pointer.  The format string (the fixed argument) is passed as a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} value (constructed via the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}str2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro) but the other string pointers (which are in the variable part of the argument list) are passed as standard C pointers.  This technique, tedious though it may be, is required for all built in library functions with variable argument lists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The remaining issue in using the built in library functions is the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} variable.  The earlier discussion of system integrity issues described how a POE module must perform error checking and set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} variable appropriately.  A bad status set}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} will cause the Poco virtual machine to shut itself down automatically, but a POE module must simulate this behavior manually.  Your POE module must check the value in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} after every call to a built in library function.  Any built in function can potentially set }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0}; there are no calls that "cannot fail."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The safest thing for a POE function to do when it detects a non-zero value in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} is to return as quickly as possible to the calling routine in the Poco program.  Since no setjmp/longjmp facility is available to POE modules, this may involve tediously returning a bad status code through many levels of function calls within the POE code to the entry point routine.  If the POE code wants to report (or simply hide) the error and suppress the automatic reporting done by Poco, it may modify the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} value to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_reported}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This will cause the Poco program to terminate without reporting an error to the user.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It is possible for a POE module to attempt to correct what it thinks went wrong with a library function call, reset }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} to zero, and continue processing (perhaps re-issuing the call or perhaps moving on to some alternate operation).  It is also possible for a POE module to crash Animator - use this technique with care.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch POCOLIB - Special Functions for POE Modules}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In addition to the functions provided by the built in libraries, there are several special functions available to POE modules.  Several of these are macros which expand to in-line C code; the rest are functions accessed via indirect call.  For the indirect-call functions, macros have been defined to eliminate the tedious typing of coding indirect calls. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MACRO int Popot_bufsize(Popot *ppt)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Evaluates to the integer value of how many bytes are available between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} in the memory area described by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ppt}{\cf2\f0\fs24\lang1033{\*\listtag0}.  It is useful when returning a string to Poco via a pointer (see example below).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ppt}{\cf2\f0\fs24\lang1033{\*\listtag0}The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} to check.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:The integer number of bytes available in the memory region the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} points to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:A function which builds a string and returns it in a memory area provided by the Poco caller is coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode somefunc(Popot retstr)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char result[128];}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     /* generate result string somehow */}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     if (retstr.pt == NULL)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch         return builtin_err = Err_null_ref;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     if (Popot_bufsize(&retstr) < 1+strlen(result))}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch         return builtin_err = Err_string;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     else}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch         strcpy(retstr.pt, result);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     return Success;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MACRO int Popot_bufcheck(Popot *ppt, int size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Checks a Popot pointer to ensure that the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component is not }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} and that the specified number of bytes is available between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.  It sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} to reflect the result of the testing.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro always modifies }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0}, which implies that there is a slight performance degradation in trade for the convenience of checking both size and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}-ness with one macro.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ppt}{\cf2\f0\fs24\lang1033{\*\listtag0}The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} to check.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}The number of bytes required between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_null_ref}{\cf2\f0\fs24\lang1033{\*\listtag0}, or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_buf_too_small}{\cf2\f0\fs24\lang1033{\*\listtag0} will be placed into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0}, and will also be the value the macro itself evaluates to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:The previous example to safely return a string can also be coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode somefunc(Popot retstr)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char result[128];}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     /* generate result string somehow */}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     if (Popot_bufcheck(&retstr,\~1+strlen(result)))}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch         return builtin_err;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     else}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch         strcpy(retstr.pt, result);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     return Success;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MACRO Popot var2ppt(var_name)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MACRO Popot array2ppt(array_name)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MACRO Popot str2ppt(string_constant)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Generate a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} from the C datatype indicated by the name of the macro.  Each of these macros evaluates to a call to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} function with the appropriate size automatically generated by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}sizeof()}{\cf2\f0\fs24\lang1033{\*\listtag0} operator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}var2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro accepts the name of a scalar variable (i.e., an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}long}{\cf2\f0\fs24\lang1033{\*\listtag0}, etc, which is not an array).  Do not code an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}&}{\cf2\f0\fs24\lang1033{\*\listtag0} before the name, the macro definition already contains the address-of operator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}array2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro accepts the name of an array, or structure, or array of structures.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}str2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} accepts a string constant argument.  Concatenated strings (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}str2ppt("A"\~"B");}{\cf2\f0\fs24\lang1033{\*\listtag0}) are allowed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch See the example under }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0}, below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}var_name}{\cf2\f0\fs24\lang1033{\*\listtag0}The name of the variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch array_name}{\cf2\f0\fs24\lang1033{\*\listtag0}The name of the array.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch string_constant}{\cf2\f0\fs24\lang1033{\*\listtag0}Any C string constant expression.  Multiple strings, concatenated by the compiler, are allowed.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure; same as for }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot ptr2ppt(void *ptr, int size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Converts a pointer and size to a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.  This allows a C pointer to be converted to a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} as an "instream" operation, eliminating the need for an intermediate variable of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} type.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The resulting }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}'s }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} components are equal to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr}{\cf2\f0\fs24\lang1033{\*\listtag0}, and the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} component is equal to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr+size}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In terms of performance, this function is relatively efficient, although it does result in an indirect function call.   Using statically allocated and initialized }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}-type variables will yield somewhat smaller and faster code where performance is critical. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr}{\cf2\f0\fs24\lang1033{\*\listtag0}The C pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}The size, in bytes, of the area }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr}{\cf2\f0\fs24\lang1033{\*\listtag0} points to.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.  The value returned by this function can be assigned to a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} variable or passed to another function directly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:The following example of calling the built in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeQlist()}{\cf2\f0\fs24\lang1033{\*\listtag0} function demonstrates the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ptr2ppt()}{\cf2\f0\fs24\lang1033{\*\listtag0} function and several of the related macros:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popotlist_items[MAX_ITEMS];}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void show_current_list(int cur_count)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     int  selection;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     int  list_position = 0;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     poeQlist( var2ppt(selection),}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch               ptr2ppt(list_items, cur_count),}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch               cur_count,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch               var2ppt(list_position),}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch               str2ppt("Please choose an item:")}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch             );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void *ppt2ptr(Popot ppt)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Converts a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} to a standard C pointer, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}without doing any error checking on the }{\cf2\f0\fs24\i\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This allows "instream" conversion of the return value from a Poco built in function, without needing an intermediate variable of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} type.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The conversion just discards the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} components and returns the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component. Built in library routines always generate valid }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} values when the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component is non-}{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}; checking of the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} components is not necessary.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ppt}{\cf2\f0\fs24\lang1033{\*\listtag0}The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0} to convert.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A standard C pointer, the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ppt.pt}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rcel *screen = ppt2ptr(poeGetSwapScreen());}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch int FindPoe(char *name, Lib_proto **plib)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Locates another POE module and returns a pointer to its function prototype list.  This function locates POE modules that have already been loaded, it does }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} search for POE modules on disk and load them.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}name}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter is compared (case insensitive) to the names of all loaded POE modules.  If a match is found a pointer to the POE's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} array is stored into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}*plib}{\cf2\f0\fs24\lang1033{\*\listtag0} and the count of functions in that array is returned.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Once the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} array for another POE module has been located with this function, cross-POE function calls can be made via indirect calls.  You must, of course, know the layout of the other module's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} array to use this feature.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Several special values are possible for the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}name}{\cf2\f0\fs24\lang1033{\*\listtag0} string.  A name of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}"poco$builtin"}{\cf2\f0\fs24\lang1033{\*\listtag0} returns info for the first of the Poco built in libraries.  A name of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}"poco$loaded"}{\cf2\f0\fs24\lang1033{\*\listtag0} returns info for the first of the libraries loaded via }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#pragma}{\cf2\f0\fs24\lang1033{\*\listtag0}.  After calling }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FindPoe()}{\cf2\f0\fs24\lang1033{\*\listtag0} with one of these special values, make subsequent calls with a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} name pointer, and info is returned for the next library in the list.  When }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_not_found}{\cf2\f0\fs24\lang1033{\*\listtag0} is returned, info has been obtained for all built in or loaded libraries.  (These special values exist primarily to support the LOOKUP.POE programmer's tool, but they may be used by any POE module.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}name}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to the name of the POE module to find.  The name is the value specified in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Setup_Pocorex()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro of the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch plib}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to the module's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} array is stored via this pointer, if the named module is found.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:The number of functions in the named module's array of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Lib_proto}{\cf2\f0\fs24\lang1033{\*\listtag0} structures, or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_not_found}{\cf2\f0\fs24\lang1033{\*\listtag0} if the library wasn't found.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean CheckAbort(void *dummy);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Detects whether the user is trying to abort the Poco program (i.e., is holding down the right mouse button or a key).  If so, the user is prompted with the standard }{\cf2\f0\fs24\i\lang1033{\*\listtag0}Abort? YES/NO}{\cf2\f0\fs24\lang1033{\*\listtag0} dialog.  If the user selects }{\cf2\f0\fs24\i\lang1033{\*\listtag0}YES}{\cf2\f0\fs24\lang1033{\*\listtag0}, this function returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch We recommend that you call this function occasionally during long-processing operations.   Poco allows users to abort the program at any time; this is handled automatically by the interpreter.  POE modules must occasionally call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}CheckAbort()}{\cf2\f0\fs24\lang1033{\*\listtag0} to simulate this behavior.  As a rule of thumb, if control can remain in your POE code without a return to Poco for more than 3 seconds, consider calling }{\cf2\f0\fs24\b\lang1033{\*\listtag0}CheckAbort()}{\cf2\f0\fs24\lang1033{\*\listtag0} at least twice per second during your processing.  Calling it more than 10 times per second will slow down your processing unnecessarily.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the user requests and confirms and abort, the POE module must set }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0} to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_abort}{\cf2\f0\fs24\lang1033{\*\listtag0}, and return}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  to the Poco interpreter as quickly as possible.  Take any needed cleanup actions before returning, but remember that the user has requested and confirmed the abort, and expects a pretty quick return to the Animator menus.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If the Poco program has specified an abort handler routine, it will be executed }{\cf2\f0\fs24\i\lang1033{\*\listtag0}before}{\cf2\f0\fs24\lang1033{\*\listtag0} the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}CheckAbort()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine returns to the POE module. (The Poco interpreter is reentrant.)  Be careful of this, it is possible that the abort handler in the Poco program could try to re-enter the POE module by calling any of the POE module's functions.  It is the POE module's responsibility to handle this without crashing.  The only time this reentrancy can occur is during a call to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}CheckAbort()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}dummy}{\cf2\f0\fs24\lang1033{\*\listtag0}An unused value; pass }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0} if used requested and confirmed an abort; else }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Rcel *GetPicScreen(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns a pointer to the current graphics screen.  This is identical to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeGetPicScreen()}{\cf2\f0\fs24\lang1033{\*\listtag0} function, except that it returns a C pointer instead of a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The pointer this function returns is required by most drawing functions in the GFX library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A pointer to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rcel}{\cf2\f0\fs24\lang1033{\*\listtag0} which is the main graphics screen; the current flic frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetMenuColors(int *indexes, Rgb3 **lastrgbs, Rgb3 **ideals);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns information about the menu colors used by Animator.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}lastrgbs}{\cf2\f0\fs24\lang1033{\*\listtag0} are the menu colors the user saw the last time a menu was onscreen.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}ideals}{\cf2\f0\fs24\lang1033{\*\listtag0} are the menu colors the user prefers.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}indexes}{\cf2\f0\fs24\lang1033{\*\listtag0} are the five slots in the palette which the lastrgbs occupied when menus were visible on-screen.  (Unless the color palette has changed since the last time menus were displayed, the lastrgbs and indexes also represent what will happen the next time menus are onscreen.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The lastrgb values may not equal the ideal values if the current color map doesn't include the exact colors the user prefers.  In this case, the lastrgb values are the closest match.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The lastrgbs and ideals are returned in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} format.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is defined in CMAP.H.  Any of the parameters may be }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}, to signal that the corresponding return value is not needed by the caller.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function is primarily useful for ensuring that the user's favorite colors are present when you're}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  building a new color palette.  When you have extra palette slots available, we recommend that you copy the ideals array into them.  If the last five palette slots are free (251 thru 255), that's the best place for them.  This is not required, it is just a courtesy to the user.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}indexes}{\cf2\f0\fs24\lang1033{\*\listtag0} A pointer to an array of five integers into which the current color index values are returned.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch lastrgbs}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to an a pointer to an array of five }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} structures.  The pointer returned via this parameter points into the Animator data space, and the contents of the memory it points to }{\cf2\f0\fs24\i\lang1033{\*\listtag0}must not}{\cf2\f0\fs24\lang1033{\*\listtag0} be modified. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ideals}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to an a pointer to an array of five }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} structures.  The pointer returned via this parameter points into the Animator data space, and the contents of the memory it points to }{\cf2\f0\fs24\i\lang1033{\*\listtag0}must not}{\cf2\f0\fs24\lang1033{\*\listtag0} be modified. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode Overtime(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:This function is the POE equivalent to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} function in the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The basic operation of a POE }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} is similar to that of the Poco }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0}, but different parameters are passed to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  These are described in detail under the description of the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OTFunc}{\cf2\f0\fs24\lang1033{\*\listtag0} prototype in the }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}Data Types}{\cf2\f0\fs24\lang1033{\*\listtag0} chapter.  In summary, your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function must be declared as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   effect(void\~*data,\~int\~ix,\~int\~total,\~int\~scale);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} function from the Poco built in libraries is not available to POE modules (i.e., there is no }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeOverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro providing a call to the standard library entry point).  A }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeOverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} function would jump back into the Poco code rather than calling the specified POE routine to render the desired effect over time.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to the rendering function in your POE module that is called for each frame in the time sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch data}{\cf2\f0\fs24\lang1033{\*\listtag0}Any value you want; this is passed to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function on each call.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the rendering of the time sequence completely successfully.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_abort}{\cf2\f0\fs24\lang1033{\*\listtag0} if the user canceled out of the time menu.  Otherwise, the error code returned by your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode OverSegment(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:This function is the POE equivalent to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverSegment()}{\cf2\f0\fs24\lang1033{\*\listtag0} function in the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to the rendering function in your POE module that is called for each frame in the time sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch data}{\cf2\f0\fs24\lang1033{\*\listtag0}Any value you want; this is passed to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function on each call.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the rendering of the time sequence completely successfully.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_abort}{\cf2\f0\fs24\lang1033{\*\listtag0} if the user canceled out of the time menu.  Otherwise, the error code returned by your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode OverAll(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:This function is the POE equivalent to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverAll()}{\cf2\f0\fs24\lang1033{\*\listtag0} function in the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0}A pointer to the rendering function in your POE module that is called for each frame in the time sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch data}{\cf2\f0\fs24\lang1033{\*\listtag0}Any value you want; this is passed to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function on each call.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the rendering of the time sequence completely successfully.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_abort}{\cf2\f0\fs24\lang1033{\*\listtag0} if the user canceled out of the time menu.  Otherwise, the error code returned by your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}effect}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch GFXLIB - Graphics Library Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The graphics functions operate on the pixel data stored in a raster.  They work on any type of raster (e.g., RAM rasters, video hardware rasters).  They support simple drawing (dots, lines, segments) and complex blits (keyed blits, masked blits, zoom blits, etc).  They do not support complex drawing operations such as circles and polygons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These functions are the documented interface to the I/O library attached to a raster.  Do }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} call raster I/O functions directly through the raster's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}lib}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer.  The graphics functions documented below contain logic to resolve differences in raster types (eg, blit from hardware to RAM); the direct entry points will fail without the pre-conditioning of parms done by the documented functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch All of the functions listed below perform clipping when the operation would exceed the boundaries of the destination raster.  For each }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_whatever()}{\cf2\f0\fs24\lang1033{\*\listtag0} function listed below, there is also a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj__whatever()}{\cf2\f0\fs24\lang1033{\*\listtag0} function (two underbars after the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj}{\cf2\f0\fs24\lang1033{\*\listtag0}) which is an unclipped version.  If you call an unclipped raster output function with coordinates that cause data to be placed off the raster, you generally get a page fault or other fatal error which crashes Animator and causes the loss of the end user's work-in-progress.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_rcel_copy(FlicRaster *psource, FlicRaster *pdest)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies all pixel and color map data from the source raster into the destination raster.  The source and destination rasters may be of any type (including differing types), but they must be exactly the same size (width, height and depth).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}psource}{\cf2\f0\fs24\lang1033{\*\listtag0}The source raster handle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pdest}{\cf2\f0\fs24\lang1033{\*\listtag0}The destination raster handle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, or a standard error code as defined in PJECODES.H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_dot(FlicRaster *r, Pixel color, Coor x, Coor y);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a single pixel to the specified color. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of the pixel.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Pixel pj_get_dot(FlicRaster *r, Coor x, Coor y);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the color of a single pixel. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Color of the pixel, or zero if clipped.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_hseg(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor\~w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0} to a horizontal line segment in the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_hseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a horizontal line segment in the raster to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_vseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0} to a vertical line segment in the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of top of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_vseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a vertical segment in the raster to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of top of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_rectpix(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a memory buffer to a rectangle in the raster.  The memory buffer is a two-dimensional array of pixels with the top horizontal line of pixels first and the bottom horizontal line of pixels last (ie, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pixel pixbuf[h][w]}{\cf2\f0\fs24\lang1033{\*\listtag0}).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_rectpix(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a rectangle in the raster to a memory buffer.  The memory buffer is organized as two-dimensional array with the same format used by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_put_rectpix()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_hline(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid horizontal line segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_vline(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid vertical line segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_rect(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid color rectangle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_rast(FlicRaster *r, Pixel color);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets an entire raster to a solid color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_xor_rect(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exclusive-ORs a rectangle in a raster with a solid color.   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color to XOR rectangle with.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_mask1blit(UBYTE *mbytes, Coor mbpr, Coor mx, Coor my, FlicRaster *r, Coor rx, Coor ry, Ucoor width, Ucoor height, Pixel oncolor );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Expands a rectangle from a bitmap in memory to a full-pixel image in the raster.  Zeros in the bitmap are left unchanged in the raster and ones in the bitmap are changed to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0} (ie, a transparent blit).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}mbytes}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to a block of memory arranged as a two-dimensional}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  bitmap.  In the bitmap, bits are packed into bytes with the leftmost bits stored in the uppermost bits of each byte.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mbpr}{\cf2\f0\fs24\lang1033{\*\listtag0}The number of bytes per line within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}my}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the area to expand from within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch r}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster pointer.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ry}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the destination rectangle to expand into within the raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to expand, in pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to expand, in pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Ones in the source bitmap get mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_mask2blit(UBYTE *bitplane, Coor mbpr, Coor mx, Coor my,  FlicRaster *r, Coor rx, Coor ry, coor width, Ucoor height, Pixel oncolor, Pixel offcolor);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Expands a rectangle from a memory bitmap to a raster.  Zeros in the bitmap are mapped to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}offcolor}{\cf2\f0\fs24\lang1033{\*\listtag0} in the raster and ones are mapped to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This function is similar to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_mask1blit()}{\cf2\f0\fs24\lang1033{\*\listtag0}, except that it is an opaque rather than transparent blit. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}mbytes}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to a block of memory arranged as a two-dimensional bitmap.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mbpr}{\cf2\f0\fs24\lang1033{\*\listtag0}The number of bytes per line within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}my}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the area to expand in the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch r}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster pointer.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ry}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the destination rectangle to be expanded in the raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to expand.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to expand.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Ones in the source bitmap are mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offcolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Zeros in the source bitmap are mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_blitrect(FlicRaster *source, Coor src_x, Coor src_y,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FlicRaster *dest, Coor dest_x, Coor dest_y, Coor width, Coor height)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies all pixels from one rectangular area to another.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_tblitrect(FlicRaster *s, Coor sx, Coor sy, FlicRaster *d, Coor dx, Coor dy, Coor width, Coor height, Pixel tcolor)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Transparently copies pixels from one rectangular area to another.  Pixels in the source that are the same color as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}tcolor}{\cf2\f0\fs24\lang1033{\*\listtag0} are not copied; the corresponding pixel in the destination raster is unchanged.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch tcolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Transparent color of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_swaprect(FlicRaster *ra, Coor ax, Coor ay, FlicRaster\~*rb, Coor bx, Coor by, Coor width, Coor height)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exchanges all pixels in a pair of rectangular areas.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ax}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ay}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rb}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination hardware raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch bx}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rb}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch by}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rb}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to swap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to swap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_xor_rast(FlicRaster *s, FlicRaster *d);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exclusive-ORs all pixels in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0} against the pixels in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}d}{\cf2\f0\fs24\lang1033{\*\listtag0}, putting the result into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}d}{\cf2\f0\fs24\lang1033{\*\listtag0}.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The source and destination may }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} be the same raster.  The two rasters }{\cf2\f0\fs24\i\lang1033{\*\listtag0}must}{\cf2\f0\fs24\lang1033{\*\listtag0} be the same dimensions, but may be of differing types.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch d}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_zoomblit(FlicRaster *source, Coor src_x, Coor src_y, FlicRaster *dest, Coor dest_x, Coor dest_y, Ucoor width, Ucoor height, LONG zoom_x, LONG zoom_y )}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a rectangular area of the source raster to the destination raster, expanding each pixel into a box that is }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0} by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0} in size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values are expressed in destination coordinates.  It is possible that }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0} will not be an exact multiple of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0} and likewise }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} not an integral multiple of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0}.  In this case the expanded pixels on the right and bottom edges are clipped. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Upper edge of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Upper edge of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of destination... }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Width of source is:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}(width+zoom_x-1)/zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Height of source is:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}(width+zoom_y-1)/zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Amount to stretch each pixel in horizonal direction.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0} Amount to stretch each pixel in vertical direction.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unbrun_rect(FlicRaster *r, void *ucbuf, long pixsize,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Coor x, Coor y, Ucoor width, Ucoor height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-run-length-compresses from memory onto the raster.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values must always exactly match the width and height of the output raster.  Also, they must be the width and height of the original source data when it was compressed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed image data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a single pixel.  Always 1 in this version of the software.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unss2_rect(FlicRaster *r, void *ucbuf, long pixsize, Coor xstart, Coor ystart, Ucoor width, Ucoor\~height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-delta-compresses from memory onto the raster.  This is the main decompression routine for Animator Pro FLC-format files; all frames (other than the first frame) are compressed in this format, if compressed at all.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values must always exactly match the width and height of the output raster.  Also, they must be the width and height of the original source data when it was compressed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed delta image.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a pixel.  Always 1 for now.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch xstart}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of each line of the decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ystart}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of decompression destination. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unlccomp_rect(FlicRaster *r, void *ucbuf, long pixsize, Coor x, Coor y, Ucoor width, Ucoor height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-delta-compresses from memory onto the raster.  This is the main decompression routine for Animator 1.0 FLI-format files; all frames (other than the first frame) are compressed in this format, if compressed at all.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed delta image.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a pixel.  Always 1 for now.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of area to decompress into.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of area to decompress into.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_colors(FlicRaster *r, long start, long count, void\~*rgb_buf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a portion of the hardware color map to the rgb values contained in cbuf.  This function does nothing if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not }{\cf2\f0\fs24\lang1033{\*\listtag0}update the RAM-based color map attached to the raster; it updates video hardware color registers only.  We recommend that you alter colors by first changing the RAM-based color map, then calling }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_cmap_update()}{\cf2\f0\fs24\lang1033{\*\listtag0} rather that using this function to alter the hardware directly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch start}{\cf2\f0\fs24\lang1033{\*\listtag0}Start index in color map between 0 and 255.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch count}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of colors to set between 0 and 256.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to rgb data.  For each color to be changed there are 3 bytes - one each for red, green and blue.  The values of these color components range from 0 to 255.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_wait_rast_vsync(FlicRaster *r);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Waits until the monitor is in vertical blank.  This function returns immediately when }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_uncc256(FlicRaster *r, void *ucbuf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Decompresses a delta color map.  This function does nothing if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster.  This updates the hardware palette registers only, it does not update the RAM-based color map attached to the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed color data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_uncc64(FlicRaster *r, void *ucbuf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Old-style routine to decompress a delta color map.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Same as ucbuf in uncc256, but the rgb data ranges from 0-63 (like the VGA color palette) rather than 0-256.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed color data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch SYSLIB - String, Memory, and Unbuffered I/O Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The SYSLIB.H and SYSLIB.LIB files contain the string, memory, and I/O functions listed below.  When you request the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} host library, these functions will be available.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Standard functions supported by AA_SYSLIB:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Please refer to your compiler's runtime library documentation for details on these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}free      malloc    memcmp    memcpy}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     memset    strcmp    strcpy    strlen}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     zalloc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zalloc()}{\cf2\f0\fs24\lang1033{\*\listtag0} function is identical to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}malloc()}{\cf2\f0\fs24\lang1033{\*\listtag0} except that it initializes the memory block to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Additional functions:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} supports the following additional functions, not found in standard C runtime libraries.  These functions provide unbuffered I/O similar (but }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} identical) to the functions found in a standard runtime library.  To use these functions, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} the JFILE.H header file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Jfile pj_open(char *filename, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Opens a file for unbuffered reading and/or writing.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file to open.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}File access mode, one of:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 0}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DWRITEONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADWRITE}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:File handle or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Jfile pj_create(char *filename, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Creates a new file for unbuffered reading/writing.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Currently, in spite of the mode parameter, the file is always readable and writable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file to create.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}File access mode, one of:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 0}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DWRITEONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADWRITE}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:File handle or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_close(Jfile fhandle)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Closes a file opened via }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}Handle of file to close.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, or an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_read(Jfile fhandle, void *buf, long size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reads data from file into a memory buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer; destination of read.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of bytes to read.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Number of bytes actually read.  If zero, you are at end of file.  If less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_write(Jfile fhandle, void *buf, long size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes data from a memory buffer into a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer; source of write.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of bytes to write.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Number of bytes actually written.  If less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_seek(Jfile fhandle, long offset, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Seek to an arbitrary location in a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0}New file position.  Exact meaning depends on }{\cf2\f0\fs24\b\lang1033{\*\listtag0}mode}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}Can be one of three values:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}0}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_START}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is relative to the start of the file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}1}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_REL}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is amount to move from current file position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}2}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_END}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is relative to the end of the file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:New file position relative to the start of the file.  Negative }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value if an error occurs.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_tell(Jfile fhandle)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns current file position relative to the start of file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Current file position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_delete(char *filename)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Deletes a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file.  May include device and directory information.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if file was deleted, otherwise an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} that describes the problem.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_rename(char *oldname, char *newname)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Renames a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}oldname}{\cf2\f0\fs24\lang1033{\*\listtag0}Current file name.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch newname}{\cf2\f0\fs24\lang1033{\*\listtag0}New file name.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if file was renamed, otherwise an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} that describes the problem.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean pj_exists(char *filename)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Determines whether a file exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of the file to check for.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0} if file exists, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0} if it does not exist.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_ioerr(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the last unbuffered file I/O operation.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch After an unbuffered I/O function has returned a generic error status (e.g., a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer), this function will return an Animator }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value that describes the problem in detail.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:(none)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the last I/O function worked, otherwise an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_load_path(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the name of the path the REX module was loaded from.  Returned string will be in the format:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    }{\cf2\f0\fs24\i\lang1033{\*\listtag0}device:\\path\\etc\\yourname.typ}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:(none)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A pointer to the path.  This points into the host data space, do not modify the string in-place!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_path_name(char *path)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns a pointer to last name in a path (i.e., a pointer to the filename on the end of a full path-with-filename string).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}path}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to pathname.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Pointer to the last name in the path string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_path_suffix(char *path)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns pointer to the '.' in the last name in a path, or to the terminating '\\0' if the last name does not have a suffix.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}path}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to pathname.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Pointer to the suffix of the last name (the '.'), or pointer to '\\0'.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch STDIOLIB - Standard C Stream I/O Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The STDIO.H and STDIOLIB.LIB files contain the standard stream I/O functions listed below.  When you request the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_STDIOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} host library, these functions will be available.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Standard Stream I/O functions supported by AA_STDIOLIB:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Please refer to your compiler's runtime library documentation for details on these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}clearerr  fclose    feof      ferror    fflush}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     fgetc     fgets     fopen     fprintf   fputc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     fputs     fread     fseek     ftell     fwrite}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     printf    rewind    sprintf   ungetc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Additional functions:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_STDIOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} supports the following additional function, not found in standard C runtime libraries.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_errno_errcode(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the last stream I/O function. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch After a stream I/O function has returned a generic error status (e.g., a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer), this function will return an Animator }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value that describes the problem in detail.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the last I/O function worked, otherwise an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MATHLIB - Standard C Math Support}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The MATH.H and MATHHOST.LIB files contain the standard floating point math functions listed below.  When you request the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_MATHLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} host library, these functions will be available.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Math functions supported by AA_MATHLIB:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Please refer to your compiler's runtime library documentation for details on these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}acos      asin      atan      atan2     ceil}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     cos       cosh      exp       fabs      floor}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     fmod      frexp     ldexp     log       log10}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     modf      pow       sin       sinh      sqrt}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     tan       tanh}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro File Formats}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chapter details each of the file formats defined by Animator Pro.  Formats supported by Animator Pro but defined by another party, such as GIF and TIFF files, are not described in this document.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The files created by Autodesk Animator Pro are a superset of those created by the original Autodesk Animator.  In some cases the Animator Pro formats are identical with the older Animator format.  In other cases, new data fields or data compression techniques have been added to the file.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch All two-byte and four-byte data values in Animator Pro files are stored in Intel-style order, the same as they would appear in memory on an 80x86 machine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Common Hierarchial Chunked File Structure}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In general, Animator Pro files contain one or more }{\cf2\f0\fs24\i\lang1033{\*\listtag0}chunks}{\cf2\f0\fs24\lang1033{\*\listtag0} of information.  Conceptually, a chunk is a combination of control information and data.  The most common Animator Pro file format is a header structure followed by hierarchial data chunks.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Every chunk begins with a header of at least 6 bytes. The first four bytes contain the length of the chunk (including the header itself, and also including the length of all subordinate chunks, if any).  The next two bytes are an identifier word which describes the type of data in the chunk.  Some chunks have headers longer than six bytes, but the size and identifier fields always occupy the first six bytes of the header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Animator Pro animation file is a good example of a hierarchial chunked file structure.  The data in an  animation file is arranged as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch animation file:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch optional prefix chunk: }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch settings chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cel placement chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch frame 1 chunk:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch postage stamp chunk:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch postage stamp data}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch color palette chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pixel data chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch frame 2 chunk:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pixel data chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch frame 3 chunk:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch color palette chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pixel data chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch frame 4 chunk:  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch color palette chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ring frame chunk:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch color palette chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pixel data chunk}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It is possible that new types of chunks not described in this document will be added to animation files in the future.  We recommend that you quietly ignore unknown chunk types you encounter during animation playback.  The size fields in the chunk headers make it easy to skip an entire unrecognized chunk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FLC - Animator Pro Flic Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This is the main animation file format created by Animator Pro.  The file contains a 128-byte header, followed by an optional prefix chunk, followed by one or more frame chunks.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The prefix chunk, if present, contains Animator Pro settings information, CEL placement information, and other auxiliary data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A frame chunk exists for each frame in the animation.  In addition, a }{\cf2\f0\fs24\i\lang1033{\*\listtag0}ring frame}{\cf2\f0\fs24\lang1033{\*\listtag0} follows all the animation frames.  Each frame chunk contains color palette information and/or pixel data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The ring frame contains delta-compressed information to loop from the last frame of the flic back to the first.  It can be helpful to think of the ring frame as a copy of the first frame, compressed in a different way.  All flic files will contain a ring frame, including a single-frame flic.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC file header}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A FLC file begins with a 128-byte header, described below.  All lengths and offsets are in bytes.  All  values stored in the header fields are unsigned.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the entire animation file, including this file header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42magicFile format identifier.  Always hex AF12.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62framesNumber of frames in the flic.  This count does }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} include the ring frame.  FLC files have a maximum length of 4000 frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 82widthScreen width in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 102heightScreen height in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 122depthBits per pixel (always 8).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 142flagsSet to hex 0003 after ring frame is written and flic header is updated.  This indicates that the file was properly finished and closed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 164speedNumber of milliseconds to delay between each frame during playback.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 202reservedUnused word, set to 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 224createdThe MSDOS-formatted date and time of the file's creation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 264creatorThe serial number of the Animator Pro program used to create the file.  If the file was created by some other program using the FlicLib development kit, this value is hex 464C4942 ("FLIB").}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 304updatedThe MSDOS-formatted date and time of the file's most recent update.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 344updaterIndicates who last updated the file.  See the description of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}creator}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 382aspectxThe x-axis aspect ratio at which the file was created.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 402aspectyThe y-axis aspect ratio at which the file was created.  Most often, the x:y aspect ratio will be 1:1.  A 320x200 flic has a ratio of 6:5.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4238reservedUnused space, set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 804oframe1Offset from the beginning of the file to the first animation frame chunk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 844oframe2Offset from the beginning of the file to the second animation frame chunk.  This value is used when looping from the ring frame back to the second frame during playback.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 8840reservedUnused space, set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC prefix chunk}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An optional prefix chunk may immediately follow the animation file header.  This chunk is used to store auxiliary data which is not directly involved in the animation playback.  The prefix chunk starts with a 16-byte header (identical in structure to a frame header), as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the prefix chunk, including this header and all subordinate chunks that follow.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42typePrefix chunk identifier.  Always hex F100.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62chunksNumber of subordinate chunks in the prefix chunk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 88reservedUnused space, set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To determine whether a prefix chunk is present, read the 16-byte header following the file header.  If the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}type}{\cf2\f0\fs24\lang1033{\*\listtag0} value is hex F100, it's a prefix chunk.  If the value is hex F1FA it's the first frame chunk, and no prefix chunk exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qc\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Note}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Programs other than Animator Pro should never need to create flic files that  contain a prefix chunk.  Programs reading a flic file should skip the prefix chunk by using the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} value in the prefix header to read and discard the prefix, or by seeking directly to the first frame using the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}oframe1}{\cf2\f0\fs24\lang1033{\*\listtag0} field from the file header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLC frame chunks}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Frame chunks contain the pixel and color data for the animation.  A frame chunk may contain multiple subordinate chunks, each containing a different type of data for the current frame.  Each frame chunk starts with a 16-byte header that describes the contents of the frame:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the frame chunk, including this header and all subordinate chunks that follow.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42typeFrame chunk identifier.  Always hex F1FA.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62chunksNumber of subordinate chunks in the frame chunk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 88reservedUnused space, set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Immediately following the frame header are the frame's subordinate data chunks.  When the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}chunks}{\cf2\f0\fs24\lang1033{\*\listtag0} count in the frame header is zero, it indicates that this frame is identical to the previous frame.  This implies that no change is made to the screen or color palette, but the appropriate delay is still inserted during playback.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each data chunk within a frame chunk is formatted as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the chunk, including this header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42typeData type identifier.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6}{\cf2\f0\fs18\lang1033{\*\listtag0}(size-6)}{\cf2\f0\fs24\lang1033{\*\listtag0}dataThe color or pixel data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}type}{\cf2\f0\fs24\lang1033{\*\listtag0} values in the chunk headers indicate what type of graphics data the chunk contains and which compression method was used to encode the data.  The following values (and their associated mnemonic names) are currently found in frame data chunks:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ValueNameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4FLI_COLOR256256-level color palette info}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 7FLI_SS2 Word-oriented delta compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 11FLI_COLOR 64-level color palette info}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 12FLI_LC Byte-oriented delta compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 13FLI_BLACK Entire frame is color index 0}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 15FLI_BRUN Byte run length compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 16FLI_COPY No compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 18FLI_PSTAMPPostage stamp sized image}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following sections describe each of these data encoding methods in detail.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type  4 (FLI_COLOR256) - 256-Level Color}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The data in this chunk is organized in packets.  The first word following the chunk header is a count of the number of packets in the chunk.  Each packet consists of a one-byte color index skip count, a one-byte color count and three bytes of color information for each color defined.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch At the start of the chunk, the color index is assumed to be zero.  Before processing any colors in a packet, the color index skip count is added to the current color index.  The number of colors defined in the packet is retrieved.  A zero in this byte indicates 256 colors follow.  The three bytes for each color define the red, green, and blue components of the color in that order. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  Each component can range from 0 (off) to 255 (full on).  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The data to change colors 2,7,8, and 9 would appear as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2; two packets }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2,1,r,g,b; skip 2, change 1 }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4,3,r,g,b,r,g,b,r,g,b; skip 4, change 3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 11 (FLI_COLOR) - 64-Level Color}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk is identical to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FLI_COLOR256}{\cf2\f0\fs24\lang1033{\*\listtag0} except that the values for the red, green and blue components are in the range of 0-63 instead of 0-255.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 13 (FLI_BLACK) - No Data}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk has no data following the header.  All pixels in the frame are set to color index 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 16 (FLI_COPY) - No Compression}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk contains an uncompressed image of the frame.  The number of pixels following the chunk header is exactly the width of the animation times the height of the animation.  The data starts in the upper left corner with pixels copied from left to right and then top to bottom.  This type of chunk is created when the preferred compression method (SS2 or BRUN) generates more data than the uncompressed frame image; a relatively rare situation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 15 (FLI_BRUN) - Byte Run Length Compression}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk contains the entire image in a compressed format.  Usually this chunk is used in the first frame of an animation, or within a postage stamp image chunk. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The data is organized in lines.  Each line contains packets of compressed pixels.  The first line is at the top of the animation, followed by subsequent lines moving downward.  The number of lines in this chunk is given by the height of the animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The first byte of each line is a count of packets in the line.  This value is ignored, it is a holdover from the original Animator.  It is possible to generate more than 255 packets on a line.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} of the animation is now used to drive the decoding of packets on a line; continue reading and processing packets until }{\cf2\f0\fs24\i\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} pixels have been processed, then proceed to the next line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each packet consist of a type/size byte, followed by one or more pixels.  If the packet type is negative it is a count of pixels to be copied from the packet to the animation image.  If the packet type is positive it contains a single pixel which is to be replicated; the absolute value of the packet type is the number of times the pixel is to be replicated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 12 (FLI_LC) - Byte Aligned Delta Compression}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk contains the differences between the previous frame and this frame.  This compression method was used by the original Animator, but is not created by Animator Pro.  This type of chunk can appear in an Animator Pro file, however, if the file was originally created by Animator, then some (but not all) frames were modified using Animator Pro.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The first 16-bit word following the chunk header contains the position of the first line in the chunk.  This is a count of lines (down from the top of the image) which are unchanged from the prior frame.  The second 16-bit word contains the number of lines in the chunk.  The data for the lines follows these two words.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each line begins with two bytes.  The first byte contains the starting x position of the data on the line, and the second byte the number of packets for the line.  Unlike BRUN compression, the packet count }{\cf2\f0\fs24\i\lang1033{\*\listtag0}is}{\cf2\f0\fs24\lang1033{\*\listtag0} significant (because this compression method is only used on 320x200 flics).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each packet consists of a single byte column skip, followed by a packet type/size byte.  If the packet type is positive it is a count of pixels to be copied from the packet to the animation image.  If the packet type is negative it contains a single pixel which is to be replicated; the absolute value of the packet type gives the number of times the pixel is to be replicated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Note}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The negative/positive meaning of the packet type bytes in LC compression is reversed from that used in BRUN compression.  This gives better performance during playback.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type  7 (FLI_SS2) - Word Aligned Delta Compression}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This format contains the differences between consecutive frames.  This is the format most often used by Animator Pro for frames other than the first frame of an animation.  It is similar to the line coded delta (LC) compression, but is word oriented instead of byte oriented.  The data is organized into lines and each line is organized into packets.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The first word in the data following the chunk header contains the number of lines in the chunk.  Each line}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  can begin with some optional words that are used to skip lines and set the last byte in the line for animations with odd widths.  These optional words are followed by a count of the packets in the line.  The line count does not include skipped lines.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The high order two bits of the word is used to determine the contents of the word.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Bit 15  Bit 14 Meaning}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   0    0The word contains the packet count.  The packets follow this word.  The packet count }{\cf2\f0\fs24\i\lang1033{\*\listtag0}can}{\cf2\f0\fs24\lang1033{\*\listtag0} be zero; this occurs when only the last pixel on a line changes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   1    0The low order byte is to be stored in the last byte of the current line.  The packet count always follows this word.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   1    1The word contains a line skip count.  The number of lines skipped is given by the absolute value of the word.  This word can be followed by more skip counts, by a last byte word, or by the packet count.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The packets in each line are similar to the packets for the line coded chunk.  The first byte of each packet is a column skip count.  The second byte is a packet type.  If the packet type is positive, the packet type is a count of words to be copied from the packet to the animation image.  If the packet type is negative, the packet contains one more word which is to be replicated.  The absolute value of the packet type gives the number of times the word is to be replicated.  The high and low order byte in the replicated word do not necessarily have the same value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Chunk Type 18 (FLI_PSTAMP) - Postage Stamp Image}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This chunk type holds a postage stamp -- a reduced-size image -- of the frame.  It generally appears only in the first frame chunk within a flic file.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When creating a postage stamp, Animator Pro considers the ideal size to be 100x63 pixels.  The actual size will vary as needed to maintain the same aspect ratio as the original.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The pixels in a postage stamp image are mapped into a }{\cf2\f0\fs24\i\lang1033{\*\listtag0}six-cube}{\cf2\f0\fs24\lang1033{\*\listtag0} color space, regardless of the color palette}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  settings for the full frame image.  A six-cube color space is formed as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch start at palette entry 0}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch for red = 0 thru 5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch for green = 0 thru 5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch for blue = 0 thru 5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch palette_red   = (red   * 256)/6 }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch palette_green = (green * 256)/6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch palette_blue  = (blue  * 256)/6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch move to next palette entry}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch end for blue}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch end for green}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch end for red}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Any arbitrary rgb value (where each component is in the range of 0-255) can be mapped into the six-cube space using the formula:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   ((6*red)/256)*36\~+\~((6*green)/256)*6\~+\~((6*blue)/256)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a frame data chunk has been identified as a postage stamp, the header for the chunk contains more fields than just size and type.  The full postage stamp chunk header is defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the postage stamp chunk, including this header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42typePostage stamp identifier; always 18.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62heightHeight of the postage stamp image, in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 82widthWidth of the postage stamp image, in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 102xlateColor translation type;  always 1, indicating six-cube color space.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Immediately following this header is the postage stamp data.  The data is formatted as a chunk with standard size/type header.  The type will be one of:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ValueNameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 15FPS_BRUN Byte run length compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 16FPS_COPY No compression}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 18FPS_XLAT256Six-cube color xlate table}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FPS_BRUN and FPS_COPY types are identical to the FLI_BRUN and FLI_COPY encoding methods described above.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The FPS_XLAT256 type indicates that the chunk contains a 256-byte color translation table instead of pixel data.  To process this type of postage stamp, read the pixel data for the full-sized frame image, and translate its pixels into six-cube space using a lookup in the 256-byte color translation table.  This type of postage}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  stamp appears when the size of the animation frames is smaller than the standard 100x63 postage stamp size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FLI - Original Animator Flic Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This animation file format is limited to 320x200 resolution.  It is the main animation file format of the original Animator, and is still used by Animator Pro for creating 320x200 animations.  The file structure is very similar to that of a FLC file.  A FLI file does not contain a prefix chunk, and does not use FLI_PSTAMP or FLI_SS2 data encoding in the frame chunks.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLI file header}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The file header for a FLI file is a subset of the FLC file header.  It is defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the entire animation file, including this file header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42magicFile format identifier.  Always hex AF11.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62framesNumber of frames in the flic.  This count does }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} include the ring frame.  FLI files have a maximum length of 4000 frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 82widthScreen width in pixels. This is always 320 in a FLI file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 102heightScreen height in pixels. This is always 200 in a FLI file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 122depthBits per pixel (always 8).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 142flagsAlways zero in a FLI file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 162speedNumber of jiffies to delay between each frame during playback.  A jiffy is 1/70 of a second.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 18110reservedUnused space, set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch The FLI frame chunks}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch One or more frame chunks immediately follow the FLI file header.  The frame chunks in a FLI file are identical to those in a FLC file, except that postage stamp image (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}FLI_PSTAMP}{\cf2\f0\fs24\lang1033{\*\listtag0}) and word-runlength-compression (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}FLI_SS2}{\cf2\f0\fs24\lang1033{\*\listtag0}) data chunks never appear in FLI files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch CEL - Animation Cel Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CEL files contain one or more frames of image data.  Both Animator Pro and the original Animator produce CEL files, but each uses a different file format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To process a CEL file for input, read the first 2 bytes of the file.  If they are hex 9119, the file is an original Animator CEL file.  If the first two bytes are not 9119, it is an Animator Pro CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro CEL Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An Animator Pro CEL file is identical to a FLC file in all respects.  A CEL file should have a Celdata chunk in the file prefix chunk which describes the x,y placement of the CEL.  If the Celdata placement chunk is not present, assume a placement of 0,0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator CEL Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The original Animator also produced CEL files.  These were still-picture files, not the multi-frame files Animator Pro now uses.  A CEL file from the original Animator is identical to a PIC file from the original Animator in all respects.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch PIC - Picture Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PIC files contain still images in an uncompressed format.  Both the original Animator and Animator Pro produce PIC files.  The file formats are different; Animator Pro produces a hierarchial chunked file, while the original Animator file is a simpler fixed format.  These formats are detailed in the following sections.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To process a PIC file for input, read the first 2 bytes of the file.  If they are hex 9119, the file is an original Animator PIC format file.  If the first two bytes are not 9119, it is an Animator Pro PIC file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro PIC Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro uses this format to store a single-frame picture image or bitmap.  This format description applies to both PIC and MSK files.  The file begins with a 64-byte header defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the file, including this header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42magicFile format identifier.  Always hex 9500.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62widthThe width of the image, in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 82heightThe height of the image, in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 102xcoordThe X coordinate; typically zero.  (See note below).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 122ycoordThe Y coordinate; typically zero.  (See note below).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 144useridAn arbitrary 4-byte value; generally zero.  Do not count on any particular value in this field.  Set this field to zero when creating a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 181depthThe number of bits per pixel.  This is 8 for PIC files and 1 for MSK files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1945reservedUnused space; set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Note}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}xcoord}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ycoord}{\cf2\f0\fs24\lang1033{\*\listtag0} values in a PIC file header will typically be zero.  Non-zero values indicate that the file contains a rectangle from within a larger picture.  In this case, the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}xcoord}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ycoord}{\cf2\f0\fs24\lang1033{\*\listtag0} values represent the relation of the saved rectangle to the full image.  These values can be safely ignored for most purposes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Following the file header are the data chunks for the image.  Each data chunk within a PIC or MSK file is formatted as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the chunk, including this header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42typeData type identifier.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6}{\cf2\f0\fs18\lang1033{\*\listtag0}(size-6)}{\cf2\f0\fs24\lang1033{\*\listtag0}dataThe color or pixel data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}type}{\cf2\f0\fs24\lang1033{\*\listtag0} values in the chunk headers indicate what type of graphics data the chunk contains.  The following values (and their associated mnemonic names) are currently found in PIC/MSK data chunks:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ValueNameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0PIC_CMAP    Color palette info}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1PIC_BYTEPIXELSByte-per-pixel image data}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2PIC_BITPIXELSBit-per-pixel mask data}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}PIC_CMAP}{\cf2\f0\fs24\lang1033{\*\listtag0} chunk, the first 2-byte word is a version code; currently this is set to zero.  Following the version word are all 256 palette entries in }{\cf2\f0\fs24\i\lang1033{\*\listtag0}rgbrgb...}{\cf2\f0\fs24\lang1033{\*\listtag0} order.  Each of the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}g}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0} components is a single byte in the range of 0-255.  This type of chunk appears in PIC files; there will generally be no color map chunk in a MSK file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}PIC_BYTEPIXELS}{\cf2\f0\fs24\lang1033{\*\listtag0} chunk, the image data appears immediately following the 6-byte chunk header.  The data is stored as one byte per pixel, in left-to-right, top-to-bottom sequence.  This type of chunk appears in PIC files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}PIC_BITPIXELS}{\cf2\f0\fs24\lang1033{\*\listtag0} chunk, the bitmap data appears immediately following the 6-byte chunk header.  The data is stored as bits packed into bytes such that the leftmost bits appear in the high-order positions of each byte.  The bits are stored in left-to-right, top-to-bottom sequence.  When the width of the bitmap is not a multiple of 8, there will be unused bits in the low-order positions of the last byte on each line.  The number of bytes per line is ((}{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0}+7)/8).  This type of chunk appears in MSK files.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator PIC Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The original Animator uses this format to store a single-frame picture image.  This format description applies to both PIC and CEL files.  The file begins with a 32 byte header, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 02typeFile type identifier.  Always hex 9119.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 22widthWidth of image.  Always 320 in a PIC file; may be any value in a CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42heightHeight of image.  Always 200 in a PIC file; may be any value in a CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62xcoordX coordinate for upper left corner of the image.  Always zero in a PIC file; may be non-zero in a CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 82ycoordY coordinate for upper left corner of the image.  Always zero in a PIC file; may be non-zero in a CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 101depthNumber of bits per pixel; always 8.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 111compressCompression flag; always zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 124datasizeSize of the image data in bytes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1616reservedUnused space; set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Immediately following the header is the color map.  It contains all 256 palette entries in }{\cf2\f0\fs24\i\lang1033{\*\listtag0}rgbrgb...}{\cf2\f0\fs24\lang1033{\*\listtag0} order.  Each of the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}g}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0} components is a single byte in the range of 0-63.  Following the color palette is the image data, one byte per pixel.  The image data is stored in left-to-right, top-to-bottom sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch MSK - Mask Data Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch MSK files contain a bitmap image.  Both Animator Pro and the original Animator produce MSK files, but the formats are different.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To process a MSK file for input, check the file size.  If it is exactly 8000 bytes, the file is an original Animator MSK file.  If the file is any other size, it is an Animator Pro MSK file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro MSK Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An Animator Pro MSK file is identical to an Animator Pro PIC file.  It will have a pixel depth of\~1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator MSK Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A MSK file created by the original Animator is exactly 8000 bytes long.  There is no file header or other control information in the file.  It contains the image bit map, 1 bit per pixel, with the leftmost pixels packed into the high order bits of each byte.  The size of the image is fixed at 320x200.  The image is stored left-to-right, top-to-bottom.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch COL - Color Map Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A COL file stores the rgb values for entries in the color palette.  Both Animator Pro and the original}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  Animator produce COL files, but the formats are different.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To process a COL file for input, check the file size.  If it is exactly 768 bytes, the file is an original Animator COL file.  If the file is any other size, it is an Animator Pro COL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Animator Pro COL Files}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An Animator Pro COL file stores color palette information.  The file begins with an 8-byte header defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04sizeThe size of the file, including this header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 42magicFile format identifier.  Always hex B123.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 62versionThe version of color storage format.  Currently set to zero, indicating 256-level color data in each r,g,b component.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Following the file header are palette entries in }{\cf2\f0\fs24\i\lang1033{\*\listtag0}rgbrgb...}{\cf2\f0\fs24\lang1033{\*\listtag0} order.  Each of the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\i\lang1033{\*\listtag0} g}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0} components is a single byte in the range of 0-255.  Generally, there will be data for 256 palette entries, but this cannot be assumed.  The actual number of palette entries is ((}{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0}-8)/3); if this value is not an even multiple of three, the file is corrupted.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\lang1033{\*\listtag0}\abinodiroverride\ltrch Original Animator COL Files2}{\cf2\f0\fs28\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A COL file created by the original Animator is exactly 768 bytes long.  There is no file header or other control information in the file.  The rgb values for all 256 palette entries is stored in }{\cf2\f0\fs24\i\lang1033{\*\listtag0}rgbrgb...}{\cf2\f0\fs24\lang1033{\*\listtag0} sequence.  Each of the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}g}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0} values is in the range of 0-63.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch PLY - Polygon Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A PLY file holds a set of points that describe a polygon.  Both Animator Pro and the original Animator create PLY files.  The file format is the same for both.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A PLY file starts with an 8-byte header, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 02pointsCount of points in the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 24reservedUnused space; set to zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 61closedClosed-shape flag.  If 1, there is an implied connection between the last point and the first.  If zero, the shape is not closed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 71magicFile format identifier.  Always hex 99.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The points data follows the file header.  Each point is described with three 16-bit integers, representing the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}y}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}z}{\cf2\f0\fs24\lang1033{\*\listtag0} coordinates of each point.  The }{\cf2\f0\fs24\i\lang1033{\*\listtag0}z}{\cf2\f0\fs24\lang1033{\*\listtag0} coordinates are always zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch TWE - Tween Data Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A TWE file holds information about a tweening operation set up via the Tween menus.  The information includes the starting and ending shapes, and the optional user-specified links between the shapes.  Animator Pro creates tween files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A TWE file begins with an 8-byte header defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 02magicFile format identifier.  Always hex 1995.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 22versionThe file format version; always zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 44tcountThe number of tween shapes in the file; always 2.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 88reservedUnused space; set to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 164linkcountThe number of link entries in the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Immediately following the file header are the link entries.  If the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}linkcount}{\cf2\f0\fs24\lang1033{\*\listtag0} value is zero there are no links.  Each link entry is a pair of 32-bit integers.  The first value in each pair is the index of the point in the first shape, and the second value is the index of the point in the ending shape.  (IE, a link value of 2,7 says to link the second starting-shape point to the seventh ending-shape point.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Following the link entries is the data block that describes the starting shape, then the data block that describes the ending shape.  The format of these blocks is identical to that of the polygon (PLY) file, including file header data.  In other words, they appear as if a pair of polygon files are embedded in the tween file at this point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch OPT - Optics Menu Settings Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An OPT file holds information about an optics operation set up via the Optics menus.  Both Animator Pro and the original Animator create OPT files.  The file format is the same for both.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch An OPT file starts with a 4-byte header, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 02magic File type identifier.  Always hex 1A3F.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 22countNumber of records in the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Following the file header are optics records of 50 bytes each.  A record is generated for each click on CONTINUE MOVE in the OPTICS menu.  The move records are formatted as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Offset}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0} Length}{\cf2\f0\fs24\lang1033{\*\listtag0}  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}NameDescription}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 04link  In the file, this field is always zero.  In memory, it's a pointer to the next move record.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 46spincenterThe x,y,z coordinates of the spin center point; three 16-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 106spinaxisThe x,y,z coordinates of the spin axis; three 16-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 166spinturnsThe x,y,z coordinates of the spin turns; three 16-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 224spininterIntermediate turns.  Two 16-bit values. These are values for a conjugation matrix that corresponds to spin axis.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 266sizecenterThe x,y,z coordinates of the size center point; three 16-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 322xmultiplierDetermines (along with xdivisor) how to scale along x dimension.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 342xdivisorDetermines (along with xmultiplier) how to scale along x dimension.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 362ymultiplierDetermines (along with ydivisor) how to scale along y dimension.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 382ydivisorDetermines (along with ymultiplier) how to scale along y dimension.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 402bothmultLike xmultiplier, but applied to both dimensions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 422bothdivLike xdivisor, but applied to both dimensions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 446linearmoveThe x,y,z offset for a linear move; three 16-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Internal Usage Files (REC, SET, CFG, GLV, MU)}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each of these file types is created by Animator Pro to store internal data between sessions.  These files must not be touched by other applications.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch REC files store macros.  Animator Pro REC files are not the same as the REC files documented with the original Animator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SET files store internal settings information; they are created by the Quit|Save menu, and by the Save Default Settings menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CFG files store internal configuration information, such as the video driver and mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GLV files store Poco Global Variables.  The data is stored as a series of nullterminated strings, and must }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} be modified using a normal text editor.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch MU files store menu text, prompts, error messages, etc, customized to the proper native language.  The data is stored as normal ASCII text, and must }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} be modified in any way.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\qj\sl240\slmult1\itap0{\f0\fs24\lang1033{\*\listtag0}\par}}