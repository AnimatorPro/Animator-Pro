{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq2\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq2\fttruetype Arial;}
{\f2\fnil\fcharset0\fprq2\fttruetype Dingbats;}
{\f3\fnil\fcharset0\fprq2\fttruetype Symbol;}
{\f4\fnil\fcharset0\fprq2\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red0\green0\blue0;}
{\stylesheet
{\s1\fi-431\li720\sbasedon28\snext28Contents 1;}
{\s2\fi-431\li1440\sbasedon28\snext28Contents 2;}
{\s3\fi-431\li2160\sbasedon28\snext28Contents 3;}
{\s8\fi-431\li720\sbasedon28Lower Roman List;}
{\s5\tx431\sbasedon24\snext28Numbered Heading 1;}
{\s6\tx431\sbasedon25\snext28Numbered Heading 2;}
{\s7\fi-431\li720Square List;}
{\*\cs11\sbasedon28Endnote Text;}
{\s4\fi-431\li2880\sbasedon28\snext28Contents 4;}
{\s9\fi-431\li720Diamond List;}
{\s10\fi-431\li720Numbered List;}
{\*\cs12\fs20\superEndnote Reference;}
{\s13\fi-431\li720Triangle List;}
{\s14\tx431\sbasedon26\snext28Numbered Heading 3;}
{\s15\fi-431\li720Dashed List;}
{\s16\fi-431\li720\sbasedon10Upper Roman List;}
{\s17\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 4;}
{\s18\fi-431\li720Heart List;}
{\s34\fi-431\li720Box List;}
{\s20\fi-431\li720\sbasedon10Upper Case List;}
{\s21\fi-431\li720Bullet List;}
{\s22\fi-431\li720Hand List;}
{\*\cs23\fs20\sbasedon28Footnote Text;}
{\s24\sb440\sa60\f1\fs34\b\sbasedon28\snext28Heading 1;}
{\s25\sb440\sa60\f1\fs28\b\sbasedon28\snext28Heading 2;}
{\s19\qc\sb240\sa120\f1\fs32\b\sbasedon28\snext28Contents Header;}
{\s27\fi-431\li720Tick List;}
{\s26\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 3;}
{\s29\fi-431\li720\sbasedon10Lower Case List;}
{\s30\li1440\ri1440\sa120\sbasedon28Block Text;}
{\s36\f4\sbasedon28Plain Text;}
{\s32\tx1584\sbasedon5\snext28Section Heading;}
{\s33\fi-431\li720Implies List;}
{\s28\f0\fs24Normal;}
{\s35\fi-431\li720Star List;}
{\*\cs31\fs20\superFootnote Reference;}
{\s37\tx1584\sbasedon5\snext28Chapter Heading;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\info\uc1}\deftab720\viewkind1\paperw11905\paperh16837\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\headery0\footery0\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Contents}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Introduction To Picture Driver Development  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Environment  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Kit Files  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Overview of Picture Driver Processing  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Image Files  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Image Files  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Implementation Details  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Basic Data Types  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting up the REX Interface  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Runtime Library Support  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Automatic Initialization and Cleanup  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Coding the Pdr (rexlib_header) Structure  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Providing Output Options  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Extending the Image_file Structure  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Single-frame Images  6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch open_image_file()  6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch close_image_file()  7}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch read_first_frame()  7}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Multi-frame Images  8}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch read_delta_next()  9}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading RGB Images  9}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_seekstart() 10}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_readline() 11}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Single-frame Images 11}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch create_image_file() 11}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch spec_best_fit() 12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch save_frames() 13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Multi-frame Images 13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GFXLIB - Graphics Library Functions 14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_rcel_copy 14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_dot 14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_dot 15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_hseg 15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_hseg 15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_vseg 16}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_vseg 16}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_put_rectpix 16}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_rectpix 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_hline 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_vline 17}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_rect 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_rast 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_xor_rect 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_mask1blit 18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_mask2blit 19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_blitrect 20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_tblitrect 20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_swaprect 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_xor_rast 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_zoomblit 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unbrun_rect 22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unss2_rect 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_unlccomp_rect 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_set_colors 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_wait_rast_vsync 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_uncc256 25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_uncc64 25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SYSLIB - String, Memory, and Unbuffered I/O Functions 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch free 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch malloc 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcmp 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcpy 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memset 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcmp 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcpy 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strlen 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch zalloc 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_open 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_create 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_close 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_read 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_write 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_seek 27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_tell 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_delete 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_rename 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_exists 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_ioerr 28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_load_path 29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_path_name 29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_get_path_suffix 29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch STDIOLIB - Standard C Stream I/O Functions 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch clearerr 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fclose 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch feof 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ferror 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fflush 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgetc 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgets 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fopen 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fprintf 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputc 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputs 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fread 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fseek 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ftell 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fwrite 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch printf 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rewind 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sprintf 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ungetc 30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pj_errno_errcode 30}
\sect\sectd\sbknone\colsx360\headery0\footery0\marglsxn4320\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Introduction To Picture Driver Development}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Autodesk Animator Pro has built in support for several image file formats.  Loadable }{\cf2\f0\fs24\i\lang1033{\*\listtag0}picture driver}{\cf2\f0\fs24\lang1033{\*\listtag0} (PDR) modules support other picture and animation file formats.  This document describes the techniques used to develop a loadable picture driver module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Environment}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch You can develop a picture driver with any tools which support the Watcom -3s function cal\'adling convention and the Phar Lap DOS extender.  The kit is currently oriented primarily towards C (po\'adssibly with some assembler code) as the development language.  Tools which may be used to develop a PDR module include (but are not necessarily limited to)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Watcom C/386 (v8.0 or higher)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -MetaWare High C}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Other languages and compilers may also be compatible.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A picture driver module is compiled into a Phar Lap REX module.  Animator Pro dynamically loads the REX module at runtime, when needed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Development Kit Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The PDR development kit contains support libraries, a set of C-language header files, and source code for several example driver modules.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following diagram shows the structure of the development kit, and provides a brief overview of the directories:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \\PICDRIVE}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\INC- Header files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\LIB- Support libraries.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\SKELETON- Skeleton code to clone from.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\TARGA- Reads RGB image files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9500 \uc0\u9472  \\RIF- Reads multiframe files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  \uc0\u9492 \uc0\u9472  \\FLILO    - Writes multiframe files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Within the makefiles and linker response files of the example source code, all path references are relative to the current directory; there are no hard-coded path references.  The PICDRIVE directory and its children can be installed at any location in your directory structure, including at the root, or with PICDRIVE as the child of another directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Overview of Picture Driver Processing}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A picture driver can support any combination of the following features:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Read a single-frame or multi-frame image with a pixel depth of 1 thru 8 bits.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Read a single-frame image with a pixel depth of greater than 8 bits (ie, an RGB or Truecolor image).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Write more or more frames of a flic into a single output file.  The output file can be any pixel depth supported by the picture driver.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Provide a set of text strings which are used to build a menu of output options used to write an image file.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It is unlikely that a single picture driver module will implement all these features.  Most popular file formats require only a subset of these actions to fully support the format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A picture driver is loaded and used by a host program.  Two host programs currently exist, ANIPRO and ANICONV.  ANIPRO is Autodesk Animator Pro itself.  ANICONV is an image conversion utility supplied with Animator Pro.  There are several small differences in the way these programs use a picture driver module, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -When a file format supports a variety of output options, such as differing data compression types, the ANICONV host can conduct options dialogs with the user before calling the driver's file creation function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -ANIPRO does not support the output options dialogs.  When the ANIPRO host uses a picture driver to create a file, the driver must apply reasonable defaults if multiple options exist.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -The ANICONV host can process RGB input data directly, converting it to a 256-color image using algorithms built in to ANICONV.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -The ANIPRO host cannot process RGB input data, and will thus never call the RGB-oriented input functions the driver provides.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These differences require specific actions on the part of your driver (assuming reasonable defaults and informing the host when RGB data is present).  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Image Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Picture drivers provide to the host a set of functions to read image files.  The functions include }{\cf2\f0\fs24\i\lang1033{\*\listtag0}open}{\cf2\f0\fs24\lang1033{\*\listtag0} and}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  }{\cf2\f0\fs24\i\lang1033{\*\listtag0}close}{\cf2\f0\fs24\lang1033{\*\listtag0} file, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read first frame}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read next frame}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read RGB line}{\cf2\f0\fs24\lang1033{\*\listtag0}.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch For non-RGB images, the host will call the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}open}{\cf2\f0\fs24\lang1033{\*\listtag0} function, and if it succeeds the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read first}{\cf2\f0\fs24\lang1033{\*\listtag0} function is called to load the image into a raster provided by the host.  If the picture driver indicates that multiple frames exist in the input file, the host will call the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read next}{\cf2\f0\fs24\lang1033{\*\listtag0} function repeatedly, until all the images in the file have been loaded.  After the file has been processed, the host calls the driver's }{\cf2\f0\fs24\i\lang1033{\*\listtag0}close}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Processing is slightly different for RGB images.  If the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}open}{\cf2\f0\fs24\lang1033{\*\listtag0} function indicated a pixel depth greater than 8 bits, the RGB-aware host will call the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read rgb line}{\cf2\f0\fs24\lang1033{\*\listtag0} function to obtain each line of input from the file.  A host which cannot handle RGB data may attempt to call the normal }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read first}{\cf2\f0\fs24\lang1033{\*\listtag0} function to process the image.  In this case, the picture driver's }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read first}{\cf2\f0\fs24\lang1033{\*\listtag0} routine must return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_rgb_convert}{\cf2\f0\fs24\lang1033{\*\listtag0} to signal that the data can't be converted by the picture driver.  (Of course, it is possible to write a picture driver which can perform an internal conversion of RGB to mapped pixels.  In this case, the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}read first}{\cf2\f0\fs24\lang1033{\*\listtag0} function would perform the conversion, and the host would be unaware that the data was originally in RGB format.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch For a non-RGB image, the picture driver processes the entire image, and draws it to the raster using the GFX library functions described later in this document.  For an RGB image, the picture driver returns the RGB data a line at a time into a buffer, and the host draws the data to the screen, after translating it to color mapped pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Image Files}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Picture drivers provide to the host a set of functions to write images files.  These include }{\cf2\f0\fs24\i\lang1033{\*\listtag0}create file}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\i\lang1033{\*\listtag0}close file}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\i\lang1033{\*\listtag0}save frames}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The driver can also provide a set of strings used to prompt the user for output options.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To create an image file, the host calls the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}create file}{\cf2\f0\fs24\lang1033{\*\listtag0} function (after processing any options dialogs specified by the driver).  If the file creation suceeds, the host then calls the }{\cf2\f0\fs24\i\lang1033{\*\listtag0}save frames}{\cf2\f0\fs24\lang1033{\*\listtag0} function, passing a frame count, a pointer to a raster containing the image, and a pointer to a function to load the next frame into that raster when there are multiple output frames to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The picture driver's }{\cf2\f0\fs24\i\lang1033{\*\listtag0}save frames}{\cf2\f0\fs24\lang1033{\*\listtag0} function obtains the pixels from the raster using functions from the GFX host library described later in this document.  It performs any data compression or formatting required by the output file format, and saves the data into the file using normal C I/O functions from the STDIOLIB host library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs36\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Implementation Details}{\cf2\f0\fs36\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To create a PDR module, you need to code several data structures which establish the interface between the host and your module.  You also need to code several functions which the host will call to process image files.  This chapter provides details on coding these items.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The SKELETON directory contains a do-nothing PDR module which you can copy and modify as needed to create a new PDR.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Basic Data Types}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The STDTYPES.H file defines several standard macros and data types which are used in PDR development.  The macros are common C items, and have }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#ifdef}{\cf2\f0\fs24\lang1033{\*\listtag0}/}{\cf2\f0\fs24\b\lang1033{\*\listtag0}#endif}{\cf2\f0\fs24\lang1033{\*\listtag0} protective wrappers around them; they are defined only if you haven't already defined them.  The items defined in STDTYPES.H and the assumptions made concerning integral C data types are listed below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}Data Type/MacroDescription}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed or unsigned 8-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch short}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 16-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch int}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 32-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long}{\cf2\f0\fs24\lang1033{\*\listtag0}Assumed to be signed 32-bit}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch BYTE   }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}signed char}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch UBYTE  }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned char}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch SHORT  }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}signed short}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch USHORT }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned short}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch LONG   }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}signed long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ULONG  }{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Pixel}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned char}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Ucoor}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}unsigned long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Coor}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}long}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0}Typedef, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}int}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} Macro, defined as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}((void *)0)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}    Macro, defined as 1}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0}   Macro, defined as 0}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Success}{\cf2\f0\fs24\lang1033{\*\listtag0}Macro, defined as 0}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting up the REX Interface}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The REX interface is a subsystem within Animator that loads and unloads PDR modules, and supplies the runtime service libraries (standard I/O, Poco builtin functions, etc).  It is also calls the optional initialization and cleanup routines as it loads and unloads the PDR module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A data structure named }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rexlib_header}{\cf2\f0\fs24\lang1033{\*\listtag0} provides the primary interface between the REX subsystem and your PDR module.  Data in this structure informs the host of which support services you need (standard I/O library, etc), and also provides the host with the pointers to your implementation routines.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Runtime Library Support}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PDR modules cannot be linked with a standard C runtime library, because runtime libraries are generally not compatible with the Phar Lap REX module format.  The host provides several libraries of functions that fill the basic needs provided by a runtime library.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Each of these host libraries has an associated C header file which you must }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} in the PDR source code when you use the library's functions.  Some of the libraries also have an associated LIB file, required at link time.  Each library has a formal name which helps keep the REX interface layer "behind the scenes" and simplifies setting up PDR modules.  The following table describes the host libraries available and the associated support files:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch NameHeaderLink LIBFunctionality}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_SYSLIBSYSLIB.HAASYSLIB.LIBMemory and  string utils.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_STDIOLIBSTDIOLIB.HSTDIOLIB.LIBStandard C I/O. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_GFXLIBGFX.HGFXLIB.LIBGraphics.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Automatic Initialization and Cleanup}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A PDR module may contain initialization and cleanup routines which are automatically executed by the host when the module is loaded and unloaded.  The init routine will be executed immediately after the PDR module is loaded, before the any PDR functions are called by the host.  The cleanup routine is executed just before the PDR module is unloaded.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The init and cleanup routines may use host-provided library functions from any of the libraries listed above.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Coding the Pdr (rexlib_header) Structure}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure makes the primary connection between your PDR code and the host.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure must be declared and pre-initialized as a global data item in}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  your driver, and it must be named }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rexlib_header}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is defined in PICDRIVE.H, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct pdr \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Rexlib      hdr;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char        *title_info;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char        *long_info;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char        default_suffi[16];}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     ULONG       max_write_frames;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     ULONG       max_read_frames;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Boolean     (*spec_best_fit)();}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*create_image_file)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*open_image_file)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     void        (*close_image_file)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*read_first_frame)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*read_delta_next)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*save_frames)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Pdroptions *poptions;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*rgb_seekstart)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     Errcode     (*rgb_readline)()}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     long        reserved[4];}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     \} Pdr;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}hdr}{\cf2\f0\fs24\lang1033{\*\listtag0} field contains information for the REX loader within the host program.  You initialize this field with pointers to your auto-init and auto-cleanup functions, and some standard values, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   \{REX_PICDRIVER,PDR_VERSION,init,cleanup,HLIB_LIST\}}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If you don't have an init or cleanup function, code the constant }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NOFUNC}{\cf2\f0\fs24\lang1033{\*\listtag0} for thoses entries.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}title_info}{\cf2\f0\fs24\lang1033{\*\listtag0} field is a pointer to a 1-line description of your driver which is displayed on the host's driver selection menu.  Only the first 34 characters of the string are displayed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}long_info}{\cf2\f0\fs24\lang1033{\*\listtag0} field contains a full description of your driver.  There is no limit on the length of the text.  The text is word-wrapped as needed by the host; a newline character will force a displayed newline.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}default_suffi}{\cf2\f0\fs24\lang1033{\*\listtag0} field holds file suffi which are displayed in the file selector dialog buttons.  If more than one suffix is given, they should be separated with semicolons (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}".PI1;.PI2;.PI3"}{\cf2\f0\fs24\lang1033{\*\listtag0}).  A maximum of 3 suffi may be given.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max_write_frames}{\cf2\f0\fs24\lang1033{\*\listtag0} field indicates the maximum number of frames that can be written to a single file in your format.  A value of 1 indicates a still-image file format.  A value of 0 indicates that your driver reads files but does not write them.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max_read_frames}{\cf2\f0\fs24\lang1033{\*\listtag0} field indicates the maximum number of frames that can be read from a single file in your format.  A value of 1 indicates a still-image file format.  A value of 0 indicates that your driver writes files but does not read them.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poptions}{\cf2\f0\fs24\lang1033{\*\listtag0} field is a pointer to a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdroptions}{\cf2\f0\fs24\lang1033{\*\listtag0} structure which describes the output options your}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  driver supports.  This field is optional, and must be set to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} if your driver doesn't support output options.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdroptions}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is discussed in detail below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}reserved}{\cf2\f0\fs24\lang1033{\*\listtag0} field is reserved for future expansion.  You must initialize this field to zeros.  (In C, this can be done by failing to provide any initialization values in the declaration, as usual.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The remaining fields are pointers to the functions that provide the read/write functionality for your file format.  These are discussed in detail below.  For any function you don't implement in your driver, supply a value of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NOFUNC}{\cf2\f0\fs24\lang1033{\*\listtag0} in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Providing Output Options}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Some image file formats provide several ways to store the picture data within the file.  The host program can conduct dialogs for you, to ask the user for selections among the various options.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Up to four separate categories of options may be specified.  Within each category, there may be as many as eight selections to choose from.  The host conducts one dialog for each category.  The dialog presents the selections to the user; the user can select any one of the items in each category.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Not all hosts support the options interface to a picture driver.  Your driver must assume reasonable defaults for the options, so that it will work correctly with any host.  Currently, Animator Pro itself does not conduct options dialogs, but the image conversion utility delivered with Animator Pro does.  It is also possible to write a Poco program that runs from within Animator and accesses a PDR directly.  That Poco program may conduct the options dialogs (this requires PDRACCES.POE from the Animator Pro Bonus Pack).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdroptions}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is used to pass text strings describing the options to the host program, and to return the requested options to your driver.  It is defined in PICDRIVE.H as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct pdr_options \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char    *choicelst1;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char    *choicelst2;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char    *choicelst3;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     char    *choicelst4;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE   options_valid;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE   option1;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE   option2;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE   option3;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE   option4;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     \} Pdroptions;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}choicelst}{\cf2\f0\fs24\lang1033{\*\listtag0} fields are pointers to string that contain the items for the options dialogs.  Within}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  each string are a series of items delimited by newline characters.  The first substring is the title placed in the dialog box.  The remaining substrings are the option choices.  The last substring should always be }{\cf2\f0\fs24\i\lang1033{\*\listtag0}Cancel}{\cf2\f0\fs24\lang1033{\*\listtag0}.  If the user picks the last option (regardless of the actual string text) the host aborts the Save Picture or Save Flic operation in progress without ever calling the PDR }{\cf2\f0\fs24\i\lang1033{\*\listtag0}create file}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}options_valid}{\cf2\f0\fs24\lang1033{\*\listtag0} field indicates to the driver whether the host conducted options dialogs or not.  If zero, no dialogs were conducted, and the driver must use its default options.  If non-zero, the values in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}option}{\cf2\f0\fs24\lang1033{\*\listtag0} fields are valid.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}option}{\cf2\f0\fs24\lang1033{\*\listtag0} fields contain the numeric index of the option selections made by the user.  This value ranges from zero to the number of selections you provided\~minus 1.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In some of the example programs, the title string for each option category is defined using the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}RL_KEYTEXT()}{\cf2\f0\fs24\lang1033{\*\listtag0} macro.  We use this macro to make connections to Animator Pro's menu (AA.MU) file.  You should }{\cf2\f0\fs24\i\b\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} use this macro when setting up options strings in your driver, because the AA.MU file will not contain  entries for your driver, and runtime errors will result.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The SKELETON example program contains an example of setting up options data in a picture driver.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Extending the Image_file Structure}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Your driver }{\cf2\f0\fs24\i\lang1033{\*\listtag0}open}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\i\lang1033{\*\listtag0}create}{\cf2\f0\fs24\lang1033{\*\listtag0} functions return to the host a pointer to an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.  The host passes this pointer back to your driver's read and write functions.  You can extend this structure, or embed it within a larger structure of your own, so that in effect the host passes your I/O functions a pointer to your major control data structure.  Some of the example drivers use this technique.  If you embed the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure within your own larger structure, the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure must appear first.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure is defined in PICDRIVE.H, as follows:   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct image_file \{}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     struct pdr *pd;     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE write_mode;   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     UBYTE needs_work_cel;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     \} Image_file;}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pd}{\cf2\f0\fs24\lang1033{\*\listtag0} field is a pointer to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure, defined in your code as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rexlib_header}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This is set by the host; do not change it.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}write_mode}{\cf2\f0\fs24\lang1033{\*\listtag0} field is set to zero when the file is opened for reading, or non-zero if the file is opened}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  for writing.  (IE, it indicates whether the file was opened via a call to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_ifile}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_ifile}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This is set by the host; do not change it.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}needs_work_cel}{\cf2\f0\fs24\lang1033{\*\listtag0} field indicates whether your driver needs a work raster in addition to the main raster to create an image file.  This field is set by your driver.  When your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_ifile}{\cf2\f0\fs24\lang1033{\*\listtag0} function sets this field to non-zero, the host allocates a work raster for you, and passes the raster pointer to your output function.  This is used primarily by animation file formats which generate image data based on the deltas between the prior and current frames.  The work raster can be used to hold a copy of the prior frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Single-frame Images}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The picture driver provides three major functions to the host for reading non-RGB single-frame images:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following sections contain details on coding each of these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch open_image_file()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode open_image_file(Pdr\~*pd, char\~*path,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Image_file\~**pif, Anim_info\~*ainfo);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function serves both as a 'detect' function, and as a prelude to actually loading an image file.  When the user requests a Load Picture operation, the host will first try the PDR module selected by the user.  If the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function in that PDR responds with }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, the host uses that PDR to process the image.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the pre-selected PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function returns an error status, the host then tries every PDR available, calling the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function in each.  The first PDR which responds with }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, is used to load the image.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Because of the logic used by the host to find an available PDR to cope with any given file, your PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function must return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\i\lang1033{\*\listtag0}only}{\cf2\f0\fs24\lang1033{\*\listtag0} if it recognizes the data in the file and is capable of processing it.  Do not rely solely on the filename or filetype, open the file and read enough of it to verify that it contains data in the format you expected.  }{\cf2\f0\fs24\i\lang1033{\*\listtag0}Never}{\cf2\f0\fs24\lang1033{\*\listtag0} code a PDR module which always returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} from the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function! }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  Doing so effectively disables other picture drivers in the system.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} should do only the work needed to determine that it can handle a given file.  Keeping this to a minimum helps overall performance of the host program, since the host tries every PDR until one is found that can handle a given file.  In general, attempt to reject a file as quickly as possible when it's not a format your driver understands.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Because the host uses }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} both as a detector function and as a prelude to actually reading the file, the sequence of calls to load a picture is:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Load PDR, call its }{\cf2\f0\fs24\b\lang1033{\*\listtag0}init()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}, which returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} again.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}cleanup()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one, then unload the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In other words, any number of open/close or open/read/close sequences may occur while the PDR is loaded.  The host will never open more than one file at a time using the same instance of a PDR.  (IE, the PDR must be serially reusable, but need not be reentrant.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch close_image_file()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode close_image_file(Image_file **pif);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} when it's done processing the file.  Any resources (file handles, memory, etc) aquired at }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} time should be freed during the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} processing.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls this function for image files opened with either }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  You can use the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}write_mode}{\cf2\f0\fs24\lang1033{\*\listtag0} flag in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to determine how the file was opened, if necessary.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch read_first_frame()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode read_first_frame(Image_file *ifile,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch  Rcel *screen);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0} function is used to load the image into the raster provided by the host.  This host}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  calls this function only after }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} has returned }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The processing steps generally taken by a driver's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0} function are:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Clear the raster using }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_set_rast()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -If the file format includes color palette information, process it into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Cmap}{\cf2\f0\fs24\lang1033{\*\listtag0} format (as defined in CMAP.H), and use }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_cmap_load()}{\cf2\f0\fs24\lang1033{\*\listtag0} to load the colors into the raster's color map.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Read the pixels from the file, decompressing or otherwise processing as necessary to get them into a byte-per-pixel format.  Write the pixels into the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Return to the host caller after the entire image has been loaded.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If necessary, the color palette can be loaded after the pixel data, if required by the data format in the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Any of the GFX library output routines can be used to render the pixels on the destination raster.  We recommend that you avoid using }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_put_dot()}{\cf2\f0\fs24\lang1033{\*\listtag0} for performance reasons.  The most useful GFX functions will be probably be }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_pug_hseg()}{\cf2\f0\fs24\lang1033{\*\listtag0} to write a line at a time to the raster, or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_put_rectpix()}{\cf2\f0\fs24\lang1033{\*\listtag0} to write several lines at a time.  Other functions, such as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_mask1blit()}{\cf2\f0\fs24\lang1033{\*\listtag0}, might also be useful if you are loading a 1-bit-per-pixel image, for example.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host handles all issues involving clipping and/or centering the image when it doesn't match the physical screen dimensions.  You can just assume that the raster you are drawing to is the exact same size as the image width and height values your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function loaded into the host's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure.  (Indeed, it is mandatory that you make this assumption for the convert utilty's scaling operations to function correctly.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading Multi-frame Images}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A driver that supports multiple-frame image file formats (ie, animation files) indicates this fact to the host by setting the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max_read_frames}{\cf2\f0\fs24\lang1033{\*\listtag0} field of the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to a value greater than 1.  In this case, the driver provides an additional input function, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_delta_next()}{\cf2\f0\fs24\lang1033{\*\listtag0}, described below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When your driver supports multi-frame input, and your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} sets the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}num_frames}{\cf2\f0\fs24\lang1033{\*\listtag0} field in the host's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to a value greater than 1, the host makes the following sequence of calls to load the frames:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Load PDR, call its }{\cf2\f0\fs24\b\lang1033{\*\listtag0}init()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}, which returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} again.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_delta_next()}{\cf2\f0\fs24\lang1033{\*\listtag0} repeatedly to get the rest of the frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}cleanup()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one, then unload the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_delta_next()}{\cf2\f0\fs24\lang1033{\*\listtag0} repeatedly until }{\cf2\f0\fs24\b\lang1033{\*\listtag0}num_frames}{\cf2\f0\fs24\lang1033{\*\listtag0} have been loaded.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch read_delta_next()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode read_delta_next(Image_file *ifile,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Rcel *screen);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function will only be called after the file has been opened, and the first frame has been loaded using }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  Upon entry, the raster provided by the host holds a copy of the prior frame.  Your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_delta_next()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine manipulates this image in whatever way is necessary to generate the next frame.  (This may involve applying deltas to the image already in the raster based on the next chunk of data in an animation file, or it may involve simply clearing the raster and loading the next image from the input file.)  The manipulation may include changes to the pixels and/or color palette.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Reading RGB Images}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RGB images (as opposed to color-mapped images) are handled differently in the host <-> driver interface.  Some host programs include logic to directly read RGB pixels and convert the image into a color-mapped representation.  Other host programs do not contain the conversion code.  There is no way for the driver to determine whether the host can handle RGB input.  Only single-frame images are handled by the RGB interface to a PDR.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the driver's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function detects a file containing RGB data, it must set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pdepth}{\cf2\f0\fs24\lang1033{\*\listtag0} field of the host's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to a value greater than 8.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A host that can handle RGB input will use the driver's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_seekstart()}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} routines to process the data, instead of calling }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  A host which cannot handle direct RGB input will call the driver's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  This allows the option of writing a driver that has its own RGB to color mapped conversion code.  If your driver doesn't contain such conversion logic, your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine should return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_rgb_convert}{\cf2\f0\fs24\lang1033{\*\listtag0} to indicate that it can't perform the conversion internally.  The user will then be prompted to use the Animator Pro image conversion utility to process the picture.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the host }{\cf2\f0\fs24\i\lang1033{\*\listtag0}cannot}{\cf2\f0\fs24\lang1033{\*\listtag0} handle RGB input directly, it makes the following sequence of calls:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Load PDR, call its }{\cf2\f0\fs24\b\lang1033{\*\listtag0}init()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}, which sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pdepth}{\cf2\f0\fs24\lang1033{\*\listtag0} to a value greater than 8 and returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} again.  (It agains sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pdepth}{\cf2\f0\fs24\lang1033{\*\listtag0} greater than 8.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read_first_frame()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This either performs the RGB conversion internally and leaves the resulting image in the host-provided raster, or it simply returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_rgb_convert}{\cf2\f0\fs24\lang1033{\*\listtag0} to indicate it can't handle the image internally.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}cleanup()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one, then unload the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the host }{\cf2\f0\fs24\i\lang1033{\*\listtag0}can}{\cf2\f0\fs24\lang1033{\*\listtag0} handle RGB input directly, it makes the following sequence of calls:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Load PDR, call its }{\cf2\f0\fs24\b\lang1033{\*\listtag0}init()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}, which sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pdepth}{\cf2\f0\fs24\lang1033{\*\listtag0} to a value greater than 8 and returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} again.  (It agains sets }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pdepth}{\cf2\f0\fs24\lang1033{\*\listtag0} greater than 8.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_seekstart()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} once for each line in the file.  The line count is determined by the value set into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_seekstart()}{\cf2\f0\fs24\lang1033{\*\listtag0} again.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readlines()}{\cf2\f0\fs24\lang1033{\*\listtag0} repeatedly again, to read all the lines a second time.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}cleanup()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one, then unload the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The RGB-aware host makes two passes through the data in the file.  The first pass builds a color map, and the second pass fits the pixels to the map and renders them to the raster.  There is no need for the driver to render directly to the raster with an RGB-aware host.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_seekstart()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode rgb_seekstart(Image_file *ifile);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_seekstart()}{\cf2\f0\fs24\lang1033{\*\listtag0} function is a signal from the host to the driver that the next call to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} should return the first line of pixels from the data stream.  This may involve seeking to the start of the data in the image file, setting internal flags the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine uses, or other internal actions as needed by the driver.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The return value from this function informs the host of how the image is stored in the file.  A value of zero (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}) indicates that the image is rightside}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page -up; the first line returned by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} is displayed at the top of the screen.  A return value greater than zero indicates the image is upside-down; the first line returned by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rgb_readline()}{\cf2\f0\fs24\lang1033{\*\listtag0} is displayed at the bottom of the screen.  A negative return value indicates an error, as usual.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_readline()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode rgb_readline(Image_file *ifile, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Rgb3 *linebuf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function returns the next line of RGB pixels in the buffer provided by the caller.  The pixels are stored into the buffer in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} format.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Rgb3}{\cf2\f0\fs24\lang1033{\*\listtag0} structure (defined in CMAP.H) provides a full byte for each of the red, green, and blue components.  The buffer will contain }{\cf2\f0\fs24\b\lang1033{\*\listtag0}3*width}{\cf2\f0\fs24\lang1033{\*\listtag0} bytes, based on the width set into the host's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}open_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host expects each of the RGB components to be 8 bits.  Your driver must scale smaller bit depths up to 8-bit levels when the source data's pixel depth is less than 8 bits per red, green, or blue component.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Single-frame Images}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The picture driver provides four major functions for writing single-frame images:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -}{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following sections contain details on coding each of these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In general, the host will make the following sequence of calls to write one or more image frames to a file:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Load PDR, call its }{\cf2\f0\fs24\b\lang1033{\*\listtag0}init()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}, which returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}close_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -Call PDR's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}cleanup()}{\cf2\f0\fs24\lang1033{\*\listtag0} if there is one, then unload the module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch create_image_file()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode create_image_file(struct pdr *pd, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   char *path, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Image_file **pif,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Anim_info *spec );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} to begin output of an image (or series of images).  The driver allocates any needed resources, creates the physical file, and stores the values from the host's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure into local storage for later use in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If the output file already exists, the driver must arbitrarily recreate it anew.  The user has already been prompted, and has confirmed the intention to overwrite the existing file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If your driver needs a work raster, the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function should set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}needs_work_raster}{\cf2\f0\fs24\lang1033{\*\listtag0} field of the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Image_file}{\cf2\f0\fs24\lang1033{\*\listtag0} structure to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The host will then allocate a work raster and provide a pointer to it when it calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch spec_best_fit()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean spec_best_fit(Anim_info *spec);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0} before calling the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  The host uses }{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0} to determine whether the image can be stored exactly as the user requested, in terms of:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -width}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -height}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -pixel depth}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -frame count}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   -aspect ratio}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The values are stored in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} structure passed from the host to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  The driver should examine the values in these fields, and if it can comply with the request, return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If the driver cannot comply with the request exactly, it should modify the offending field to the value representing the closest thing the driver can do, and return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0} to indicate that the fit is not exact.  An example of this would be when the host wants to save a 200x100 image, but the driver's format is limited to 320x200.  In this case, the driver would load 320x200 into the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} fields in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0} and return }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When }{\cf2\f0\fs24\b\lang1033{\*\listtag0}spec_best_fit()}{\cf2\f0\fs24\lang1033{\*\listtag0} returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0}, the host builds a virtual raster that matches the new values in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Anim_info}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The virtual raster will properly clip an oversized image, or read zeroes around the edges of an undersized image, so that your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine need not deal with clipping and offsets when reading from the input raster.  The new values are also passed}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  to your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} function (IE, if you indicated you can only do 320x200, then those values will be passed }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}).  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch save_frames()}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Prototype:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef Errcode (*Sfunc_t)(int\~ix,void *sdata);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode save_frames(Image_file *ifile,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Rcel *screen,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   int num_frames,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Sfunc_T *seek_func,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   void *seek_data,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch   Rcel *work_screen );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The host calls }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} after a successfull call to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0}.  Your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine writes one or more frames to the output file, based on the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}frame_count}{\cf2\f0\fs24\lang1033{\*\listtag0} paramter passed to it by the host.  The frame count will only be greater than one only if the driver's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pdr}{\cf2\f0\fs24\lang1033{\*\listtag0} structure indicates it can handle multiple frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The driver reads color map information and pixels from the raster provided by the host, and writes the information to a file.  The functions in the GFX library are used to read pixels from the host's raster.  The color map is accessed directly via the }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Cmap}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer in the raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing Multi-frame Images}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Writing multiple frames is very similar to writing a single frame.  The primary difference is that the host passes to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine a pointer to a }{\cf2\f0\fs24\i\lang1033{\*\listtag0}seek}{\cf2\f0\fs24\lang1033{\*\listtag0} function, and a }{\cf2\f0\fs24\i\lang1033{\*\listtag0}seek data}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter.  After writing each frame to the file, the driver calls the host's seek function, passing the seek data and the index of the frame to seek to.  (The index is zero-based.)  Each call to the host's seek causes the next image to be placed into the host's raster.  Your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine loops through the frames until the number of frames indicated by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}frame_count}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter have been written.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If your }{\cf2\f0\fs24\b\lang1033{\*\listtag0}create_image_file()}{\cf2\f0\fs24\lang1033{\*\listtag0} routine set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}needs_work_raster}{\cf2\f0\fs24\lang1033{\*\listtag0} field to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0}, the host also provides a work raster in the paramters to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}save_frames()}{\cf2\f0\fs24\lang1033{\*\listtag0}.   When your output format is delta-based, we recommend that you copy the current frame image into the work raster, then seek to the next frame, and base your deltas on the difference between the work and current rasters.  Avoid excessive calls to the host's seek function for best performance.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A call to the host's seek function that specifies the index of the current frame will not change the contents of the current raster.  But, it does pass}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  through the host's abort-check logic, and can be used as a way of occasionally polling for a user-requested abort.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch GFXLIB - Graphics Library Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The graphics functions operate on the pixel data stored in a raster.  They work on any type of raster (e.g., RAM rasters, video hardware rasters).  They support simple drawing (dots, lines, segments) and complex blits (keyed blits, masked blits, zoom blits, etc).  They do not support complex drawing operations such as circles and polygons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These functions are the documented interface to the I/O library attached to a raster.  Do }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} call raster I/O functions directly through the raster's }{\cf2\f0\fs24\b\lang1033{\*\listtag0}lib}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer.  The graphics functions documented below contain logic to resolve differences in raster types (eg, blit from hardware to RAM); the direct entry points will fail without the pre-conditioning of parms done by the documented functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch All of the functions listed below perform clipping when the operation would exceed the boundaries of the destination raster.  For each }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_whatever()}{\cf2\f0\fs24\lang1033{\*\listtag0} function listed below, there is also a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj__whatever()}{\cf2\f0\fs24\lang1033{\*\listtag0} function (two underbars after the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj}{\cf2\f0\fs24\lang1033{\*\listtag0}) which is an unclipped version.  If you call an unclipped raster output function with coordinates that cause data to be placed off the raster, you generally get a page fault or other fatal error which crashes Animator and causes the loss of the end user's work-in-progress.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_rcel_copy(FlicRaster *psource, FlicRaster *pdest)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies all pixel and color map data from the source raster into the destination raster.  The source and destination rasters may be of any type (including differing types), but they must be exactly the same size (width, height and depth).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}psource}{\cf2\f0\fs24\lang1033{\*\listtag0}The source raster handle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pdest}{\cf2\f0\fs24\lang1033{\*\listtag0}The destination raster handle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, or a standard error code as defined in PJECODES.H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_dot(FlicRaster *r, Pixel color, Coor x, Coor y);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a single pixel to the specified color. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of the pixel.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Pixel pj_get_dot(FlicRaster *r, Coor x, Coor y);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the color of a single pixel. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Color of the pixel, or zero if clipped.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_hseg(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor\~w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0} to a horizontal line segment in the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_hseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a horizontal line segment in the raster to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_vseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0} to a vertical line segment in the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of top of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_vseg(FlicRaster *r, void *pixbuf, Ucoor x, Ucoor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a vertical segment in the raster to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of top of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_put_rectpix(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a memory buffer to a rectangle in the raster.  The memory buffer is a two-dimensional array of pixels with the top horizontal line of pixels first and the bottom horizontal line of pixels last (ie, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Pixel pixbuf[h][w]}{\cf2\f0\fs24\lang1033{\*\listtag0}).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer containing the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_get_rectpix(FlicRaster *r, void *pixbuf, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies pixels from a rectangle in the raster to a memory buffer.  The memory buffer is organized as two-dimensional array with the same format used by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_put_rectpix()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer to receive the pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_hline(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid horizontal line segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Y coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_vline(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid vertical line segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}X coordinate of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top end of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of segment.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_rect(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a solid color rectangle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color of rectangle.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_rast(FlicRaster *r, Pixel color);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets an entire raster to a solid color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_xor_rect(FlicRaster *r, Pixel color, Coor x, Coor y, Ucoor w, Ucoor h);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exclusive-ORs a rectangle in a raster with a solid color.   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch color}{\cf2\f0\fs24\lang1033{\*\listtag0}Color to XOR rectangle with.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch w}{\cf2\f0\fs24\lang1033{\*\listtag0}Width.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch h}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_mask1blit(UBYTE *mbytes, Coor mbpr, Coor mx, Coor my, FlicRaster *r, Coor rx, Coor ry, Ucoor width, Ucoor height, Pixel oncolor );}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Expands a rectangle from a bitmap in memory to a full-pixel image in the raster.  Zeros in the bitmap are left unchanged in the raster and ones in the bitmap are changed to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0} (ie, a transparent blit).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}mbytes}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to a block of memory arranged as a two-dimensional}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  bitmap.  In the bitmap, bits are packed into bytes with the leftmost bits stored in the uppermost bits of each byte.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mbpr}{\cf2\f0\fs24\lang1033{\*\listtag0}The number of bytes per line within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}my}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the area to expand from within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch r}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster pointer.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ry}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the destination rectangle to expand into within the raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to expand, in pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to expand, in pixels.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Ones in the source bitmap get mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_mask2blit(UBYTE *bitplane, Coor mbpr, Coor mx, Coor my,  FlicRaster *r, Coor rx, Coor ry, coor width, Ucoor height, Pixel oncolor, Pixel offcolor);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Expands a rectangle from a memory bitmap to a raster.  Zeros in the bitmap are mapped to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}offcolor}{\cf2\f0\fs24\lang1033{\*\listtag0} in the raster and ones are mapped to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This function is similar to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_mask1blit()}{\cf2\f0\fs24\lang1033{\*\listtag0}, except that it is an opaque rather than transparent blit. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}mbytes}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to a block of memory arranged as a two-dimensional bitmap.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mbpr}{\cf2\f0\fs24\lang1033{\*\listtag0}The number of bytes per line within the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}my}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the area to expand in the bitmap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch r}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster pointer.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rx}{\cf2\f0\fs24\lang1033{\*\listtag0},}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ry}{\cf2\f0\fs24\lang1033{\*\listtag0}The coordinates of the upper-left corner of the destination rectangle to be expanded in the raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to expand.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to expand.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch oncolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Ones in the source bitmap are mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offcolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Zeros in the source bitmap are mapped to this color in the destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_blitrect(FlicRaster *source, Coor src_x, Coor src_y,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch FlicRaster *dest, Coor dest_x, Coor dest_y, Coor width, Coor height)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies all pixels from one rectangular area to another.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_tblitrect(FlicRaster *s, Coor sx, Coor sy, FlicRaster *d, Coor dx, Coor dy, Coor width, Coor height, Pixel tcolor)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Transparently copies pixels from one rectangular area to another.  Pixels in the source that are the same color as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}tcolor}{\cf2\f0\fs24\lang1033{\*\listtag0} are not copied; the corresponding pixel in the destination raster is unchanged.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge in destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to copy.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch tcolor}{\cf2\f0\fs24\lang1033{\*\listtag0}Transparent color of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_swaprect(FlicRaster *ra, Coor ax, Coor ay, FlicRaster\~*rb, Coor bx, Coor by, Coor width, Coor height)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exchanges all pixels in a pair of rectangular areas.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ax}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ay}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ra}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rb}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination hardware raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch bx}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rb}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch by}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge of rectangle in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}rb}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of rectangle to swap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of rectangle to swap.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_xor_rast(FlicRaster *s, FlicRaster *d);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exclusive-ORs all pixels in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0} against the pixels in raster }{\cf2\f0\fs24\b\lang1033{\*\listtag0}d}{\cf2\f0\fs24\lang1033{\*\listtag0}, putting the result into }{\cf2\f0\fs24\b\lang1033{\*\listtag0}d}{\cf2\f0\fs24\lang1033{\*\listtag0}.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The source and destination may }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} be the same raster.  The two rasters }{\cf2\f0\fs24\i\lang1033{\*\listtag0}must}{\cf2\f0\fs24\lang1033{\*\listtag0} be the same dimensions, but may be of differing types.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch d}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_zoomblit(FlicRaster *source, Coor src_x, Coor src_y, FlicRaster *dest, Coor dest_x, Coor dest_y, Ucoor width, Ucoor height, LONG zoom_x, LONG zoom_y )}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a rectangular area of the source raster to the destination raster, expanding each pixel into a box that is }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0} by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0} in size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values are expressed in destination coordinates.  It is possible that }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0} will not be an exact multiple of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0} and likewise }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} not an integral multiple of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0}.  In this case the expanded pixels on the right and bottom edges are clipped. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be the same raster; the case of overlapping source and dest rectangles is handled properly.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}dest}{\cf2\f0\fs24\lang1033{\*\listtag0} rasters may be different types and sizes of raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}source}{\cf2\f0\fs24\lang1033{\*\listtag0}Source raster.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch src_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Upper edge of source.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest}{\cf2\f0\fs24\lang1033{\*\listtag0}Destination raster.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch dest_y}{\cf2\f0\fs24\lang1033{\*\listtag0}Upper edge of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of destination... }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Width of source is:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}(width+zoom_x-1)/zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Height of source is:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}(width+zoom_y-1)/zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch zoom_x}{\cf2\f0\fs24\lang1033{\*\listtag0}Amount to stretch each pixel in horizonal direction.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch zoom_y}{\cf2\f0\fs24\lang1033{\*\listtag0} Amount to stretch each pixel in vertical direction.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unbrun_rect(FlicRaster *r, void *ucbuf, long pixsize,}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Coor x, Coor y, Ucoor width, Ucoor height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-run-length-compresses from memory onto the raster.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values must always exactly match the width and height of the output raster.  Also, they must be the width and height of the original source data when it was compressed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed image data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a single pixel.  Always 1 in this version of the software.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unss2_rect(FlicRaster *r, void *ucbuf, long pixsize, Coor xstart, Coor ystart, Ucoor width, Ucoor\~height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-delta-compresses from memory onto the raster.  This is the main decompression routine for Animator Pro FLC-format files; all frames (other than the first frame) are compressed in this format, if compressed at all.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}width}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}height}{\cf2\f0\fs24\lang1033{\*\listtag0} values must always exactly match the width and height of the output raster.  Also, they must be the width and height of the original source data when it was compressed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed delta image.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a pixel.  Always 1 for now.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch xstart}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of each line of the decompression destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ystart}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of decompression destination. }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height of destination.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_unlccomp_rect(FlicRaster *r, void *ucbuf, long pixsize, Coor x, Coor y, Ucoor width, Ucoor height);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Un-delta-compresses from memory onto the raster.  This is the main decompression routine for Animator 1.0 FLI-format files; all frames (other than the first frame) are compressed in this format, if compressed at all.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This routine }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} perform width or height clipping.  It will fail if the width and height rules listed above are not followed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed delta image.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch pixsize}{\cf2\f0\fs24\lang1033{\*\listtag0}Size in bytes of a pixel.  Always 1 for now.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch x}{\cf2\f0\fs24\lang1033{\*\listtag0}Left edge of area to decompress into.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch y}{\cf2\f0\fs24\lang1033{\*\listtag0}Top edge.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch width}{\cf2\f0\fs24\lang1033{\*\listtag0}Width of area to decompress into.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch height}{\cf2\f0\fs24\lang1033{\*\listtag0}Height.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_set_colors(FlicRaster *r, long start, long count, void\~*rgb_buf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a portion of the hardware color map to the rgb values contained in cbuf.  This function does nothing if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not }{\cf2\f0\fs24\lang1033{\*\listtag0}update the RAM-based color map attached to the raster; it updates video hardware color registers only.  We recommend that you alter colors by first changing the RAM-based color map, then calling }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_cmap_update()}{\cf2\f0\fs24\lang1033{\*\listtag0} rather that using this function to alter the hardware directly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch start}{\cf2\f0\fs24\lang1033{\*\listtag0}Start index in color map between 0 and 255.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch count}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of colors to set between 0 and 256.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch rgb_buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to rgb data.  For each color to be changed there are 3 bytes - one each for red, green and blue.  The values of these color components range from 0 to 255.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_wait_rast_vsync(FlicRaster *r);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Waits until the monitor is in vertical blank.  This function returns immediately when }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_uncc256(FlicRaster *r, void *ucbuf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Decompresses a delta color map.  This function does nothing if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0} is not a video hardware raster.  This updates the hardware palette registers only, it does not update the RAM-based color map attached to the raster.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed color data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void pj_uncc64(FlicRaster *r, void *ucbuf);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Old-style routine to decompress a delta color map.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Same as ucbuf in uncc256, but the rgb data ranges from 0-63 (like the VGA color palette) rather than 0-256.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}r}{\cf2\f0\fs24\lang1033{\*\listtag0}Raster pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch ucbuf}{\cf2\f0\fs24\lang1033{\*\listtag0}Compressed color data.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch SYSLIB - String, Memory, and Unbuffered I/O Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The SYSLIB.H and SYSLIB.LIB files contain the string, memory, and I/O functions listed below.  When you request the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} host library, these functions will be available.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Standard functions supported by AA_SYSLIB:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Please refer to your compiler's runtime library documentation for details on these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}free      malloc    memcmp    memcpy}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     memset    strcmp    strcpy    strlen}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     zalloc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}zalloc()}{\cf2\f0\fs24\lang1033{\*\listtag0} function is identical to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}malloc()}{\cf2\f0\fs24\lang1033{\*\listtag0} except that it initializes the memory block to zeroes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Additional functions:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} supports the following additional functions, not found in standard C runtime libraries.  These functions provide unbuffered I/O similar (but }{\cf2\f0\fs24\i\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} identical) to the functions found in a standard runtime library.  To use these functions, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include}{\cf2\f0\fs24\lang1033{\*\listtag0} the JFILE.H header file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Jfile pj_open(char *filename, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Opens a file for unbuffered reading and/or writing.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file to open.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}File access mode, one of:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 0}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DWRITEONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADWRITE}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:File handle or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Jfile pj_create(char *filename, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Creates a new file for unbuffered reading/writing.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Currently, in spite of the mode parameter, the file is always readable and writable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file to create.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}File access mode, one of:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 0}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DWRITEONLY}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2}{\cf2\f0\fs24\lang1033{\*\listtag0}  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DREADWRITE}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:File handle or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_close(Jfile fhandle)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Closes a file opened via }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}Handle of file to close.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0}, or an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_read(Jfile fhandle, void *buf, long size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reads data from file into a memory buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer; destination of read.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of bytes to read.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Number of bytes actually read.  If zero, you are at end of file.  If less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_write(Jfile fhandle, void *buf, long size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes data from a memory buffer into a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch buf}{\cf2\f0\fs24\lang1033{\*\listtag0}Memory buffer; source of write.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch size}{\cf2\f0\fs24\lang1033{\*\listtag0}Number of bytes to write.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Number of bytes actually written.  If less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_seek(Jfile fhandle, long offset, int mode)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Seek to an arbitrary location in a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0}New file position.  Exact meaning depends on }{\cf2\f0\fs24\b\lang1033{\*\listtag0}mode}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch mode}{\cf2\f0\fs24\lang1033{\*\listtag0}Can be one of three values:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}0}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_START}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is relative to the start of the file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\b\lang1033{\*\listtag0}1}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_REL}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is amount to move from current file position.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}2}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}DSEEK_END}{\cf2\f0\fs24\lang1033{\*\listtag0})}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch offset}{\cf2\f0\fs24\lang1033{\*\listtag0} is relative to the end of the file.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:New file position relative to the start of the file.  Negative }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value if an error occurs.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch long pj_tell(Jfile fhandle)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns current file position relative to the start of file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fhandle}{\cf2\f0\fs24\lang1033{\*\listtag0}File handle returned from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_open()}{\cf2\f0\fs24\lang1033{\*\listtag0} or }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pj_create()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Current file position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_delete(char *filename)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Deletes a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of file.  May include device and directory information.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if file was deleted, otherwise an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} that describes the problem.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_rename(char *oldname, char *newname)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Renames a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}oldname}{\cf2\f0\fs24\lang1033{\*\listtag0}Current file name.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch newname}{\cf2\f0\fs24\lang1033{\*\listtag0}New file name.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if file was renamed, otherwise an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} that describes the problem.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean pj_exists(char *filename)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Determines whether a file exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}filename}{\cf2\f0\fs24\lang1033{\*\listtag0}Name of the file to check for.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}TRUE}{\cf2\f0\fs24\lang1033{\*\listtag0} if file exists, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}FALSE}{\cf2\f0\fs24\lang1033{\*\listtag0} if it does not exist.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_ioerr(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the last unbuffered file I/O operation.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch After an unbuffered I/O function has returned a generic error status (e.g., a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer), this function will return an Animator }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value that describes the problem in detail.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:(none)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the last I/O function worked, otherwise an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_load_path(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the name of the path the REX module was loaded from.  Returned string will be in the format:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    }{\cf2\f0\fs24\i\lang1033{\*\listtag0}device:\\path\\etc\\yourname.typ}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:(none)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:A pointer to the path.  This points into the host data space, do not modify the string in-place!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_path_name(char *path)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns a pointer to last name in a path (i.e., a pointer to the filename on the end of a full path-with-filename string).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}path}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to pathname.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Pointer to the last name in the path string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pj_get_path_suffix(char *path)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns pointer to the '.' in the last name in a path, or to the terminating '\\0' if the last name does not have a suffix.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}path}{\cf2\f0\fs24\lang1033{\*\listtag0}Pointer to pathname.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Pointer to the suffix of the last name (the '.'), or pointer to '\\0'.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch STDIOLIB - Standard C Stream I/O Functions}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The STDIO.H and STDIOLIB.LIB files contain the standard stream I/O functions listed below.  When you request the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AA_STDIOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} host library, these functions will be available.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Standard Stream I/O functions supported by AA_STDIOLIB:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Please refer to your compiler's runtime library documentation for details on these functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     }{\cf2\f0\fs24\b\lang1033{\*\listtag0}clearerr  fclose    feof      ferror    fflush}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     fgetc     fgets     fopen     fprintf   fputc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     fputs     fread     fseek     ftell     fwrite}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch     printf    rewind    sprintf   ungetc}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs28\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Additional functions:}{\cf2\f0\fs28\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_STDIOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0} supports the following additional function, not found in standard C runtime libraries.}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode pj_errno_errcode(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the last stream I/O function. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch After a stream I/O function has returned a generic error status (e.g., a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}NULL}{\cf2\f0\fs24\lang1033{\*\listtag0} pointer), this function will return an Animator }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value that describes the problem in detail.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Input:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:}{\cf2\f0\fs24\b\lang1033{\*\listtag0}Success}{\cf2\f0\fs24\lang1033{\*\listtag0} if the last I/O function worked, otherwise an appropriate }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Errcode}{\cf2\f0\fs24\lang1033{\*\listtag0} value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}}