{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq2\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq2\fttruetype Arial;}
{\f2\fnil\fcharset0\fprq2\fttruetype Dingbats;}
{\f3\fnil\fcharset0\fprq2\fttruetype Symbol;}
{\f4\fnil\fcharset0\fprq2\fttruetype Courier New;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red0\green0\blue0;}
{\stylesheet
{\s1\fi-431\li720\sbasedon28\snext28Contents 1;}
{\s2\fi-431\li1440\sbasedon28\snext28Contents 2;}
{\s3\fi-431\li2160\sbasedon28\snext28Contents 3;}
{\s8\fi-431\li720\sbasedon28Lower Roman List;}
{\s5\tx431\sbasedon24\snext28Numbered Heading 1;}
{\s6\tx431\sbasedon25\snext28Numbered Heading 2;}
{\s7\fi-431\li720Square List;}
{\*\cs11\sbasedon28Endnote Text;}
{\s4\fi-431\li2880\sbasedon28\snext28Contents 4;}
{\s9\fi-431\li720Diamond List;}
{\s10\fi-431\li720Numbered List;}
{\*\cs12\fs20\superEndnote Reference;}
{\s13\fi-431\li720Triangle List;}
{\s14\tx431\sbasedon26\snext28Numbered Heading 3;}
{\s15\fi-431\li720Dashed List;}
{\s16\fi-431\li720\sbasedon10Upper Roman List;}
{\s17\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 4;}
{\s18\fi-431\li720Heart List;}
{\s34\fi-431\li720Box List;}
{\s20\fi-431\li720\sbasedon10Upper Case List;}
{\s21\fi-431\li720Bullet List;}
{\s22\fi-431\li720Hand List;}
{\*\cs23\fs20\sbasedon28Footnote Text;}
{\s24\sb440\sa60\f1\fs34\b\sbasedon28\snext28Heading 1;}
{\s25\sb440\sa60\f1\fs28\b\sbasedon28\snext28Heading 2;}
{\s19\qc\sb240\sa120\f1\fs32\b\sbasedon28\snext28Contents Header;}
{\s27\fi-431\li720Tick List;}
{\s26\sb440\sa60\f1\fs24\b\sbasedon28\snext28Heading 3;}
{\s29\fi-431\li720\sbasedon10Lower Case List;}
{\s30\li1440\ri1440\sa120\sbasedon28Block Text;}
{\s36\f4\sbasedon28Plain Text;}
{\s32\tx1584\sbasedon5\snext28Section Heading;}
{\s33\fi-431\li720Implies List;}
{\s28\f0\fs24\lang1033Normal;}
{\s35\fi-431\li720Star List;}
{\*\cs31\fs20\superFootnote Reference;}
{\s37\tx1584\sbasedon5\snext28Chapter Heading;}}
\kerning0\cf0\ftnbj\fet2\ftnstart1\ftnnar\aftnnar\ftnstart1\aftnstart1\aenddoc\revprop3{\info\uc1}\deftab720\viewkind1\paperw11905\paperh16837\margl1440\margr1440\widowctrl
\sectd\sbknone\colsx360\headery0\footery0\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco Programming Language}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Overview and Library Reference Documentation}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Document Version: February 25, 1991}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Confidential to Autodesk, Inc. from Dancing Flame}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Table of Contents}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 1: Introduction to Poco  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. What is Poco?  1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 2: Running Poco  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. Editing the Resource file  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. The Poco Drop-down Menu  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Starting a Poco Program  2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. The Poco Programming Menu  3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Edit  3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Run  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Load  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Save or Save NAME.POC  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Save As...  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch New  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Exit  4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 3: The Poco Programming Language  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. A Note to Non-Programmers  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Differences Between Poco and C  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Things in ANSI C but }{\cf2\f0\fs24\b\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} supported in Poco  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Other Limitations  5}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Extra Features  6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Variables and Variable Types  6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. Poco pragma statements  7}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Pre-defined macros, special values, and builtin prototypes  8}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Notes for advanced programmers  9}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 4: The Poco Builtin Function Libraries 11}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. User Interface Library 12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Graphics Library 26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Text Library 33}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. Graphics Modes Library 36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Turtle Graphics Library 43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Time-Oriented Function Library 46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 7. Cel Library 56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 8. Swap Screen Library 60}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 9. Optics Library 61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 10. Screen Library 65}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 11. Misc. Functions Library 71}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 12. Autodesk Animator File Library 75}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 13. (C Standard) File Library 80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 14. (C Standard) String Library 84}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 15. (C Standard) Memory Manager Library 87}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 16. (C Standard) Math Library 89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 17. DOS Library 93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 18. Global Variable Library 97}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix A: Poco Error Codes and Messages101}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. General Error Messages101}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. System errors101}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Rex Errors101}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. I/O and file errors102}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Video driver subsystem errors103}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Poco subsystem errors103}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix B: Poco Header Files105}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. OPTICS.H105}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. CTYPE.H106}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. LIMITS.H108}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. STDDEF.H109}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix C: Adding new library functions to Poco110}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. Overview110}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Setting up the POE interfaces110}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Skeleton POE module114}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. System Integrity and Handling Poco Protected Pointers 114}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. POE functions that accept variable argument lists 116}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Special functions available to POE modules 117}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 7. Using the Poco Built in Library Functions 121}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 8. Notes on the runtime environment122}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Index124}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note to Autodesk technical publications dept:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This document is complete except for a few questions (marked ???) concerning how the final version of PJ will be shipped (filename for executable, accompanying sample Poco programs, etc.).  Appendix C, Using your own C functions in Poco, is not written because this feature is not fully implemented yet.  I have used the term Animator (and, occasionally, Autodesk Animator) consistently throughout the document, so a last-minute replacement of the program name should be easy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The index serves also as quick-reference to function call syntax, with each function listed in full.  A few of the functions -- Blit(), IconBlit(), KeyBlit() and Qfile() -- exceeded Word Perfect's index entry length, so I have manually edited the index so they fit.  These changes will have to be made whenever the index is regenerated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This document was written in Word Perfect version 5.0.  Formatting codes used were: Bold, Underline, Subscript and Superscript.  There is one footnote.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -- Heidi Brumbaugh}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch December 18, 1990}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Update: Appendix C has been written by Ian Lepore and copyedited by myself.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -- HB, April 16, 1991}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Update:  Some new builtin library functions were added.  Minor doc errors corrected.  The list of error code values in Appendix\~A now includes only the errors visible to poco/poe modules in the resource\\errcodes.h and rexlib\\inc\\errcodes.h files.  IE, errors internal to PJ (softmenu errors, etc) are no longer listed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -- Ian, 4/29/91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Update: More new builtin functions documented:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     SwapTrade()         Like menu Swap/Trade}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     CelClip()           Like menu Cel/Clip}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     Qscroll()           Works like the driver menu scroller.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GetPhysicalSize()   Gets size of screen (as opposed to pencel    window)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     LoadScreenPic()     These are just like Load/SavePic()}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     SaveScreenPic()     except they take a screen handle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GetScreenColorMap() These get or set all 256 colors in the}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     SetScreenColorMap() cmap of any arbitrary screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarGet()      Get value from a global var string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarSet()      Set/change value in a global var string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarDelete()   Delete a global var.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarFlush()    Force immediate flush of changed vars to    disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarFirst()    Get first var in list (like DOS    fsfirst()).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     GlobalVarNext()     Get next var in list (like DOS fsnext()).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -- Ian  06/04/91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Update: Still more new functions:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    PocoChainTo()        Set program to run after current.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    OverAll()            Like OverTime, but no user interaction.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    OverSegment()        Like OverAll, but does segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetTimeSelect()  Multiframe button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetFSA()         To Frame/Segment/All button mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetSegStart()    Starting frame in segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetSegEnd()      Ending frame in segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetStill()       Still button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetInSlow()      In Slow button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetOutSlow()     Out Slow button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetPingPong()    Ping Pong button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetReverse()     Reverse button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Set/GetComplete()    Complete button/mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 1: Introduction to Poco}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. What is Poco?}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco is a subset of the C programming language.  It features special graphics commands that can perform most of the functions of the Autodesk Animator.  For example, Poco can draw, set ink types, specify optics effects and control animation time.  Poco also has some features that the Animator does not, such as a turtle graphics command subset and a library for manipulating multiple screens which aren't visible to the user.  Poco is built into the Autodesk Animator and is available from the Poco drop-down menu on the menu bar.  You can use Poco to:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Automate repetitive animation tasks.  In this sense, Poco is a kind of super-macro system.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Expand Animator's functions. You can use Poco to increase the power of Autodesk Animator by writing your own functions and including them as menu options under the Poco drop-down menu.  Additionally, you can write your own C routines and call them  from Poco, making the power of the language virtually unlimited.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Create interactive demos.  Poco can pause, query the user with Animator-style alert boxes and menus, make choices depending on the answer and load, play or manipulate existing Animator files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note: This document assumes you are familiar with the operation of Autodesk Animator.  For more detailed information on Poco library calls which duplicate Animator operations, see the corresponding sections in the Animator reference manual.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 2: Running Poco}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. Editing the Resource file}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In the current release of Autodesk Animator, Poco is available only to developers.  As a result, the Program option under the Poco menu does not appear on the Animator menu bar without special modifications to the Animator resource file.  To make these modifications, load the file AA.MU from the Animator \\RESOURCE\\ directory into any text editor.  Search for the line:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch //"Program",701}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To activate this menu option, remove the leading slashes (//).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. The Poco Drop-down Menu}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Under the Poco menu, you can either Program or Use a Poco file.  Click on Program to edit a Poco program.  To run a program once, click on Use, then select the program name.  This option will }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} affect the contents of the Poco editor program buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Once you have written a Poco program, you may decide you want that program to be a permanent part of your Animator environment.  You can do this simply by moving the program to the Animator \\RESOURCE\\ directory.  The filename of any Poco program in that directory will automatically appear under the Use option in the Poco drop-down menu.  Click on a program's name to run it; this will not affect the contents of the Poco editor program buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Autodesk ships several Poco programs with Animator.  These programs are Poco or Animator utilities or demos which will give you an idea of the ways you can use Poco to customize Autodesk Animator.  In addition, examining the code to these programs will give you several examples of Poco programming.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ???Jim/Bob B.:  What sample programs will be shipped with PJ so I can include them here???}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Starting a Poco Program from the Command Line}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch You can start a Poco program at the time you run Animator by entering the program name when you call Animator from the DOS command line, for example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA MYPROG.POC}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a Poco program run in this way ends without error, control is turned over to the menu handler in Animator; the user can then begin to interact with Animator as usual.  If the Poco program exits with an error status, the error is reported and Animator is terminated.  When the desired effect is to start Animator, run a Poco program, then exit back to DOS without user interaction, the Poco program should exit with a status of Err_early_exit.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Running a Poco program by naming it on the Animator command line is also useful for debugging the program during development.  When an error occurs in a Poco program run from the command line, additional error and debugging information is usually provided.  This includes a function call stack traceback for errors which are detected at runtime.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. The Poco Programming Menu}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco's Programming menu options are:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Edit}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Edit option calls up the Poco programming text editor to edit the file currently in memory.  The editor operates in the current Animator graphics screen resolution.  The following editing keystrokes are available within the editor:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Left arrow:moves the cursor to the left one character.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Right arrow:moves the cursor to the right one character.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Up arrow:moves the cursor up one line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Down arrow:moves the cursor down one line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Insert:toggles between insert and overstrike mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Delete: deletes the key the cursor is on.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Backspace: deletes the character to the left of the cursor.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Shift-Delete:deletes the line the cursor is on.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Page Up:moves the cursor up a screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Page Down:moves the cursor down a screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Home:moves the cursor to the beginning of the line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch End:moves the cursor to the end of the line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Esc: exits the editor.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Right Click:   exits the editor.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco text editor is designed primarily for writing small programs or debugging larger ones.  Poco files are standard}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  ASCII format so you can use your favorite text editor for larger projects.  Note that exiting the editor }{\cf2\f0\fs24\i\lang1033{\*\listtag0}does not}{\cf2\f0\fs24\lang1033{\*\listtag0} automatically save any changes made to the Poco program; the Save option must be explicitly selected to save the changes.  Animator will not prompt that unsaved changes exist when exiting back to DOS.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Run}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Tries to run the current Poco file in memory.  If there's no file in memory, Poco will give you a runtime error.  If Poco finds an error, it will display the error message, return to the text editor, and place the cursor on the approximate line and character causing the error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Load}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Loads a Poco program from disk to become the current Poco program in memory.  This will replace any existing in-memory Poco program.  Poco expects the file extender to be POC.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Save or Save NAME.POC}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Saves the current text buffer into the ASCII file NAME.POC on disk.  NAME.POC is the name of the file you loaded, or the last name of the file you saved using Save As.  Poco does }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} ask you to confirm overwriting a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Save As...}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Displays a file selector box, prompts you for a filename with the default extender POC and saves the current text buffer into the file you specified.  Poco saves the file in ASCII format.  If the file already exists, Poco will ask you to confirm overwriting the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch New}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Releases the current Poco file from memory so that the editor will be empty the next time you select Edit.  The program will be lost if it is not saved to disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Exit}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Returns to Animator's main menu.  The current Poco file remains in memory.  This file will remain in memory }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}even if}{\cf2\f0\fs24\lang1033{\*\listtag0} you select Reset under the Flic menu, and even if you run other poco programs via the Use option.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 3: The Poco Programming Language}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. A Note to Non-Programmers}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco is a subset of the C programming language, with special builtin libraries which perform Autodesk Animator functions.  The purpose of this chapter is to describe the differences between Poco and C.  This document assumes the programmer is already familiar with the C programming language.  If you are not a programmer, or if your background is in another programming language, we recommend you purchase a C source book such as }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}The C Programming Language}{\cf2\f0\fs24\lang1033{\*\listtag0} by Brian Kernighan and Dennis Ritchie to supplement this document.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Differences Between Poco and C}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco's command syntax is generally the same as the C programming language, but there are some minor variations.  Most of the features of ANSI C are fully implemented, except where such features don't make sense in the Animator environment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Things in ANSI C but }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}not}{\cf2\f0\fs24\ul\lang1033{\*\listtag0} supported in Poco:}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--  }{\cf2\f0\fs24\i\lang1033{\*\listtag0}Structure-by-value}{\cf2\f0\fs24\lang1033{\*\listtag0} operations, including:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   - Structure assignments.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   - Structure function parameters or return values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o-- The ternary operator:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   expression ? expression : expression;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Unsigned data types.  (The }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}unsigned}{\cf2\f0\fs24\lang1033{\*\listtag0} keyword is accepted, but it is ignored.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Recursive macro definitions.  The sequence:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define A B}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define B A}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch will produce an error message if either A or B is referred to in the source code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Code labels do not have their own name space.  Poco will report an error if a variable and a label have the same name.  Structures, unions, and enums do have their own name space; tags for these datatypes can be the same as a variable or label name.  Elements within a given structure or union also exist in their own name space, per ANSI.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Other Limitations:}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Declaration keywords }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}const}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}volatile}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}auto}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}register}{\cf2\f0\fs24\lang1033{\*\listtag0} are accepted, but are ignored internally.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o-- There is no distinction between }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}float}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}double}{\cf2\f0\fs24\lang1033{\*\listtag0} data types; both use 64-bit values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Type casting between pointer and integer types is not allowed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o-- No further cases are allowed in a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}switch}{\cf2\f0\fs24\lang1033{\*\listtag0} statement after }{\cf2\f0\fs24\b\lang1033{\*\listtag0}default}{\cf2\f0\fs24\lang1033{\*\listtag0}. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Boolean expressions are always evaluated fully in Poco, while they are short-cut evaluated in C.  Therefore while this statement might work in C, it could cause a run-time error in Poco:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if ( pt != NULL && *pt == 1)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch do_something...}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o-- Functions must use Ansi C/C++ parameter declarations.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch dot(int x, int y)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rather than}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch dot(x,y)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int x,y;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Extra Features:}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--A double slash }{\cf2\f0\fs24\b\lang1033{\*\listtag0}//}{\cf2\f0\fs24\lang1033{\*\listtag0} comments out the rest of the line (like in C++).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Variables not explicitly initialized in the source code start out initialized to zero (NULL for pointers).  This includes stack-allocated local variables.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  o--NULL pointer references are trapped.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch o--Out of bounds array indexes and pointer references are trapped.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  o--You can declare a variable anywhere, not just at the start of a block (like in C++).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Variables and Variable Types}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco has most of the data types found in ANSI standard C. Variables can be global, local, or static; pointers are allowed (and sometimes required).  Data may be contained in arrays, the size of which are limited only by the computer's memory. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char8-bit integer, usually the ASCII value of a character.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch short16-bit integer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int32-bit integer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch long32-bit integer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch float64-bit floating point number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double64-bit floating point number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch voidno value.  Void * is a 'generic' pointer.  Other pointers may be converted to and from void * without explicit type casting. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILEThis is only allowed as a FILE *.  File handle for fread() fwrite() family of functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen  Only allowed as Screen *.  Screen handle for graphics functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCodeA negative integer Animator error code.  See Appendix A for a list of Animator error codes and messages.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco also supports }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}struct}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}union}{\cf2\f0\fs24\lang1033{\*\listtag0}, and }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}enum}{\cf2\f0\fs24\lang1033{\*\listtag0} types per the ANSI standard.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. Poco pragma statements}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco supports several compile-time or run-time options which can be set using the #pragma preprocessor statement.  These statements can be used to override Poco's defaults within any given Poco program.  The keywords in the #pragma statements are case-sensitive; all keywords must be coded in lowercase.  The following pragma statements are currently supported:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco library "}{\cf2\f0\fs24\i\ul\lang1033{\*\listtag0}libname.poe}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}" "optional lib name"}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}POE}{\cf2\f0\fs24\lang1033{\*\listtag0} module contains an extension to the Poco builtin libraries.  When this pragma appears in a Poco program, it makes the named library of functions available to the program as if it were part of Poco's builtin Animator functions library.  Any number of library pragma statements may appear within a single Poco program.  It is recommended that such statements be placed near the beginning of the program.  (It is mandatory they appear before any reference to a function in the library.)  If the (optional) library name parameter is specified following the library filename, the specified string will compared (case insensitive) to the library name string coded in the POE module.  If they do not match exactly (other than case), an error message will be issued and the compile is terminated.  This feature can be useful for ensuring that a specific version of a POE library is used.  If the library cannot be loaded successfully during the compile process, an error message will be issued.  More information on POE modules can be found in Appendix C.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco macrosub}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco nomacrosub}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These statements enable or disable Poco's macro substitution during the compilation phase.  This is provided primarily for performance:  a large Poco program which does not contain any macros will compile much faster when }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}nomacrosub}{\cf2\f0\fs24\lang1033{\*\listtag0} is in effect.  Note that turning off macro substitution does }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} effect conditional compilation (#if) or handling of any other preprocessor statements, it only disables expansion of macros within the C source code.  The substitution status can be toggled on and off multiple times within a source code file.  If the status is changed in a file that is}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  #include'd into another file, the changed status is effect only within the included file; it reverts to its former state when compilation resumes within the parent file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco stacksize }{\cf2\f0\fs24\i\ul\lang1033{\*\listtag0}nn}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This statement sets the Poco runtime stack size to }{\cf2\f0\fs24\i\lang1033{\*\listtag0}nn}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}KBytes}{\cf2\f0\fs24\lang1033{\*\listtag0}.  (The letter 'k' can be coded on the end of the number as a reminder of this fact.)  The stacksize must be between 6k and 64k inclusive.  The default stacksize is 10k.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Pre-defined macros, special values, and builtin prototypes}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch For convenience, several things which are traditionally stored in header files in a standard C development environment are built into the Poco compiler.  This eliminates the need to include a lot of obscure header files or to code common data type definitions in each Poco program.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch All builtin Animator library functions described in this document have a builtin function prototype.  This eliminates the need for header files containing prototypes for the 250+ functions contained in the builtin libraries.  In addition to the builtin prototypes, the following builtin macros are provided:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch NULL}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This is a protected keyword, because of the special treatment of the bounds-checked pointers employed by Poco.  It is not possible to code #undef or #define statements to change the value of NULL, since it must have a special value internally.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch FALSE}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These macros are pre-defined as 1 and 0, respectively.  If, for some reason, it is necessary to assign other values to these macros within a Poco program, they may be undefined and/or redefined using #undef followed by #define.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch PATH_SIZE}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro evaluates to the number of characters required to hold a complete DOS device, path, and file name string.  Several Poco builtin library functions require a string buffer large enough to hold a complete pathname.  Using this macro to allocate the character array will ensure the buffer is always large enough, preventing run-time errors.  This}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  macro may be redefined, but doing so may lead to runtime errors.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Array_els(array)}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro will evaluate to the number of elements allocated in a declared array.  It may be undefined and/or redefined.  Many Poco builtin library functions require an array of string pointers and a count of pointers in the array. This macro provides a convenient way of coding the count:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *ptrs[] = \{"Option a", "Option b", "Cancel"\};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch selection = Qchoice(&ptrs, Array_els(ptrs), "Option?");}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The macro is defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define Array_els(a) ( sizeof((a))/sizeof((a)[0]) )}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __POCO__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro evaluates to the Poco version number.  It will be the same value as that returned by the PocoVersion() builtin library function.  This macro may not be undefined or redefined.  Each time the Poco compiler is modified, this number is incremented by one; this will allow future enhancements to Poco to be detected at compile time. For example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #if __POCO__ > 167}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   /* code that uses some new feature */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   /* not in the original version. */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #else}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   #error This program requires Poco version 168 }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __FILE__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __LINE__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __DATE__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __TIME__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch These macros are supported per ANSI C.  They may not be undefined or redefined.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch __STDC__}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro is }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}not defined}{\cf2\f0\fs24\lang1033{\*\listtag0} by Poco.  Since Poco is not 100% ANSI compliant, it would be improper (per the ANSI standard) to define this macro.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Notes for advanced programmers}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco language is implemented as a combined compiler and virtual machine.  While it gives the appearance of behaving as an interpreter, it is not a true interpreter in the same sense as a}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  language such as Rexx, in which the source code can modify itself, and so on.  When the Program/Run or Use menu options are selected, the Poco program's source code is loaded and compiled into an intermediate code which is the virtual machine's native language.  The code is compiled in a single pass internally.  If the compilation completes successfully, the virtual machine is started, and it executes the intermediate code, calling library functions as needed.  The virtual machine is a stack-based pseudo-processor implemented in software.  There is no way to save the intermediate code generated by the compilation; a Poco program will be recompiled each time it is run.  When this is a problem, the option of using a precompiled C-language POE module is available (see Appendix C for details).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Every effort has been made to ensure that an erroneous Poco program cannot crash Animator.  The primary method used to prevent Poco crashes is the special handling of pointers.  In a Poco program, declaring and using pointers is done the same as in C.  The actual pointer data, however, is managed internally as a 12-byte value which contains the pointer itself, and the upper and lower bounds of the memory area it points to.  This allows the virtual machine and the library functions to detect an attempt to dereference a NULL pointer, or a 'wild' pointer that points to something other that what it should.  When these situations are detected, an error is reported and the Poco program is terminated without affecting the rest of Animator.  For the most part, this is all handled transparently.  It is, however, the reason for the constraint against recasting between pointer and numeric datatypes.  Also, with injudicious recasting between different pointer types, it might be possible to crash Animator.  The flexibility of pointer recasting has been provided in Poco; this is your admonition to use it very carefully.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch All ANSI preprocessor commands are available in Poco, including }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}#if\~defined\~NAME}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}#if\~defined(NAME)}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}#elif}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}#error}{\cf2\f0\fs24\lang1033{\*\listtag0}.  (The }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}#line}{\cf2\f0\fs24\lang1033{\*\listtag0} directive is allowed, but ignored, since it has no meaning in the Animator context.)  When #error is encountered during compilation, the user is told "fatal error forced by #error directive".  When the Poco program has been run from the Animator command line, the complete #error line is displayed, so it can be useful to include text on the line after the #error statement to assist in determining why the error was forced.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Performance notes... Library functions execute hundreds of times faster than Poco code;  use library functions as much as possible.  Walking through an array using a pointer is faster than using an index, to a much greater degree even than in standard C code.  Lots of small functions will take longer to compile than several large ones, but there is little difference in execution speed, except for the overhead of stacking parms. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  If the Poco source code is heavily commented, using the line-comment marker (//) is much faster than paired delimiters (/**/).  Floating point operations are fairly efficient in Poco; a math coprocessor will be used, if present on the machine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Chapter 4: The Poco Builtin Function Libraries}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco builtin libraries provide access to most of the Animator features available interactively through the Animator menus and dialogs.  Access is also provided to some functions not directly available to the interactive user, such as off-screen graphics operations.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The builtin libraries automatically track resources acquired by a Poco program as it's running (eg, open files, allocated memory, etc). It is expected that the Poco program will release these resources before exiting.  If the program does not release all resources, a library cleanup routine will do so immediately after the program exits; this cannot be prevented or overridden.  This is not documented to encourage poor programming practices.  Rather, it should be noted that it is not possible for a Poco program to allocate a resource (such as a screen) with the expectation of passing that resource to another Poco program that is run later.  This type of interaction between a related set of Poco programs would have to be managed via standard file I/O, or a set of custom POE routines.  The exception to this deletion of resources is string storage facility provided by the Global Variables builtin library.  However, it would hardly be efficient to translate an entire screen into a character string for storage!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Most builtin library functions contain data integrity checks to detect the use of NULL pointers, 'wild' pointers, and parameter values that are out of range (such as an attempt to add -1 frames to the current flic).  When a builtin library function detects a parameter that would cause Animator to crash or behave irrationally, the Poco program will be terminated, and an error message is displayed.  In other situations, an error may be detected that is not so serious that it would crash Animator.  An example of this might be an attempt to open a non-existent file.  In these cases, the error status is returned to the Poco program to be handled therein.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch One type of parameter checking done by library routines merits special attention: the checking of printf() parameters.  The printf() function, and a family of similar functions, require a format string and a variable number of arguments containing the data to be formatted.  The code in Animator's builtin libraries contains special checks for these functions, which ensures that}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  the number and datatypes of the arguments are consistent with the data in the format template specified.  For example, an attempt to execute a statement such as }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}printf("%f", "A string");}{\cf2\f0\fs24\lang1033{\*\listtag0} will generate an error, because the format specified a floating point number, and a string pointer was provided as an argument.  It should be noted that the checking for a string format (%s) is the least stringent.  It is sometimes possible to specify a string format, then provide a numeric value that ostensibly appears to be a valid pointer to the checking routines.  Please use caution when coding string formats, to prevent inadvertently crashing Animator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. User Interface Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The User Interface library contains functions which communicate with the user, and functions which control the Poco runtime environment (ie, abort handling options).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void printf(char *format, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Prints a line at the top of the screen with a reverse video background.  The line must be 80 characters or less, after formatting.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *formatThe string to print, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to substitute into the format string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void unprintf();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Removes the line on top of the screen caused by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Qerror(ErrCode err, char *format, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li2577\ri-417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an error number, the Animator error message associated with the number, and an additional message.}
\sect\sectd\sbknone\colsx360\headery0\footery0\marglsxn4017\margrsxn1022\pgncont\ltrsect
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:ErrCode errThe error code to print.  (An error code is returned by some Poco functions.  See Appendix A for a list of codes and their meanings.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *formatThe additional message to print, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to print in the format string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Qtext(char *format, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays a text box with a [Continue] button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *formatThe string to print, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to print in the format string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int Qchoice(char **buttons, int bcount, char *header, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays a selection box with buttons you specify.  A maximum of five buttons is allowed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char **buttonsA string array containing the buttons to use.  As an example, to define 3 buttons, use:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *buttons[] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch "Yes",}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch "No",}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch "Maybe",}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int bcountThe number of buttons in the array.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *headerThe prompt to print in the selection box, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to print in the header string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of the button the user selected -- from 1 to bcount.  Subtract 1 for the array index. A value less than 1 indicates the user 'canceled' by clicking the right button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean Qstring(char *string, int size, char *header);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Asks the user for a string and puts it in a variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *stringThe variable that will contain user's string when the function returns.  For example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char name[20];}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe size of the buffer space in the string.  For example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sizeof(name)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *headerThe prompt for the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the string was returned, False if the user canceled.  If the user enters a string then cancels, the string buffer }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}is}{\cf2\f0\fs24\lang1033{\*\listtag0} modified.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int Qmenu(char **choices, int ccount, char *header);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an Animator-style numbered pop-up menu.  The user can click on the menu items or type a number to select a menu item.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char **choicesThe array containing the menu items.   See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Qchoice()}{\cf2\f0\fs24\lang1033{\*\listtag0} for an example of the format.  There can be a maximum of ten items.  The last item should always be "End", "Exit", "Cancel", etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int ccountThe number of choices in the menu. (The number of elements in the array.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *headerThe text that appears in the menu header.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int [0-9]Returns the number of the menu item that the user selected.  The first array element is 1; the last array element is always 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean Qquestion(char *question, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Asks the user a yes/no question by displaying a text box with [Yes] [No] buttons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *questionThe question to ask, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to print in the question string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user clicked on Yes, False if the user clicked on No.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean Qnumber(int *num, int min, int max, char *header);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an Animator-style, numeric slider bar and prompts the user to select an integer.  The values for }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} define the range of the slider. The user can, however, enter a number outside this range by typing in the number.  The range of numbers allowed is -32768\~<\~number\~<\~32767; the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} value must be less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *numOn entry to the library function, this value sets the initial position of the slider.  At the end of the function call, this value will contain the number the user selected.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int minThe lowest number selectable by the slider.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int maxThe highest number selectable by the slider.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *headerThe message prompt for the user.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if a number was returned, False if the user canceled out of the slider.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean Qlist(char\~*chstr, int\~*choice, char\~**items, int\~n, int\~*pos, char\~*text);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an unlimited list of items.   The user can make a selection, using a scroll bar to move through the list.  The user can also type in a value that doesn't appear on the list.  The size}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  of the user's type-in value is automatically limited to the length of the longest item in the pre-existing list.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *chstrAt the end of the function call, this string buffer will contain the text of the selected item, or the text typed in by the user.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *choiceAt the end of the function call, this value will contain the number of the item the user selected, from 0 to n-1.  A return value of -1 indicates that a choice was made via type-in, and the value typed in did not match any item in the pre-existing list.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char **itemsThe array containing the items to choose from.  See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Qchoice() }{\cf2\f0\fs24\lang1033{\*\listtag0}for an example of the format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int nThe number of elements in the list (the array).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *posThe position of the slider in the dialog box.  0 is the topmost position; 1 is added to this number for each position down (i.e., for each time the user clicks the down arrow on the slider).  This value is passed as well as returned so the slider can stay in the same position between calls.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *textThe text prompt for the menu list.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user selected an item, False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int Qscroll(int\~*choice, char\~**items, int\~n, int\~*pos, char\~*buttons, char\~*text);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an unlimited list of items.   The user can make a selection, using a scroll bar to move through the list.  This function displays a dialog box similar to that used by Animator's device and picture driver selection dialogs.Unlike the Qlist() function, this scroll dialog box does NOT have a type-in field, the user must select a pre-existing item or CANCEL.  The width of the scroll area holding the strings is fixed in this function.  The actual width will depend on the system font in use, but should be in the vicinity}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  of 45-60 characters.  Strings too wide to fit in the scroll area will be (visually) truncated.   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *choiceAt the end of the function call, this value will contain the number of the item the user selected, from 0 to n-1.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char **itemsThe array containing the items to choose from.  See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Qchoice() }{\cf2\f0\fs24\lang1033{\*\listtag0}for an example of the format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int nThe number of elements in the list (the array).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *posThe position of the slider in the dialog box.  0 is the topmost position; 1 is added to this number for each position down (i.e., for each time the user clicks the down arrow on the slider).  This value is passed as well as returned so the slider can stay in the same position between calls.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *buttonsAn array containing pointers to three strings, which will be used as the texts for the three exit buttons in the dialog.  If a NULL pointer is passed for this parm, the default button texts ('Okay', 'Info', 'Cancel') will be used.  The string pointers in the array are specified in the same sequence as the buttons appear, left to right.  The leftmost (first) string is the 'Okay' or 'Select' button; a double-click on a list item is equivalent to this button.  The rightmost (last) button is the 'Cancel' or 'Quit' button.  A right-click outside the dialog box is equivalent to this button.  The middle button is optional, and is most often used for an 'Info' or alternate type of 'Select' action.  If this button is not needed, a NULL string pointer may be placed in its position in the buttons array.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *textThe text prompt for the menu list.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int    The number of the button used to exit the scroll dialog, or a}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  negative error code.  A click on the Cancel/last button gives a return value of Err_abort.  The Okay/first button will return 1, and the Info/second button will return 2.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int Qcolor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an Animator-style color selection menu and returns the color the user selected.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe color the user selected (from 0 to 255).  If the user cancels, this will return a negative error code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean Qfile(char *suf, char *button, char *in, char *out, Boolean force_suf, char *header);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays an Animator-style file selector box and returns the filename the user selected.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sufThe wildcard template for the file extension, including the period.  For example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  .FLI}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  .*}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If a NULL pointer or an empty string is passed, .* will be assumed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *buttonThe button on the lower-right of the file selector which tells the user which action will be taken on the file (for example, [Load], [Save], [View], [Ok], etc.).  A separate [Cancel] button will automatically be next to this button.  The button can hold up to nine characters of text.  If a NULL pointer is passed, the button will be labeled "OK" by default.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *inThe default filename for the user selection.  If the string is empty, Poco will use the current drive and directory, "unnamed" and the default file suffix.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *outAt the end of the function call, this string will contain the filename the user selected.  This string will also include the disk drive and path, so make sure the buffer is large enough for the largest DOS filename (use the PATH_SIZE pre-defined macro to allocate the string).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  force_sufIf True, Poco will automatically append the default file extension to both *inpath and *outpath (e.g., "unnamed.pic").  If False, the filename won't have an extension if the user doesn't specify one.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *headerThe message header for the top of the file selector box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user selected the button specified by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}button}{\cf2\f0\fs24\lang1033{\*\listtag0}; False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean RubBox(int *x, int *y, int *w, int *h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Lets the user draw a rubber box on the screen and returns the dimensions of the rectangle.  This function doesn't draw anything permanently on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the top left x value of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the top left y value of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *wAt the end of the function call, this value will contain the width of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *hAt the end of the function call, this value will contain the height of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user made a box; False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean RubCircle(int *x, int *y, int *rad);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Lets the user draw a rubber circle on the screen and returns the dimensions of the circle.  This function doesn't draw anything permanently on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the center x position of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the center y position of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *radAt the end of the function call, this value will contain the radius of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user made the circle; False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean RubLine(int x1, int y1, int *x2, int *y2);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Lets the user draw a rubber line on the screen and returns the coordinates of the line.  This function doesn't draw anything permanently on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int x1Beginning x coordinate of the line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int y1Beginning y coordinate of the line.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *x2At the end of the function call, this value will contain the end x coordinate the user selected.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *y2At the end of the function call, this value will contain the end y coordinate the user selected.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user made the line, False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int RubPoly(int **x, int **y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Lets the user draw a rubber polygon on the screen.  This function doesn't draw anything permanently on the screen. Note that the parameters to this function are pointers to pointers to arrays of integers.  If the library function returns Success, it will have allocated two memory blocks into which the x and y coordinates are stored; pointers to these memory blocks are placed into the pointers provided by the caller.  It is the}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  caller's responsibility to make }{\cf2\f0\fs24\b\lang1033{\*\listtag0}free()}{\cf2\f0\fs24\lang1033{\*\listtag0} calls to release the memory blocks when the coordinates are no longer needed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int **xAt the end of the function call, this value will contain the array of x values of the polygon.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int **yAt the end of the function call, this value will contain the array of y values of the polygon.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of points in the polygon or a negative error code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:int count, *xcoors, *ycoors;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if ((count = RubPoly(&xcoors, &ycoors)) > 0) \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poly(count, xcoors, ycoors); /* render */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch free(xcoors);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch free(ycoors); }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean DragBox(int *x, int *y, int *w, int *h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Lets the user drag a fixed-size box on the screen. Returns the ending x/y coordinates of the box.  The w/h parameters will not be changed by this function.  This function doesn't draw anything permanently on the screen.  The contents of the variables pointed to by the parameters will be modified only if the function returns TRUE.  If the user cancels by right-clicking, the values are unmodified.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xOn entry, a pointer to the beginning X coordinate.  Upon return, the variable this points to will contain the ending X coordinate.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yOn entry, a pointer to the beginning y coordinate.  Upon return, the variable this points to will contain the ending Y coordinate.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *w A pointer to the box width.  The value this points at will NOT be modified upon return.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *h A pointer to the box height.  The value this points at will NOT be modified upon return.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the user dragged the box, False if the user canceled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void WaitClick(int *x, int *y, int *left, int *right, int *key);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Waits for the user to click the mouse or press a key.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the x position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the y position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *leftAt the end of the function call, this value will be 1 if the user clicked the left mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *rightAt the end of the function call, this value will be 2 if the user clicked the right mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *keyAt the end of the function call, this value will be the scan code if the user pressed a key, or 0 if no key was pressed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PollInput(int *x, int *y, int *left, int *right, int *key);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current status of the mouse and keyboard.  This function does not wait for mouse movement, clicks, or keystrokes; it immediately returns the current state.  Note that there can be an adverse interaction between this function and Animator's automatic abort checking routines.  Sometimes a right-click or keystroke will be returned via this routine, sometimes they will invoke the Abort? dialog.  To prevent this, it is recommended that SetAbort(FALSE) be in effect while polling input with this function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the x position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the y position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *leftAt the end of the function call, this value will be 1 if the user clicked the left mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *rightAt the end of the function call, this value will be 2 if the user clicked the right mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *keyAt the end of the function call, this value will be the scan code if the user pressed a key, or 0 if no key was pressed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void WaitInput(int *x, int *y, int *left, int *right, int *key);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Waits for any input: click, keypress or mouse movement.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the x position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the y position of the mouse.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *leftAt the end of the function call, this value will be 1 if the user clicked the left mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *rightAt the end of the function call, this value will be 2 if the user clicked the right mouse button, otherwise 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *keyAt the end of the function call, this value will be the scan code if the user pressed a key, or 0 if no key was pressed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetAbort(Boolean abort);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets whether Poco will abort if the user clicks the right mouse button.  The default configuration}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  is for Poco to abort when the user clicks the right mouse button, except when the program is }{\cf2\f0\fs24\i\lang1033{\*\listtag0}waiting}{\cf2\f0\fs24\lang1033{\*\listtag0} (as opposed to polling) for user input.  Running with SetAbort(FALSE) will give a slight performance boost, but it is NOT recommended that abort checking be disabled for long periods of time.  More importantly, disabling the abort checking is required for the PollInput() function to work correctly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean abortIf this value is True, Poco will abort when the user clicks the right mouse button.  If this value is False, Poco won't abort on right click.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetAbort(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current Abortable/Not Abortable status.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:TRUE indicates the program is abortable, FALSE indicates aborts have been disabled.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetAbortHandler(Boolean (*handler)(void *data), void *data);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Installs or removes an abort handler routine within the poco program which will get control if the user requests an abort.  An abort handler may be used to restore saved settings that were modified during processing (eg, ink type, brush size, etc).  It is not necessary to use an abort handler just to close open files or free allocated memory; these items are handled automatically.  The specified abort handler routine will be called only in response to a user-requested abort.  It will NOT receive control during termination due to a builtin error (NULL pointer references, etc).  Only one abort handler routine may be installed at a time.  The abort handler returns a Boolean value indicating whether the abort should proceed or be ignored.  This feature is provided only to allow a 'deferred abort' facility, in which the handler sets a flag indicating to the main loop of the}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  program that processing should stop on the next loop iteration.  Remember that the user has requested and confirmed an abort, and expects a shutdown to happen immediately.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void (*handler)  A pointer to the abort handler routine.  The routine must be prototyped as having a single parameter, a void* pointer. If a NULL pointer is passed for this parameter, any existing abort handler is removed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *dataA void* pointer.  This value will be passed to the abort handler routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:Boolean handle_abort(void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   SetInk(old_ink);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   SetFilled(old_filled);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   return TRUE;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void main(void)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   SetAbortHandler(handle_abort, NULL);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   /* do some processing */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void HideCursor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Hides the cursor from the screen.  If a user-interaction library function (such as Qtext()) is called while the cursor is hidden, it will become visible during the interaction dialog, but will return to its previous state upon exit from the library routine.  This is NOT true of the Poll/WaitInput() functions, only the 'canned dialog' functions.  If the cursor is to be visible during Poll/WaitInput() calls, the poco program must explicitly Hide/Show it.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void ShowCursor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays the cursor on the screen (this is the default configuration).  See usage notes under HideCursor().  Note that a single ShowCursor() call will make the cursor visible even though multiple HideCursor() calls may have preceeded it.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Graphics Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Graphics Library contains functions which draw to the screen (eg, lines, boxes, circles, polygons, etc).  Functions to control the method of drawing (ink type, color, etc) can be found in the Graphics Mode Library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetSize(int *width, int *height);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current screen size.  Corresponds to the size of the current flic.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *widthAt the end of the function call, this value will contain the screen width.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *heightAt the end of the function call, this value will contain the screen height.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetPhysicalSize(int *width, int *height);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the size of the full screen as opened by the video device driver.  Note that this may differ from the logical screen size returned by GetSize().  Also note that all drawing and rendering will occur only within the window defined by the logical screen size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *widthAt the end of the function call, this value will contain the screen width.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *heightAt the end of the function call, this value will contain the screen height.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetAspectRatio(int *x, int *y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Relates the width of a pixel to the pixel's height.  After the function is called, a box drawn as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Box(0,0,x,y)}{\cf2\f0\fs24\lang1033{\*\listtag0} will be square.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xA number relating to the height of a pixel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yA number relating to the width of a pixel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetColor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current drawing color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe current color, from 0 to 255.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetColor(int color);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the current drawing color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int colorThe color to set.  Values will be adjusted modulo 255.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Clear();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Clears the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Dot(int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Puts a dot on the screen in the current drawing color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe x position of the pixel to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y position of the pixel to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetDot(int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the color of a pixel at a position on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe x position of the pixel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y position of the pixel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe color of the pixel (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Line(int x1, int y1, int x2, int y2);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a line between two points.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int x1The x position of the first point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int y1The y position of the first point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int x2The x position of the second point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int y2The y position of the second point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Box(int x, int y, int w, int h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a rectangle on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe x position of the upper-left corner.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y position of the upper-left corner.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the rectangle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the rectangle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Circle(int cx, int cy, int radius);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a circle on the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int cxThe x position of the center of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int cyThe y position of the center of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int radiusThe radius of the circle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Poly(int ptcount, int *x, int *y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a polygon.  Connects the last point to the first point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int ptcountThe number of points to connect.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *xA pointer to the array of x coordinates.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yA pointer to the array of y coordinates.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Spline(int ptcount, int *x, int *y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a spline.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int ptcountThe number of points in the spline.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *xA pointer to the array of x coordinates.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yA pointer to the array of y coordinates.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Oval(double angle, int xcen, int ycen, int xrad, int yrad);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws an oval.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the oval.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xcenThe x center of the oval.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int ycenThe y center of the oval}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xradThe x radius of the oval.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yradThe y radius of the oval.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Star(double angle, int xcen, int ycen, int rad);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a star.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the star.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xcenThe x center of the star.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int ycenThe y center of the star.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int radThe radius of the star.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Petal(double angle, int xcen, int ycen, int rad);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a petal.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the petal.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xcenThe x center of the petal.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int ycenThe y center of the petal.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int radThe radius of the petal.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Rpoly(double angle, int xcen, int ycen, int rad);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a regular polygon (one whose sides are equal).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angle The angle of the polygon's rotation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xcenThe x center of the polygon.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int ycenThe y center of the polygon.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int radThe radius of the polygon.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Spiral(double angle, int x, int y, int rad, double turns);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Draws a spiral.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe initial angle of the spiral in degrees.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xThe x center of the spiral.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y center of the spiral.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int radThe total radius of the spiral.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double turnsThe spiral's turns in degrees; 360 degrees is one full turn.  A positive value will turn the spiral clockwise; a negative value will turn the spiral counterclockwise.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Fill(int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Performs a Fill operation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe x coordinate where the fill begins.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y coordinate where the fill begins.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode FillTo(int x, int y, int to_color);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Performs a FillTo operation (fills to a certain color).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe x coordinate where the fill begins.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y coordinate where the fill begins.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int to_colorThe border color to fill to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Edge(int color);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frames the boundary of a color using the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int colorColor to edge.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetColorMap(int index, int r, int g, int b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a color register in the picscreen color map to a new RGB value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int indexThe color register to change (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int rThe red component of the new value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int gThe green component of the new value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int bThe blue component of the new value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch (All values will be adjusted modulo 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetColorMap(int index, int *r, int *g, int *b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current RGB value of a picscreen color register.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int indexThe color register to read (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *rAt the end of the function call, this value will contain the red component of the color value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *gAt the end of the function call, this value will contain the green component of the color value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *bAt the end of the function call, this value will contain the blue component of the color value (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetScreenColorMap(Screen *screen, int *maparray);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Set the entire color map for the specified screen to the values in the map array.  The map array must contain 768 entries (3*256).  All entries in the array are adjusted modulo 255 before being transferred into the screen's color map.  If the screen is the picscreen, the hardware color map is also updated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *screenA pointer to the screen for which the color map is to be loaded.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *maparrayA pointer to an array of 768 integers (or an array declared as [256][3]). The entries in the map must be in RGBRGBRGB... sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetScreenColorMap(Screen *screen, int *maparray);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Get the entire color map for the specified screen.  The values are placed into the map array.  The map array must have room for 768 entries (3*256).  All entries in the returned map will be in the range of 0 thru 255.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *screenA pointer to the screen for which the color map is to be obtained.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *maparrayA pointer to an array of 768 integers (or an array declared as [256][3]). The entries in the map will be returned in RGBRGBRGB... sequence.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Text Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Text Library contains functions for drawing text on the screen.  Functions to control the method of drawing (ink type, color, etc) can be found in the Graphics Mode Library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void WordWrap(int x, int y, int width, int height, char *text);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes text in the current font inside a rectangle.  If necessary, the text is adjusted using word wrap.  Negative width or height values result in no text being rendered.  For example, if the user has marked out a rubber box by dragging the mouse up and/or to the left, it may be necessary to 'flip' the box coordinates before passing them to this routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe upper-left x coordinate of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe upper-left y coordinate of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int widthThe width of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int heightThe height of the box.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *textThe text to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Text(int x, int y, char *string);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes text on the screen in the current font.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe upper-left x coordinate of the starting text position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe upper-left y coordinate of the starting text position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *stringThe text to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetJustify(int just);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the justification options for text mode, and turns on the equivalent option in the Titling panel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int just0 -- Flush left}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1 -- Flush right}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2 -- Center text}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3 -- Fill line}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetJustify();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current justification settings for text.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int0 -- Flush left}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1 -- Flush right}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2 -- Center text}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 3 -- Fill line}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int StringWidth(char *string);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:The number of pixels wide a string will be in the current font.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *stringThe string to measure.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe width of the string in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int FontHeight();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:The distance between two lines of text, measured from the top of one row to the top of the next.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe distance between the lines in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int TallestChar();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:The height of the tallest character in the current font set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe height of the character in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetFontName(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the filename of the current font.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameAt the end of the function call, this value will contain the filename of the current font.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadFont(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a font from disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the font to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetFontDir(char *dir);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current font directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *dirAt the end of the function call, this value will contain the current directory of fonts.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Qfont();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Displays the Animator font file selector and loads the font the user selects.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. Graphics Modes Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Graphics Modes LIbrary contains functions to set the options for drawing to the screen using the shapes and text output routines.  These functions allow programmatic selection of ink type, strength, color, etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SetInk(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe name of the ink to set.  The ink name is not case sensitive, but the string must be the same length as the ink name.  See the reference manual (or the Animator ink selection menu) for a list of valid ink names.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetInk(char *buf);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *bufAt the end the of function, this contains the name of the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetInkStrength(int percent);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the ink strength of the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int percentThe strength of the ink, from 0 to 100}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetInkStrength();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the ink strength of the current ink.  If the current ink has no strength setting, this returns 0.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe strength of the ink, from 0 to 100.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetInkDither(Boolean dither);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the Dither status for the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean ditherTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetInkDither();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds out the Dither status for the current ink.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off or if the current ink has no [Dither] button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetFilled(Boolean fill);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Filled button [F] (used by the Box tool, Poly tool, etc.).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean fillTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetFilled();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the status of the Filled button [F].}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetBrushSize(int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the brush size.  A size of zero is valid, and indicates a brush of 'no width', eg, a single pixel wide.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int sizeThe size of the brush, from 0 to 31.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetBrushSize();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the brush size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe size of the brush, from 0 to 31.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetKeyMode(Boolean clear);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the clear key-color button [K].}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean clearTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetKeyMode();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the status of the clear key-color button [K].}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetKeyColor(int color);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the key color to a specified color register.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int colorThe color register to place in the Key color slot (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetKeyColor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the color register of the key color.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intKey color register (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetMaskUse(Boolean use_it);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the [Mask] button.  Setting this to TRUE will automatically force the MaskCreate status to FALSE.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean use_itTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetMaskUse();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the status of the [Mask] button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetMaskCreate(Boolean make_it);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Turns on or off the Create option in the Mask menu.  Setting this to TRUE will automatically force the MaskUse status to FALSE.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean make_itTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetMaskCreate();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the status of the Create option in the Mask menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetStarPoints(int points);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the number of points for the Star, Petal and Rpoly tools.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int pointsThe number of points (from 3 to 32).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetStarPoints();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current points setting of the Star, Petal and Rpoly tools.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of points (from 3 to 32).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetStarRatio(int ratio);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the inner-radius ratio for the Star and Petal tools.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int ratioThe inner-radius ratio value (from 0 to 100).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetStarRatio();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current inner-radius ratio setting of the Star and Petal tools.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe inner-radius ratio value (from 0 to 100).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetSplineTCB(int t, int c, int b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the tension, continuity and bias sliders for the Spline tool.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int tTension (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int cContinuity (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int bBias (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetSplineTCB(int *t, int *c, int *b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets tension, continuity and bias slider settings of the Spline tool.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *tAt the end of the function call, this value will contain the tension (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *cAt the end of the function call, this value will contain the continuity (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *bAt the end of the function call, this value will contain the bias (from -20 to 20).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetTwoColorOn(Boolean setit);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the [2-Color] button for filled tools, such as Box, Poly, etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean setitTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetTwoColorOn();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the status of the [2-Color] button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetTwoColor(int color);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the second color used by 2-color mode.  This also changes the color in the rightmost slot of the mini-palette.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int colorThe color register to use (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetTwoColor();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the color register currently used as the second color by the 2-color mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe current 2-color color register (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetClosed(Boolean closed);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the Closed flag for tweenable shapes, such as the Poly tool, Spline tool, Star tool, etc.  This affects the status of the [Closed] button for those tools, plus the status of the Closed item in the Options menu of the Tween screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean closedTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetClosed();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the status of the Closed flag for the tweenable tools.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetCycleDraw(Boolean cycle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Cycle Draw [C] mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean cycleTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetCycleDraw();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the status of the Cycle Draw [C] mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetMultiFrame(Boolean mf);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Over Time [T] mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean mfTrue is on, False is off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetMultiFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the status of the Over Time [T] mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if on, False, if off.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Turtle Graphics Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Turtle Graphics Library contains a set of functions which implement turtle graphics.  There are no corresponding interactive menus for these functions.           }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Move(double amount);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves the turtle graphics pen a distance offset from its current position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double amountThe distance to move in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Back(double amount);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves the turtle graphics pen backwards.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double amountThe distance to move in pixels.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Left(double angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Turns the turtle graphics pen to the left.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the turn in degrees.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Right(double angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Turns the turtle graphics pen to the right.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the turn in degrees.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PenUp();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Picks up the turtle graphics pen (suspends drawing).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PenDown();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Puts down the turtle graphics pen (resumes drawing).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean IsDown();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds out whether the turtle graphics pen is up or down.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if down, False if up.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void MoveTo(double x, double y, double angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves the turtle graphics pen to an absolute position on screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xThe new x coordinate of the pen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double yThe new y coordinate of the pen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double angleThe new direction of the pen (in degrees).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Where(double *x, double *y, double *angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the position and direction of the turtle graphics pen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double *xThe current x coordinate of the pen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double *yThe current y coordinate of the pen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double *angleThe current heading of the pen (in degrees).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Home();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves the turtle graphics pen to the center of the screen and sets the drawing direction to the right (0 degrees).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Time-Oriented Function Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Time-Oriented Functions Library contains function which provide realtime control over program execution (Clock1000(), sleep(), etc), and functions which control a sequence of frames within a flic (PlayFlic(), NextFrame(), etc).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch long Clock1000();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the amount of time (in milliseconds) that Animator has been running.  This clock is fairly accurate over periods of time, but do not rely on accurate timings of 1-5 ms time spans.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:longThe amount of time in ms.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void sleep(double seconds);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Waits a specified number of seconds before continuing program operation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double secondsThe number of seconds to sleep.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void NextFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Advances to the next frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void BackFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Goes to the previous frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetFrame(int frame);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the current frame to a specified index number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int frameOne less than the frame number to move to.  (For the purposes of the Time-Oriented Function Library, the first frame is number 0.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the index of the current frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intOne less than the current frame number.  (For the purposes of the Time-Oriented Function Library, the first frame is number 0.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SetFrameCount(int count);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the total number of frames in the animation.  (Caution: This function may reduce the current number of frames without a warning prompt.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int countThe total number of frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetFrameCount();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the total number of frames in the current animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PlayFlic(long frames);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Plays the current animation through a specified number of frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:long framesThe number of frames to play.  If this number is -1, the animation will loop and play indefinitely.  If this number is larger than the number of frames, the program will play that total number of frames, looping the animation as many times as necessary.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetSpeed(int speed);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the speed of an animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int speedThe speed to play in milliseconds between frames.  Note that this is not the same as the speed in jiffies which is displayed on the Frames panel.  To convert from one to the other:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch jiffies = milli * 70/1000}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch millis = jiffies * 1000/70}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetSpeed();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current animation speed setting.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe current speed in milliseconds between frames (see }{\cf2\f0\fs24\b\lang1033{\*\listtag0}SetSpeed()}{\cf2\f0\fs24\lang1033{\*\listtag0}).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode InsertFrames(int count);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Inserts frames after the current frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int countThe number of frames to insert; must be greater than zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode DeleteFrames(int count);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Deletes frames starting at and including the current frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int countThe number of frames to delete.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OverTime(ErrCode (*func)(double time, void *data), void *data);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Passes a function to the Animator Time Select menu, and returns each frame's relative position in the animation to the function.  The function is expected to draw something on the screen, with the position dependent on the time parameter.  Optionally, you can pass additional data to the function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:ErrCode (*func)(double time, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The name of the function passed to the Time Select menu. The function's parameters are assumed, so use only the function name when you call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0}. (See example.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double timeThis is passed to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function by the Time Select menu.  Its value, from 0 to 1, is the relative position of the frame in the current animation.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} sends this value for each frame, automatically advancing the animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *dataUsually a structure, this is any data element you choose to send to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  This data is disregarded by the Time Select menu.  Use a NULL data pointer if no data is sent.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example Calls:OverTime(CircFunc,&cd);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverTime(GrowBush,NULL);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example Program:/* CIRCLE.POC/*}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* Causes the user's rubberboxed circle /*}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* to expand through an animation. /*}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int x,y,rad;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} CircData;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CircFunc(double time, CircData *cd) \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Circle(cd->x,cd->y,time*cd->rad);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return(0);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch main() \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CircData cd;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch for (;;) \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if (!RubCircle(&cd.x, &cd.y, &cd.rad))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  break;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverTime(CircFunc, &cd);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode}{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverTime()}{\cf2\f0\fs24\lang1033{\*\listtag0} returns the ErrCode returned to it by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function or the Time Select menu, or 0 if no error was encountered.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OverSegment(ErrCode (*func)(double time, void *data), void *data);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Passes a function to the Animator autodraw driver, bypassing the Time Select menu.  This function is very similar to OverTime, described above, except that it does not stop to interact with the user via the Time Select menu.  It will call the specified drawing function for each frame in the current segment, using the current settings of the buttons in the Time Select menu.  The settings of these buttons can be programmatically manipulated using other functions described in this section of the document.  The drawing will be done to all frames in the current segment regardless of the setting of the FSA buttons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:ErrCode (*func)(double time, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The name of the function passed to the Time Select menu. The function's parameters are assumed, so use only the function name when you call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverSegment()}{\cf2\f0\fs24\lang1033{\*\listtag0}. (See OverTime() example.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double timeThis is passed to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function by the Time Select menu.  Its value, from 0 to 1, is the relative position of the frame in the current animation.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverSegment()}{\cf2\f0\fs24\lang1033{\*\listtag0} sends this value for each frame, automatically advancing the animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *dataUsually a structure, this is any data element you choose to send to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  This data is disregarded by the Time Select menu.  Use a NULL data pointer if no data is sent.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode}{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverSegment()}{\cf2\f0\fs24\lang1033{\*\listtag0} returns the ErrCode returned to it by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OverAll(ErrCode (*func)(double time, void *data), void *data);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Passes a function to the Animator autodraw driver, bypassing the Time Select menu.  This function is very similar to OverTime, described above, except that it does not stop to interact with the user via the Time Select menu.  It will call the specified drawing function for each frame in the flic, using the current settings of the buttons in the Time Select menu.  The settings of these buttons can be programmatically manipulated using other functions described in this section of the document.  The drawing will be done to all frames in the current flic regardless of the setting of the FSA buttons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:ErrCode (*func)(double time, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The name of the function passed to the Time Select menu. The function's parameters are assumed, so use only the function name when you call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverAll()}{\cf2\f0\fs24\lang1033{\*\listtag0}. (See OverTime() example.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double timeThis is passed to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function by the Time Select menu.  Its value, from 0 to 1, is the relative position of the frame in the current animation.  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverAll()}{\cf2\f0\fs24\lang1033{\*\listtag0} sends this value for each frame,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  automatically advancing the animation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *dataUsually a structure, this is any data element you choose to send to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.  This data is disregarded by the Time Select menu.  Use a NULL data pointer if no data is sent.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode}{\cf2\f0\fs24\b\lang1033{\*\listtag0}OverAll()}{\cf2\f0\fs24\lang1033{\*\listtag0} returns the ErrCode returned to it by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}func()}{\cf2\f0\fs24\lang1033{\*\listtag0} function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetTimeSelect(Boolean is_multi);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Time Select (multi-frame) mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean is_multi}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating multi-frame or single-frame mode, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetTimeSelect(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Time Select mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating multi-frame or single-frame mode, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetFSA(int fsamode);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the F/S/A (Frame, Segment, All) mode (and the corresponding buttons on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int fsa_mode0, 1, or 2, indicating To Frame, To Segment, or To All,  correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetFSA(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the F/S/A modes/buttons.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.0, 1, or 2, indicating To Frame, To Segment, or To All, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetSegStart(int frame);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the beginning frame number for the current segment.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int frame The starting frame number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetSegStart(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the starting frame number of the current segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe starting frame number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetSegEnd(int frame);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the ending frame number for the current segment.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int frame The ending frame number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetSegEnd(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the ending frame number of the current segment.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe ending frame number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetStill(Boolean still);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Still mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean still}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating Still mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetStill(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Still mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating Still mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetInSlow(Boolean in_slow);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the In Slow mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean in_slow}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating In Slow mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetInSlow(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the In Slow mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating In Slow mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetOutSlow(Boolean out_slow);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Out Slow mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean out_slow}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating Out Slow mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetOutSlow(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Out Slow mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating Out Slow mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetPingPong(Boolean pingpong);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Ping Pong mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean pingpong}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating Ping Pong mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetPingPong(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Ping Pong mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating Ping Pong mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetReverse(Boolean reverse);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Reverse mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean reverse  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating Reverse mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetReverse(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Reverse mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating Reverse mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetComplete(Boolean complete);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the status of the Complete mode (and the corresponding button on the Time Select menu).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Boolean complete}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TRUE or FALSE, indicating Complete mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean GetComplete(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the status of the Complete mode/button.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Boolean.TRUE or FALSE, indicating Complete mode or not, correspondingly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 7. Cel Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Cel Library provides functions to manipulate Cels and AnimCels programmatically.\~ Functions to load and save cels are contained in the Animator File library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean CelExists();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds out whether a cel exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the cel exists, False if the cel buffer is empty.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelClip();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Places parts of the current picscreen which are not in the key color into the Cel (replacing current Cel contents, if any).  This function performs the same action as the Cel/Clip function on the interactive menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode Success, or an appropriate error code value.  If the entire picscreen is the key color and there is nothing to clip, Err_not_found will be returned.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelGet(int x, int y, int w, int h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Creates a cel from the screen contents bounded by the specified x,y,w,h coordinates.  If the Over\~Time [T] button is active, this command creates an animcel from the specified coordinates and time frame.  If a cel already existed at the time of this call, it will be replaced without warning.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int x,y,w,hThe screen coordinates of the bounding rectangle.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Success, or the appropriate error code as detailed in Appendix A.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CelPaste();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Pastes a cel on the screen at the current cel location.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CelMove(int dx, int dy);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves a cel a relative distance on the screen (without pasting it).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int dxThe distance to move in the x direction. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dyThe distance to move in the y direction.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CelMoveTo(int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Moves a cel to an absolute location on the screen (without pasting it).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int xThe new x position of the center of the cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe new y position of the center of the cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CelTurn(double angle);}{\cf2\f0\fs24\lang1033{\*\listtag0} }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Rotates the cel about the Z axis, relative to its current orientation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe amount to turn the cel in degrees.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CelTurnTo(double angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Rotates the cel to an absolute angle about the Z axis.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double angleThe angle of the cel in degrees.  Positive values result in clockwise rotation; negative numbers result in counterclockwise rotation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelNextFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Goes to the next frame of an Anim cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelBackFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Goes to the previous frame of an Anim cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelSetFrame(int frame);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the current frame of an Anim cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int frame One less than the cel frame number to move to.  (For the purposes of the Cel Function Library, the first cel number is 0.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int CelGetFrame();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the index of the current Anim cel frame.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intOne less than the current cel frame.  (For the purposes of the Cel Function Library, the first cel number is 0.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int CelFrameCount();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the total number of frames in the current Anim cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe total number of frames.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode CelWhere(int *x, int *y, double *angle);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current location of the cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int *xAt the end of the function call, this value will contain the x location of the center of the cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the y location of the center of the cel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double *angleAt the end of the function call, this value will contain the angle of the cel in degrees (about the Z axis).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 8. Swap Screen Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Swap Screen library contains functions to manipulate the Swap Screen.  These functions correspond to the items on the Swap interactive menu.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean SwapExists();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds out if the swap screen exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the swap screen buffer is filled, otherwise False.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SwapClip();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Puts the current screen into the swap screen buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SwapTrade();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exchanges the contents of the current screen and swap screen, including color palettes.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCodeSuccess, or an appropriate error code value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SwapRelease();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Clears the swap screen buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 9. Optics Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Optics Library contains functions to provide programmatic control over the optics subsystem, including functions to render an effect over a sequence of frames.  To use most of these functions, it will be necessary to #include "optics.h" in your Poco source code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptClearState();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Clears all motion settings.  Equivalent to selecting Presets/Clear All from the Optics screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptSetState(struct optState *os);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets all motion and other optics state information to values contained in the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optState}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:struct optState *osOptics motion and state information. (See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optics.h}{\cf2\f0\fs24\lang1033{\*\listtag0} in Appendix B for the structure.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptGetState(struct optState *os);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current optics motion and state information.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:struct optState *osAt the end of the function call, this structure will contain the Optics movement and the state information. (See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optics.h}{\cf2\f0\fs24\lang1033{\*\listtag0} in Appendix B for the structure.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptFreeState(struct optState *os);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frees up the dynamic memory associated with an }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optState}{\cf2\f0\fs24\lang1033{\*\listtag0} structure returned by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OptGetState()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:struct optState *opThe optics structure to free.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptClearPos();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:The equivalent to selecting Clear Move on the Optics panel. (Clears the top of the optics transformation stack.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptSetPos(struct optPos *op);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets all the sliders in the Optics panel.  (Sets the top of the optics transformation stack.).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:struct optPos *opOptics movement points. (See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optics.h}{\cf2\f0\fs24\lang1033{\*\listtag0} in Appendix B for the structure.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptGetPos(struct optPos *op);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reads the values for all the sliders in the Optics panel.  (The program gets the top of the optics transformation stack.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:struct optPos *opOptics movement points. (See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}optics.h}{\cf2\f0\fs24\lang1033{\*\listtag0} in Appendix B for the structure.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptClearPath();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Clears the Path movement.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptSetPath(int ptcount, int *x, int *y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the Path movement to a set of screen coordinates.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int ptcountThe number of points in the path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *xThe array of x coordinates for the path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yThe array of y coordinates for the path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int OptGetPath(int **x, int **y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Allocates buffers and fills them in with the current optics path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int **xThe address of the buffer for the optics path x values.  (The buffer will contain the values at the end of the function call.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int **yThe address of the buffer for optics path y values.  (The buffer will contain the values at the end of the function call.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of coordinate points in the path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptFreePath(int **x, int **y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frees the buffers allocated by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OptGetPath()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int **xAddress of the x buffer to free.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int **yAddress of the y buffer to free.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptDefaultCenters();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the Spin and Size centers to the center of the current optics element.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void OptContinue();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:This is the equivalent to clicking on the [Continue] button on the Optics panel.  (Pushes a copy of the top transformation onto stack.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int OptGetElement();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the current optics element.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intEL_SCREEN (0) for flic}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch EL_CEL (1) for cel}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch EL_POLY (2) for poly}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch EL_SPLINE (3) for spline}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch EL_TWEEN (4) for tween}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OptSetElement(int el);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the current optics element.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int elThe element to set.  Use the same values as those returned by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OptGetElement()}{\cf2\f0\fs24\lang1033{\*\listtag0}, above.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCodeThe function will set the element to EL_SCREEN if the requested element does not exist.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OptToFrame(double time);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Pastes the transformed element onto the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double timeThis is 0.0 for the element at the start of the transformation and 1.0 for the element at the end.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OptToSegment(int start, int stop);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Renders the current transformation over a section of the flic.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int startThe first frame to render.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int stopThe last frame to render.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode OptToAll();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Renders the current transformation over the entire flic.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 10. Screen Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Screen Library provides low-level access to the various Animator screens.  Functions are included to return screen handles for pre-existing screens, and to allocate new screens.  Also included are functions to implement low-level drawing, including dot-at-a-time access, rectangle blits, etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *GetPicScreen();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Assigns a handle to the current (picture) screen. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Screen *The handle of the main drawing screen. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *GetSwapScreen();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Assigns a handle to the swap screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Screen *The handle of swap screen. Returns NULL if there is no current swap screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *GetUndoScreen();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Assigns a handle to the Undo (buffer) screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Screen *The handle of the Undo screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *GetCelScreen();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Assigns a handle to the Cel/Anim Cel screen.  The returned handle is to a }{\cf2\f0\fs24\b\lang1033{\*\listtag0}read only}{\cf2\f0\fs24\lang1033{\*\listtag0} screen.  Attempts to write to the screen will appear to work, but will not be registered internally by Animator.  When performing multi-flic compositing and similar activities, a flic may be loaded into the animcel, and then composited from there to the flic in the main picscreen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:Screen *The handle of the Cel screen. Returns NULL if there is no current Cel screen. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode AllocScreen(Screen **screen, int width, int height);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Allocates memory for a new screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen **screenThe handle of the new screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int widthThe width of the new screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int heightThe height of the new screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void FreeScreen(Screen **screen);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frees memory allocated by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}AllocScreen()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen **screenThe handle of the screen to free.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetScreenSize(Screen *s, int *x, int *y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds the size of a screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe handle of the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *xAt the end of the function call, this value will contain the x size of the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *yAt the end of the function call, this value will contain the y size of the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetPixel(Screen *s, int color, int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a pixel on a screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe screen to draw on. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int colorThe color register of the pixel to set (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xThe x position of the pixel to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y position of the pixel to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetPixel(Screen *s, int x, int y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the color of a pixel on a screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe screen to look at.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xThe x position of the pixel to check.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe y position of the pixel to check.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe color value of the pixel (from 0 to 255).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void SetBlock(Screen *s, char *pixbuf, int x, int y, int w, int h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a block on a screen to a bytewise buffer previously stored with }{\cf2\f0\fs24\b\lang1033{\*\listtag0}GetBlock()}{\cf2\f0\fs24\lang1033{\*\listtag0} (described below).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe screen to draw on.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pixbufThe pixel data to draw.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xThe upper-left x position of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe upper-left y position of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetBlock(Screen *s, char *pixbuf, int x, int y, int w, int h);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Stores a block of a screen into a buffer for retrieval with }{\cf2\f0\fs24\b\lang1033{\*\listtag0}SetBlock()}{\cf2\f0\fs24\lang1033{\*\listtag0} (described above).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe screen to get the block from.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *pixbufThe pointer to the buffer to hold the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int xThe upper-left x position of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int yThe upper-left y position of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void IconBlit(char *s, int next, int sx, int sy, int w, int h, Screen *d, int dx, int dy, int c);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Maps a bit representation of an image (such as a font or icon) to the screen, setting pixels on the screen to color }{\cf2\f0\fs24\b\lang1033{\*\listtag0}c}{\cf2\f0\fs24\lang1033{\*\listtag0} where 1's appear in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0}.  0's in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0} aren't drawn (ie, transparent blit).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sThe bit-mapped buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int nextThe number of bytes to the next line in the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sxThe beginning x position in the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int syThe beginning y position in the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the buffer to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the buffer to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *dThe handle of the destination screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dxThe upper-left x position in the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dyThe upper-left y position in the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int cThe color to map 1's in the buffer to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Blit(Screen *s, int sx, int sy, int w, int h, Screen *d, int dx, int dy);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Blits a graphic block from one screen to another.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe handle of the source screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sxThe upper-left x coordinate of the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int syThe upper-left y coordinate of the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *dThe handle of the destination screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dxThe upper-left x coordinate of the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dyThe upper-left y coordinate of the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void KeyBlit(Screen *s, int sx, int sy, int w, int h, Screen *d, int dx, int dy, int c);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Blits a block from one screen to another, but doesn't copy pixels that are in a key color on the source screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sThe handle of the source screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sxThe upper-left x coordinate of the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int syThe upper-left y coordinate of the source.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int wThe width of the block to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int hThe height of the block to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *dThe handle of the destination screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dxThe upper-left x coordinate of the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int dyThe upper-left y coordinate of the destination.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int cThe key color. (The pixels in this color aren't copied.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void CopyScreen(Screen *source, Screen *dest);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies one screen to another.  Copies both graphics data and color map.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *sourceThe source screen to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *destThe handle of the destination screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void TradeScreen(Screen *a, Screen *b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Exchanges two screens.  Graphics data and color maps are exchanged.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:Screen *aThe handle of the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *bThe handle of the screen.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PicDirtied(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Indicates to Animator's internal caching and delta compression routines that the current flic frame}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  has been modified.  This function is primarily for use in POE library modules.  It is possible for POE modules to draw directly to the picscreen using the GFX library routines.  When this is done, animator will not be aware that the screen has been changed, and the frame will not be recompressed (ie, the changes will be lost).  A call to this function is NOT necessary if all screen access is via the builtin library functions contained in this document.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 11. Misc. Functions Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Miscellanious Functions Library contains an assortment of functions which don't fit neatly into the categories of the other builtin libraries. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void exit(ErrCode err);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Causes the poco program to terminate.  This routine will NOT invoke an installed abort handler routine, even if the err value is Err_abort.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:ErrCode errThis is 0 for a normal exit; otherwise negative.  If }{\cf2\f0\fs24\b\lang1033{\*\listtag0}err}{\cf2\f0\fs24\lang1033{\*\listtag0} is a standard Animator error code (other than Err_abort), the error will be reported on exit.  With the special value -425 (Err_early_exit), if Poco was called from the command line, Animator will not give control to the user upon termination of the Poco program; it will return to the DOS prompt.  (See Appendix A for a list of error codes.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.  Does not return.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void NewFlic();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Starts a new animation, retaining the current screen size, palette and settings.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode Reset();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Resets to Animator's default settings and starts a new animation at the current screen size.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode ResizeReset(int width, int height);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Resets to Animator's default settings and starts a new animation at a new screen size.  This is the only way to programatically change the logical screen size (flic size).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int widthNew screen width.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int heightNew screen height.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int GetChangeCount(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the number of changes to the current flic.  Useful in prompting the user before executing a Resize() or ResizeReset() function.  If this value is non-zero, unsaved changes exist in the flic.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:intThe number of changes made to the current flic since it was last saved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int PocoVersion();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the Poco version number.   The version number is incremented by one each time a change is made to the Poco compiler.  As of this writing, the version number is 172.  This version number will always match the value in the __POCO__ builtin preprocessor symbol.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe version number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Redo();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Performs a Redo operation.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void Restore();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Restores the current frame to what it was when the user first moved to it.  Equivalent to selecting Restore from the Pic menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int rnd(int max);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Generates a random number from 0 to max-1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int maxThe random number will be between 0 and this number minus 1. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intA random number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int rand();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns a random 16-bit number.  The statement }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x\~=\~rand()\~%\~100}{\cf2\f0\fs24\lang1033{\*\listtag0} will return a random number from 0 to 99.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intA random number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void srand(int seed);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the seed value for the random number generator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int seedThe seed for the random number generator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean IsBatchRun(void);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Used to determine whether the poco program was started by specifying its name on the Animator command line.  Usefull in writing poco programs which have both an 'interactive' and an 'unattended batch' mode.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:BooleanTRUE if this poco program was started by entering its name on the Animator command line.  FALSE if it was started interactively from the Poco menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:if (IsBatchRun())        // started in batch:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     exit(Err_early_exit);// return to DOS.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch else                     // started interactively:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch     exit(Success);       // return to Animator.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void PocoChainTo(char *progpath);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Specify a Poco program to run upon completion of the current program.  Note that the specified program will only be run if the current program completes successfully.  If the user aborts the current program, if a builtin_err condition occurs, or if the current program calls exit() with a negative status, the specified chain-to program will not be run.  The specified program is not searched for until it is needed (ie, this function does not check for existence at the time of the call).  To pass values to the chained program, use the GlobalVars mechanism, detailed elsewhere in this document.  There is no limit to the number of programs that can be chained, each chained program can specify another program to be chained upon its completion.  However, if a single}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch program calls this function more than once, only the last program specified will be executed. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *progpathThe name of the Poco program to run upon completion of the current program.  If the string does not contain a device or path name, it is presumed to exist in the current directory.  (Current at the time of the call, not at the time of exit.)  If NULL or an empty string is passed, it has the effect of negating any prior call: no program will be run after the current program.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 12. Autodesk Animator File Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Animator File Library contains function to load and save pre-defined Animator file types such as flics and paths, as well as supported picture file formats.   }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadFlic(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads an animation from disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the animation to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveFlic(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves an animation to disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the animation to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadPic(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a picture file into the current frame.  This function will automatically try all picture driver modules in the resource directory until a driver is found that can handle the file format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the picture to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadScreenPic(char *name, Screen *screen);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:As for LoadPic(), except that the picture can be loaded into any arbitrary screen (eg, the swapscreen, an allocated screen, etc).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the picture to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *screenPointer to the screen (eg, swapscreen) to load the picture into.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SavePic(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the current frame to a picture file.  The file is saved in the format last selected by the user in the Files menu.  There is no way to programmatically specify the file format of the output picture file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the picture to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveScreenPic(char *name, Screen *screen);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:As for SavePic(), except that the contents of any arbitrary screen can be saved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the picture to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen *screenA pointer to the screen to be saved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadCel(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a cel, flic, or picture file into the cel buffer, replacing the current contents, if any.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the cel to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveCel(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the current cel buffer to a .CEL file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the cel to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadPath(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads the optics path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the optics path to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SavePath(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the optics path to disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the optics path to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadPoly(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a polygon from disk for "Reuse."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the polygon to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SavePoly(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the current polygon to disk so that it may later be loaded for "Reuse."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the polygon to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadColors(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a color palette.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the color palette to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveColors(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the current color palette to disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the color palette to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadTitles(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads the text buffer used by the Text tool Reuse and Edit buttons and by the Titles panel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the text to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveTitles(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves to disk the text buffer used by the Text tool and Titles panel.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the text to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode LoadMask(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Loads a mask from disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the mask to load.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SaveMask(char *name);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Saves the current mask buffer to disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe filename of the mask to save.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 13. (C Standard) File Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Standard File Library provides standard C stream I/O functions.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fopen(char *name, char *mode);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Opens a file for input/output.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *nameThe name of the file to open.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *modeThe access mode (must be lower case):}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch r  = Read}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch w  = Write }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch a  = Append}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch r+ = Read and write the existing file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch w+ = Read and write a new file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch b  = Binary file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:FILE*The pointer to the file handle of the open file.   A return value of NULL indicates an error opening the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *fclose(FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Closes a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of the file to close.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fread(void *buf, int size, int count, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reads data from an open file.  The total bytes read will be }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size}{\cf2\f0\fs24\lang1033{\*\listtag0} times }{\cf2\f0\fs24\b\lang1033{\*\listtag0}count}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *bufThe pointer to the block to hold the data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe length of each item to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int countThe number of items to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of items read.  If this does not equal }{\cf2\f0\fs24\b\lang1033{\*\listtag0}count}{\cf2\f0\fs24\lang1033{\*\listtag0}, an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fwrite(void *buf, int size, int count, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes data to an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *bufThe pointer to the block holding the data.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe length of each item to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int countThe number of items to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of items written.  If this does not equal }{\cf2\f0\fs24\b\lang1033{\*\listtag0}count}{\cf2\f0\fs24\lang1033{\*\listtag0}, an error occurred.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fprintf(FILE *f, char *format, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes a formatted output string to an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of the file to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *formatThe string to write, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to include in the output string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of bytes output.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fseek(FILE *f, long offset, int mode);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Repositions the pointer in an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch long offsetThe number of bytes to move the pointer beyond the location specified in }{\cf2\f0\fs24\b\lang1033{\*\listtag0}mode}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int modeThe mode of repositioning:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0 -- From the beginning of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 1 -- From the current position.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2 -- From the end of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intReturns 0 on success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch long ftell(FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the current pointer position in an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:longThe current position in the file, relative to the beginning of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fflush(FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Flushes an open data stream, either to a file open for output or from a file open for input.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intReturns 0 on success.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int getc(FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets a character from an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of the file to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe character read, or -1 if end of file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fgetc(FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets a character from an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:FILE *fThe pointer to the handle of the file to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe character read, or -1 if end of file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int putc(int c, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes a character to an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int cThe character to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int On success, the character that was written, otherwise -1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fputc(int c, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes a character to an open file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int cThe character to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file to write.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intOn success, the character that was written, otherwise -1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *fgets(char *s, int maxlen, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reads a string from a file until it reaches the end-of-line character (or reads maxlen characters).  The end-of-line character is retained in the string and a null byte is added to mark the end of the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sThe pointer to the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int maxlenThe maximum characters to read.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char *The string pointed to by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}s}{\cf2\f0\fs24\lang1033{\*\listtag0} or NULL on the end of the file or error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int fputs(char *s, FILE *f);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Writes a string to a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sThe null-terminated string to write.  (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}fputs()}{\cf2\f0\fs24\lang1033{\*\listtag0} doesn't write the end-of-line character or the terminating null byte.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FILE *fThe pointer to the handle of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intOn Success, the last character written.  Otherwise -1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 14. (C Standard) String Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Standard String Library provides many of the C standard functions for manipulating strings.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int sprintf(char *buf, char *format, ...);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Expands a formatted string and values, and puts the result in a buffer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *bufThe buffer to write the string to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *formatThe formatted string to copy, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ...The variables to evaluate into the formatted string, using standard }{\cf2\f0\fs24\b\lang1033{\*\listtag0}printf()}{\cf2\f0\fs24\lang1033{\*\listtag0} format.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of bytes written to the output string, excluding the terminating null byte.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int strcmp(char *a, char *b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Compares two strings.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *aThe first string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *bThe second string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int< 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch = 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} equals }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch > 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is greater than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int stricmp(char *a, char *b);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Compares two strings, without case sensitivity.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *aThe first string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *bThe second string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int< 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch = 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} equals }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch > 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is greater than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int strncmp(char *a, char *b, int maxlen);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Compares a portion of one string to another.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *aThe first string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *bThe second string to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int maxlenThe maximum number of characters to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int< 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch = 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} equals }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch > 0 if }{\cf2\f0\fs24\b\lang1033{\*\listtag0}a}{\cf2\f0\fs24\lang1033{\*\listtag0} is greater than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int strlen(char *a);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the length of a string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *aThe string to examine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of characters in the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strcpy(char *dest, char *source);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies one string into another string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *destThe destination string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *sourceThe source string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The destination string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strncpy(char *dest, char *source, int maxlen);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a certain number of characters from one string into another.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *destThe destination string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *sourceThe source string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int maxlenThe number of characters to copy.  (The function will pad or truncate if necessary.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The destination string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strcat(char *dest, char *source);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Appends one string to another.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *destThe destination string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *sourceThe string to append.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The concatenated string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strdup(char *source);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a string into a newly-created location.  The new string exists in a buffer that is dynamically allocated by the library function.  It is the Poco program's responsibility to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}free()}{\cf2\f0\fs24\lang1033{\*\listtag0} this buffer when it is no longer needed.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sourceThe string to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The new string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strchr(char *str, int c);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Searches for first occurance of character }{\cf2\f0\fs24\b\lang1033{\*\listtag0}c}{\cf2\f0\fs24\lang1033{\*\listtag0} in string }{\cf2\f0\fs24\b\lang1033{\*\listtag0}str}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This function CAN be used to find the nullterm char at the end of the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *strPointer to the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int  cThe character to find.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:char *Pointer to the character, or NULL if the character is not in the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strrchr(char *str, int c);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Searches for last occurance of character }{\cf2\f0\fs24\b\lang1033{\*\listtag0}c}{\cf2\f0\fs24\lang1033{\*\listtag0} in string }{\cf2\f0\fs24\b\lang1033{\*\listtag0}str}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This function CAN be used to find the nullterm char at the end of the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *strPointer to the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int  cThe character to find.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:char *Pointer to the character, or NULL if the character is not in the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *strstr(char *string, char *substring);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Looks for a substring in a string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *stringThe string to search.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *substringThe substring to look for.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The pointer to the first occurrence of the substring in the string, or NULL if not found.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch char *stristr(char *string, char *substring);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Looks for a substring in a string, without case sensitivity.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *stringThe string to search.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *substringThe substring to look for.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:char*The pointer to the first occurrence of the substring in the string, or NULL if not found.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int atoi(char *str);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Convert a string of ASCII characters ('0'-'9') to its integer value.  Conversion stops when the first non-numeric character is encountered.  If no numeric characters are encountered, the return value will be zero.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *strPointer to the string.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return value:intThe numeric value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:if (2793 == atoi("2793KBYTES"))  // this will be}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    printf("This is true.");      // TRUE!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 15. (C Standard) Memory Manager Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Standard Memory Manager Library provides many of the C standard memory allocation and managment functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *malloc(int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Allocates a block of memory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int sizeThe number of bytes to allocate.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void *The pointer to the memory block allocated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *calloc(int el_count, int size_el);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Allocates a block of memory.  The size will be  }{\cf2\f0\fs24\b\lang1033{\*\listtag0}el_count}{\cf2\f0\fs24\lang1033{\*\listtag0} times }{\cf2\f0\fs24\b\lang1033{\*\listtag0}size_el}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:int el_countThe number of elements to allocate.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int size_elThe size of the elements.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void *The pointer to the memory block allocated.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void free(void *pt);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frees an allocated memory block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *ptThe pointer to the memory block to free.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *memcpy(void *dest, void *source, int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a block of memory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *destThe pointer to the destination block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *sourceThe pointer to the source block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe number of bytes to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void *The pointer to the destination block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *memmove(void *dest, void *source, int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies a block of memory, correctly copying overlapping blocks.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *destThe pointer to the destination block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *sourceThe pointer to the source block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe number of bytes to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void *The pointer to the destination block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int memcmp(void *a, void *b, int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Compares two blocks of memory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *aThe pointer to the first memory block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void *bThe pointer to the second memory block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe number of bytes to compare.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:int< 0 if a is less than b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch = 0 if a equals b}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch > 0 if a is greater than b.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void *memset(void *dest, int source, int size);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets a block of memory to a character.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:void *destThe pointer to a block of memory to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sourceThe character to set the block to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int sizeThe number of bytes to set.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:void *The pointer to the destination block.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 16. (C Standard) Math Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Standard Math Library provides the C standard floating point library functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  acos(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the arc cosine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number from -1 to 1.  If the number is out of range, Poco will give the user a runtime error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number from 0 to pi.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  asin(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the arc sine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number from -1 to 1.  If the number is out of range, Poco will give the user a runtime error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number from -pi/2 to pi/2.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  atan(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the arc tangent of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number from -pi/2 to pi/2.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  atan2(double y, double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the arc tangent of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}y}{\cf2\f0\fs24\lang1033{\*\listtag0}/}{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double yA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number from -pi to pi.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  ceil(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Rounds up from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleThe smallest integer not less than }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  cos(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the cosine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number from -1 to 1.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  cosh(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the hyperbolic cosine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  exp(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the value of e to the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}th power.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  fabs(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the absolute value of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  floor(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Rounds down from }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleThe largest integer not greater than x.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  fmod(double x, double y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0} modulo }{\cf2\f0\fs24\b\lang1033{\*\listtag0}y}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double yA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  log(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the natural logarithm of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number (not less than 0).  If the number is out of range, Poco will give the user a runtime error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number (ln(}{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0})).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  log10(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the base 10 logarithm of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number (not less than 0).  If the number is out of range, Poco will give the user a runtime error.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number (log}{\cf2\f0\fs24\sub\lang1033{\*\listtag0}10}{\cf2\f0\fs24\lang1033{\*\listtag0}(}{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0})).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  pow(double x, double y);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Raises }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0} to the power of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}y}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double yA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\super\lang1033{\*\listtag0}y}{\cf2\f0\fs24\lang1033{\*\listtag0}).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  sin(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the sine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  sinh(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the hyperbolic sine of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  sqrt(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the positive square root of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  tan(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the tangent of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch double  tanh(double x);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Returns the hyperbolic tangent of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}x}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:double xA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:doubleA number.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 17. DOS Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The DOS Library provides functions to access common DOS file manipulations, such as renaming, deleting, and locating files.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode fnsplit(char *path, char *dev, char *dir, char *f, char *suf);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Breaks a filename into its component parts.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *pathThe full name to split (max length 80).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *devThe device name (including the colon) is returned here (max length 3).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *dirThe directory (including all backslashes) is returned here (max length 66).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *fThe filename is returned here (max length 9).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *sufThe file extension (including the period) is returned here (max length 5).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode fnmerge(char *path, char *dev, char *dir, char *f, char *suf);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Reconstructs a filename from its component parts. (See }{\cf2\f0\fs24\b\lang1033{\*\listtag0}fnsplit()}{\cf2\f0\fs24\lang1033{\*\listtag0}, above).  The buffer specified by the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}path}{\cf2\f0\fs24\lang1033{\*\listtag0} parm must be at least PATH_SIZE characters long.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *pathThe reconstructed filename is returned here.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *devThe device name.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *dirThe directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *fThe filename.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *sufThe file extension.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean DosExists(char *filename);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Finds out whether a file exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *filenameThe name of the file to look for.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:BooleanTrue if the file exists, otherwise False.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode DosCopy(char *source, char *dest);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Copies one file to another.  (Deletes any existing destination file.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *sourceThe full name of the file to copy.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *destThe full name of the file to copy to.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode DosDelete(char *filename);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Deletes a file from disk.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *filenameThe name of the file to delete.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode DosRename(char *old, char *new);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Renames a file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *oldThe name of the file to rename.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *newThe new name of the file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode SetDir(char *dir);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Sets the directory for the current drive.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *dirThe new directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GetDir(char *dir);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the directory for the current drive.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *dirThe current directory is returned here.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  (See Appendix A.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch int DirList(char ***list, char *wild, Boolean get_dirs);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets a directory listing of the current path.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char ***listA pointer to an array of strings.  At the end of the function, this value will contain the list of the files in the current directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *wildThe DOS pattern to match (for example, *.FLI).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean get_dirsIf this value is True, directory names will be included in the list;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  otherwise only filenames will be included in the list.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:intThe number of elements in the list (or a negative number if an error was encountered).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* Delete all .bak files */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int count,i;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char **list;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch count = DirList(&list,"*.BAK",FALSE);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch for (i=0;i<count;i++);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DosDelete(list[i]);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FreeDirList(&list);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void FreeDirList(char ***list);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Frees the memory list created by DirList.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char ***listA pointer to a directory list created by }{\cf2\f0\fs24\b\lang1033{\*\listtag0}DirList()}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetResourceDir(char *dir);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets Animator's current resource directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *dirAt the end of the function call, this value will contain the current resource directory.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:None.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetProgramDir(char *dir);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Gets the directory the poco program was loaded from.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *dirAt the end of the function call, this value will contain the directory the program was loaded from.  This is valid for programs started from the command line, from the Poco/Use menu, or from the Poco/Program/Run menu.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 18. Global Variable Library}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Global Variable Library provides functions to save and retrieve string variables that are stored across runs of a Poco program.  This provides a method of inter-process communications between a related set of Poco programs.  It is also useful for saving configuration and preferences information between runs of a given Poco program.  Numeric values can be saved by converting them to a string using the sprintf() function, and can be retrieved by converting the returned string value back into a number using the atoi() function.  Do }{\cf2\f0\fs24\b\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} attempt to save pointers or screen handles with these functions -- they will almost certainly be invalid by the time they are retrieved. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Global variable strings exist in two distinct 'name spaces'.  Variable names which start with a dollar sign ($) character are placed into the }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}permanent}{\cf2\f0\fs24\lang1033{\*\listtag0} name space.  These variables will never be deleted automatically by Animator; they can only be removed by an explicit GlobalVarDelete() command.  Variable names that start with any character other than a dollar sign are placed into the }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}project}{\cf2\f0\fs24\lang1033{\*\listtag0} name space.  These variables exist until the next time the user (or a Poco program) executes a Reset command.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The global variables mechanism was not designed to store large amounts of data (a normal DOS file can be used for that).  All global variables saved by all Poco programs will be loaded at once on the first call to one of the global variable functions.  When the program exits (either normally, or due to an error), all changed variables are saved back to disk.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarSet(char *varname, char *value);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Set a global variable of the specified name to the contents of the value string.  The name is limited to 256 characters, and the value string is limited to 1536 characters (1.5k).  No restrictions are placed on the contents of the name and value strings, any characters may appear in them.  This function will create new global variables or replace the value of existing global variables.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *varnameThis string contains the name of the variable to be stored.  If the first character of the name is '$', the variable is placed into the permanent pool, otherwise it is placed into the project pool.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *valueThis string contains the value to be stored for the variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:This example saves a path name, so that the next time the user works with this Poco program, file selectors can be set to display the same path the user last worked with.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char picpath[PATH_SIZE];}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarSet("$numpic_lastpath", picpath);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarGet(char *varname, char *value);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Retrieves a global variable of the specified name, placing the value associated with the variable into the specified value variable.  The value variable must be allocated large enough to hold the entire value string, or the Poco program will be terminated with a string buffer overflow error. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *varnameThis string contains the name of the variable to be retrived.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char *valueThis string contains the value at the end of the function.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  If the requested variable does not exist, Err_not_found will be returned, and the contents of the value string buffer are not modified.  This allows a default value to be pre-loaded into the value buffer and then overridden with the contents of a global variable if it exists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:This example retrives the path the user worked with when last using this Poco program.  If there is no saved path, the default value supplied in the picpath definition will be used.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char picpath[PATH_SIZE] = "d:\\\\pics\\\\*.gif"; GlobalVarGet("$numpic_lastpath", picpath);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarDelete(char *varname);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Deletes a global variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char *varnameThis string contains the name of the variable to be deleted.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Example:This example deletes two global variables, if they exist.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarDelete("$numpic_lastpath");}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarDelete("pictool_rgboptions");}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarFlush();}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Forces a flush of all changed values back to disk.  Normally, values are automatically flushed after 25 changes and when the program ends.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:none}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarFirst(char **vname, char **vvalue);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Obtains the first variable in the list of all global variables.  Variables are not stored in any preset order.  See also GlobalVarNext(). }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char **vnameA pointer to a pointer to a string variable.  At the end of the function, the variable will contain a pointer to the name of the first global variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char **vvalue A pointer to a pointer to a string variable.  At the end of the function, the variable will contain a pointer to the value of the first global variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch ErrCode GlobalVarNext(char **vname, char **vvalue);}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Function:Obtains the next variable in the list of all global variables.  Variables are not stored in any preset order.  This must be called after a call to GlobalVarFirst(), or results are unpredictable.  Also, no modifications may be made to global variables (eg, Set()/Delete()/Flush()) between calls to GlobalVarNext(), or results will be unpredictable.  Typical usage would be to call GlobalVarFirst(), followed by calls to GlobalVarNext(), saving the pointers returned by each call, until Err_not_found is returned (indicating the end of the list).  Once all the pointers have been obtained, the variables in the list may be displayed, manipulated, etc.  The strings pointed to by the returned pointers from this function may NOT be modified directly!  To modify a variable found in the list, a GlobalVarSet() call must be made, as usual.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Parameters:char **vnameA pointer to a pointer to a string variable.  At the end of the function, the variable will contain a pointer to the name of the first global variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char **vvalue A pointer to a pointer to a string variable.  At the end of the function, the variable will contain a pointer to the value of the first global variable.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Return Value:ErrCode0 on Success, or a negative error code.  Returns Err_not_found upon reaching the end of the list. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix A: Poco Error Codes and Messages}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. General Error Messages}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Success \~0}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_nogood -1"ERROR!" (something generally went wrong)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_memory -2"Out of memory."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_input -3"Bad input data."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_format -4"Bad data format."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_vram -5"Out of video display memory."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_stack -6"Out of stack space."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_reported -7(error has already been reported to user)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_unimpl -8"Feature unimplemented."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_overflow -9"Data overflow for size of result."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_not_found-10"Object not found."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_magic-11"Bad magic id number on data or record."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_abort-12(user abort request)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_timeout-13"Function waiting timed out."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_wrong_res-14"Can't deal with object of this dimension."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_too_big-15"Object too big to handle."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_version-16"Correct file type but wrong version."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_record-17"Record data is corrupted."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_uninit-18"Subsystem not initialized."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_wrong_type-19"Object is not right type."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_spline_points-20"Too many points in spline."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_user_lock-21"File only accessible to authorized users."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_pic_unknown-23"Unrecognized picture file format."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. System errors}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_stdio-50"Error in stdio routine."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Rex Errors}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_not_rex-75"Driver isn't REX relocatable executable.  Not a driver."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_not_rexlib-76"Driver is REX but not a PJ library driver."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_rexlib_type-77"Driver is wrong library type."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_host_library-78"Missing host provided library."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_library_version-79"Wrong host provided library type or version."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_rexlib_usertype-80"User type REX library id_string doesn't match."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. I/O and file errors}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_file-100"File doesn't exist. (File name misspelled?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_path-101"Path not found."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_device-102"Device doesn't exist."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_write-103"Write error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_read-104"Read error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_seek-105"Seek error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_eof-106"End of file."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_in_use-107"File in use."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_extant-108"File already exists."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_create-109"Couldn't create file."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_truncated-110"File truncated."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_corrupted-111"File corrupted."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_space-112"Out of space on device."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_disabled-113"The device, window or file is disabled."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_invalid_id-114"Invalid id value." }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_not_open-115"File is not open."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_suffix-116"Unknown file suffix."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_too_many_files-117"Too many open files.  (Set FILES in config.sys to something higher?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_access-118"Access denied.  (File read only?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_sys_mem_bad-119"MS-DOS system tables damaged.  (Reboot time?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_env-120"Bad environment block.  Suggest you reboot."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_address-121"Bad address to DOS.  (Internal error)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_disk_format-122"Unrecognized disk format."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_access-123"Invalid file access code. (Internal error)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_data-124"Invalid data to DOS. (Internal error)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_more_files-125"No more files."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_write_protected-126"Disk is write protected"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_disk_not_ready-127"Disk drive not ready. (No disk in drive or door open?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_not_dos_disk-128"Not a DOS disk."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_disk_data-129"Disk data error sorry."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_sector-130"Disk sector not found."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_paper-131"Printer out of paper."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_general_failure-132"MS-DOS general failure."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_critical-133"Critical error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_network-134"General network failure."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_share-135"File sharing error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_lock-136"File lock error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_disk_change-137"Invalid disk  change."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_remote-138"Remote computer not listening."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_network_busy-139"Network busy."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_share_pause-140"Sharing temporarily paused."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_redirect_pause-141"File/printer redirection paused."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_directory_entry-142"Can't create directory entry."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_dir_too_long-143"Directory name too big for MS-DOS."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_dir_name_err-144"Directory name malformed."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_file_name_err-145"File name malformed. (Extra . ?)"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_temp_devs-146"Temp file path doesn't have any valid devices." }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_macrosync-147"Input macro out of syncronization." }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_record-148"Data record not found." }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_end_of_record-149"End of data record." }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. Video driver subsystem errors}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_rast_type-200"Invalid raster type for operation."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_display-201"Display hardware not found or invalid."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_clipped-202"Blit clipped out entirely."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_8514-203"8514/a adapter not found."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_such_mode -207"Asking for a mode that isn't there."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_isopen-208"Driver is already open can't open again."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_driver_protocol-209"Driver behaving irrationally."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_pdepth_not_avail}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -210"Requested pixel depth not available."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_aspect_not_disp-211"Aspect ratio not displayable."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Poco subsystem errors}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_stack-402"Out of stack space"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_bad_instruction-403"Illegal instruction in poco interpreter."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_syntax-404"C syntax error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_poco_internal-405"compiler failed self-check."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_in_err_file-407"See poco.err for more info on error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_null_ref-408"Attempting to use a NULL pointer."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_no_main-410"No main() routine."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_zero_divide-411"Attempt to divide by zero."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_float-412"float/double error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_invalid_FILE-413"Using a FILE that's not fopen()'ed."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_index_small-414"Array index or pointer less than array start."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_index_big-415"Array index or pointer greater than array end."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_poco_free-416"bad free() attempt."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_free_null-417"free(NULL) error."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_free_resources-418"program corrupted system resources."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_zero_malloc-419"trying to allocate less than 1 byte."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_string-420"string too big to fit in buffer."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_fread_buf-421"buffer too small for fread."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_fwrite_buf-422"buffer too small for fwrite."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_buf_too_small-423"buffer not big enough."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_parameter_range-424"parameter with invalid value."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_early_exit-425(program wanted quiet return to DOS)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_too_few_params-426"too few parameters to function."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Err_function_not_found}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -427"function not found."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-2577\ri417\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix B: Poco Header Files}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. OPTICS.H}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef OPTICS_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define OPTICS_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct xyzPoint }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* Three dimensional point */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch double x,y,z;/* pixel coordinates */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} XyzPoint;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct optPos}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* An element of an optics move.  One of these generated for each }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch    Continue-Move menu press or OptContinue() poco call. */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch XyzPoint move;/* offset for straight move */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch XyzPoint spin_center;/* center point of spin in pixels */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch XyzPoint spin_axis;/* a line from 0,0,0 to here defines spin           axis*/}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch XyzPoint spin_angle;/* spins about 3 axis.  In degrees */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch XyzPoint size_center;/* center point of scaling in pixels */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch long xp, xq;/* xscaling factor.  newx = oldx*xp/xq */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch long yp, yq;/* yscaling factor.  newy = oldy*yp/yq */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch long bp, bq;/* both scale.  Applied after x and y scale */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} OptPos;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct optState}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* Contains all the motion information for an optics transformation */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int pos_count;/* Number of OptPos's */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptPos *pos;/* Info on all the optics sliders. */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int path_count;/* Points in the optics path (0 if no path) */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *xpath;/* X coordinates of path */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch int *ypath;/* Y coordinates of path */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char path_type;/* one of PATH_ defines below */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean path_closed;/* is movement path closed? */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean outlined;/* is element outlined? */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char element;/* one of EL_ defines below */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} OptState;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* values for OptState->path_type */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define PATH_SPLINE0}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define PATH_POLY1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define PATH_SAMPLED2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define PATH_CLOCKED3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* values for OptState->element */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define EL_SCREEN0}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define EL_THECEL1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define EL_POLY2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define EL_SPLINE3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define EL_TWEEN4}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif /* OPTICS_H */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. CTYPE.H}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /****************************************************************************}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * CTYPE.HCharacter classification and conversion}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *This header file is coded such that it gives better}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *performance than the CTYPE.H file that comes with most C}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *compilers, mainly by eliminating an addition operation for}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *each use of an iswhatever(c) function. (Most CTYPE systems}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *use [c+1] to handle EOF, we handle it better.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *This file also provides a 'roll your own' typing function,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *'isctype()'.  This macro allows testing of any arbitrary}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *combo of types.  For example, to check whether a character}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *is either space or punctuation, code 'isctype(c, _CTp|_CTs)'.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *To use this file with non-Poco compilers, it is necessary to}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *define the symbol GENERATE_CTYPE_TABLE (before the #include }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *for this file) in at least one of the modules that uses this}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *file.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * 10/30/90 -Ported to poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * 11/22/90 -Tested extensively, fixed a couple typos causing wrong  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *results.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *Also, added a couple #ifdef sections so that this file will}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *work with any compiler, not just poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  ***************************************************************************/}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef CTYPE_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define CTYPE_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTYPE_H_INCLUDED/* for Watcom */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #if defined(__POCO__) || defined(GENERATE_CTYPE_TABLE)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch signed char ___pctype[257] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-3297\ri-590\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x00, /* EOF */}
\sect\sectd\sbknone\colsx360\headery0\footery0\pgncont\ltrsect
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x80, 0x90, 0x90, 0x90, 0x90, 0x90, 0x80, 0x80,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x10, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x42, 0x42, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x20, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x04,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x04, 0x04, 0x04, 0x20, 0x20, 0x20, 0x20, 0x21,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x20, 0x48, 0x48, 0x48, 0x48, 0x48, 0x48, 0x08,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 0x08, 0x08, 0x08, 0x20, 0x20, 0x20, 0x20, 0x80,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch signed char *__pctype = &___pctype[1];}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #else}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch extern signed char *__pctype;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif /* __POCO__ or GENERATE_CTYPE_TABLE */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTb0x0001 /* underbar, used by iscsym() */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTd0x0002 /* numeric digit */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTu0x0004 /* upper case */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTl0x0008 /* lower case */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTs0x0010 /* whitespace */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTp0x0020 /* punctuation */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTx0x0040 /* hexadecimal */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _CTc0x0080 /* control character */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #undef  _toupper}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #undef  _tolower}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #undef  toascii}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _toupper(c)  ((c)&0xFFDF)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define _tolower(c)  ((c)|0x0020)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define toascii(c)   ((c)&0x7F)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isascii(c)(!((c)&0x0080))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isalnum(c)(__pctype[(c)]&(_CTu|_CTl|_CTd))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isalpha(c)(__pctype[(c)]&(_CTu|_CTl))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define iscntrl(c)(__pctype[(c)]&_CTc)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isdigit(c)(__pctype[(c)]&_CTd)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isgraph(c)(__pctype[(c)]&(_CTd|_CTu|_CTl|_CTp))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define islower(c)(__pctype[(c)]&_CTl)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isprint(c)(__pctype[(c)]>0)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define ispunct(c)(__pctype[(c)]&_CTp)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isspace(c)(__pctype[(c)]&_CTs)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isupper(c)(__pctype[(c)]&_CTu)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isxdigit(c)(__pctype[(c)]&_CTx)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define iscsym(c)(__pctype[(c)]&(_CTu|_CTl|_CTb|_CTd))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define iscsymf(c)(__pctype[(c)]&(_CTu|_CTl|_CTb))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define isctype(c,t)(__pctype[(c)]&(t)) /* roll your own combo */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #if defined(__POCO__) || defined(GENERATE_CTYPE_TABLE)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   int toupper(int c) \{if (islower(c)) return c&0xFFDF; else return c;\}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   int tolower(int c) \{if (isupper(c)) return c|0x0020; else return c;\}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #else}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   extern int toupper(int);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   extern int tolower(int);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. LIMITS.H}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /****************************************************************************   * LIMITS.HCompiler datatype limits for Poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *Note that because Poco currently lacks full support for }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *unsigned datatypes, unsigned MAX values are the same as  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *the signed MAX values.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * 11/22/90Created.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  ***************************************************************************/}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef __POCO__}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #error This LIMITS.H file is for use with POCO C only!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef LIMITS_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define LIMITS_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define MB_LEN_MAX1}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define CHAR_BITS8}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define CHAR_MAX127}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define CHAR_MIN(-128)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define SCHAR_MAX127}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define SCHAR_MIN(-128)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define UCHAR_MAX127}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define SHRT_MAX32767 }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define SHRT_MIN(-32768)          }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define USHRT_MAX32767  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define INT_MAX2147483647}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define INT_MIN(-2147483648)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define UINT_MAX2147483647}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define LONG_MAX2147483647}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define LONG_MIN(-2147483648)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define ULONG_MAX2147483647}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. STDDEF.H}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /****************************************************************************}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * STDDEF.HStandard type definitions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *Note a little strangeness in the offsetof() macro...We have}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *to use a cast of NULL rather than the typical cast of 0, and}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *we have to subtract the resulting member pointer from NULL.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *All of this is because Poco won't allow pointer/number casts.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  *}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  * 11/22/90Created for Poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  ****************************************************************************/}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef STDDEF_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define STDDEF_H}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #ifndef __POCO__}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #error This STDDEF.H file is for use with Poco C only!}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef longptrdiff_t;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef longsize_t;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef charwchar_t;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define offsetof(struc, mbr)  (size_t)( (char *)(&(((struc *)\\}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch NULL)->mbr))-(char *)NULL )}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\li-720\ri-1008\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #endif}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Appendix C: Adding new library functions to Poco}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 1. Overview}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When the Poco interpreter does not provide the horsepower or flexibility you need, you can add libraries of custom functions to the Poco programming environment.  These functions are written and compiled outside the Poco/Animator environment and execute at full 80386 machine speed.  These libraries are referred to as }{\cf2\f0\fs24\b\lang1033{\*\listtag0}POE}{\cf2\f0\fs24\lang1033{\*\listtag0} (}{\cf2\f0\fs24\b\lang1033{\*\listtag0}PO}{\cf2\f0\fs24\lang1033{\*\listtag0}co }{\cf2\f0\fs24\b\lang1033{\*\listtag0}E}{\cf2\f0\fs24\lang1033{\*\listtag0}xecutable) modules.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module contains one or more functions which may be called from within a Poco program.  A POE module may contain several utility functions provided to speed up a Poco program.  Alternately, it may contain a fully-functional application with a single entry point from a small Poco program that exists only to transfer control into the POE module.  In addition to providing functions that can be called from a Poco program, the functions within a POE module have full access to the Poco built in libraries.  (Calling the built in library functions from a POE function can be slightly more complicated than the equivalent call from a Poco program).}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module can be developed using one of the commercially available 386 Protected Mode development tools.  Among these are Watcom C/386, MetaWare High C, and the Phar Lap 386 Assembler and Linker.  In general, any 386 development system can be used, provided that it can create Phar Lap-compatible }{\cf2\f0\fs24\b\lang1033{\*\listtag0}REX}{\cf2\f0\fs24\lang1033{\*\listtag0} modules, and that it adheres to the High C/Watcom "-3s" function calling standard.  This document discusses POE development in the context of the C language; equivalent techniques can be used in other languages but the support environment (header files, etc.) does not currently exist for languages other than C.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 2. Setting up the POE interfaces}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch There are two layers of interface required to establish the connection between your POE functions and a Poco program.  The REX/Host interface handles the details of loading and unloading POE modules and making host services (including the Poco built in libraries) available to the POE functions.  The Pocolib interface provides information to Poco about the functions your POE module provides.  Setting up these interfaces consists of including specific header files in your C code and coding several macros and data structures.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Pocolib interface layer consists primarily of an array of Lib_proto structures which is allocated and statically initialized within the POE module.  Each element in the array provides to Poco a prototype of a POE function and a pointer to}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  that function.  The Lib_proto structure type is defined in POCOLIB.H, a header file which much be included in all POE modules.  It is defined as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct lib_proto \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void*func;/* ptr to function in POE module */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char*proto;/* prototype visible to Poco programs */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Lib_proto;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch If a POE module contains two functions visible to a Poco program the array might be coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto calls[] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{func1,"void SpecialFunction(int a, double b);"\},}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{func2,"int  MundaneFunction(void);"\},}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The prototype lines must be syntactically correct Poco source code lines including semicolons at the end of each prototype.  When the Poco compiler encounters a #pragma poco library statement, it loads the named POE module and each of the prototype lines in the array of Lib_proto structures is processed through the Poco compiler just as if it had appeared in the Poco program source code.  Comments are NOT allowed in the prototype strings.  The strings are NOT subject to macro expansion.  (Note that the above example doesn't include any pointer parameters or pointer return values.  Pointers require special handling in the Poco<->POE interface and are discussed in detail in a later section of this document.)  Once the entry points and corresponding prototypes have been coded, a pointer to the array of Lib_proto's is passed to Poco as a component of the REX interface layer, discussed below.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The details of REX/Host interface layer are largely transparent to the POE developer.  Setting up the interface requires including several header files, coding a series of #define statements naming the host-provided-services libraries needed by the POE module, and coding a Setup_Pocorex() macro with the appropriate parameters.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE modules cannot be linked with a standard C runtime library because runtime libraries are generally not compatible with the Phar Lap REX module format.  To alleviate this problem, Animator provides several libraries of functions that fill the basic needs which are usually serviced by a C compiler's runtime library.  It also supplies libraries containing Animator-specific functions, including the entire contents of the Poco builtin libraries.  Each of these host libraries has an associated C header file which must be #include'd in the POE module.  Some of the libraries also have an associated .LIB file required at link}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  time.  Each library has a formal name which helps keep the REX interface layer "behind the scenes" and simplifies setting up POE modules.  The following list describes the host libraries available and the associated support files:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch NameHeaderLink LIBFunctionality}{\cf2\f0\fs24\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_SYSLIBSYSLIB.HAASYSLIB.LIBMemory management, string utils.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_STDIOLIBSTDIOLIB.HSTDIOLIB.LIBStandard C I/O functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_GFXLIBGFX.HGFXLIB.LIBGraphics drawing functions, etc.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_POCOLIBPOCOLIB.H(none)All Poco built in functions.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA_MATHLIBMATHLIB.HAAMTHLIB.LIBFloating point support.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch A POE module may include initialization and cleanup routines which are automatically executed by Animator when the library is loaded and unloaded. When such routines are needed they are named in the Setup_Pocorex() macro. The init routine will be executed immediately after the POE module is loaded, before the Poco compiler begins to process the prototype lines.  The cleanup routine is executed just before the POE module is unloaded.  This may be in the context of a normal exit from a Poco program or because the Poco program is being terminated due to an internally-detected error.  The init and cleanup routines may use  host-provided library functions from any of the libraries listed above.  When a POE module provides functions to a Poco program that include the acquiring of dynamic resources (memory or file handles, primarily), it is recommended that a cleanup routine be supplied to free those resources in case the Poco program neglects to do so explicitly.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting up the REX interface layer in a POE module consists of the following steps which must appear in this order in the POE source code:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Code #include statements for each of the header files that correspond to the host libraries required by the POE module.  In addition, code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include "POCOREX.H"}{\cf2\f0\fs24\lang1033{\*\listtag0}.  (Note that POCOREX.H will cause automatic inclusion of POCOLIB.H if it has not been included already.)  If your POE module requires any custom header files of your own include them at this point.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Indicate which host libraries are required by coding a #define statement for each:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_1 AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_2 AA_GFXLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_3 AA_POCOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}HLIB_TYPE_n}{\cf2\f0\fs24\lang1033{\*\listtag0} macros must be coded exactly as shown; each must end in a single numeric digit.  The numbering must start at 1 and be sequential with no gaps in the numeric sequence.  The names assigned to each must be one of the names from the above list of available libraries.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}#include "hliblist.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This statement must follow the #define statements that name the requested host libraries.  The HLIBLIST.H file builds a linked list of structures based on the requested libraries. This linked list is used by the Setup_Pocorex() macro to inform the host of which libraries must be made available when the POE module is loaded.  Note that it is possible (although it seems unlikely) to write a POE module which does not require any host-provided library services.  In this case, do not code any #define HLIB_TYPE_n statements and do not include HLIBLIST.H.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Your C source code appears at this point in the POE source module.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Code the array of Lib_proto structures that describes the Poco->POE entry points.  Assuming a single entry point:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   Lib_proto mycalls[] = \{\{poe_entry, "void PoeMain(void);"\}\};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note that even though a single function is being set up it must be declared as an array (containing one element) for the Setup_Pocorex() macro to work correctly.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -Code the Setup_Pocorex() macro.  This macro requires four parameters:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch - A pointer to the (optional) init routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch - A pointer to the (optional) cleanup routine.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch - A pointer to a string; the name of the POE library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch - A pointer to the array of Lib_proto structures.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Assuming the POE module has no init or cleanup routines, the macro might be coded as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setup_Pocorex(NULL, NULL, "My POE Functions", mycalls);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note that the name string is used as part of the cross-POE calling facility.  While there are no formal limits on the length or contents of the name string, it is recommended that the name be at least 8 characters long and no more than about 20 characters.  No formal standard is imposed to prevent naming conflicts between different POE modules.  It should be rare that any two POE modules have identical names; if it were to occur, it would }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}not}{\cf2\f0\fs24\lang1033{\*\listtag0} prevent both modules from being used simultaneously by the same Poco program.  It would, however, remove the ability to make cross-POE calls between the two libraries.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 3. Skeleton POE module}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The following is an example of a skeleton POE source code module that can be used as a starting point in developing your own POE modules.  The example shows the inclusion of several host libraries for illustrative purposes; no host library functions are actually used in the skeleton code.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "pocorex.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "stdiolib.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "gfx.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_1 AA_POCOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_2 AA_SYSLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #define HLIB_TYPE_3 AA_STDIOLIB}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #include "hliblist.h"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* at this point, the function(s) provided by this POE module */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* would be coded.  Assume one (fairly pointless) function...*/}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean flipit(Boolean original)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return !original;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* interface details follow... */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto libcalls[] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{flipit, "Boolean Complement(Boolean current_value);"\},}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setup_Pocorex(NULL, NULL, "POE Skeleton", libcalls);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* end of source code */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 4. System Integrity and Handling Poco Protected Pointers }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The Poco built in library functions contain extensive "sanity" checking of the arguments passed in by the Poco program.  This helps prevent the possibility of an erroneous Poco program crashing Animator.  The functions within a POE module are essentially an extension of the built in libraries.  As such, they are expected to do the same sort of error checking.  This section will discuss some of the techniques involved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Within Animator is a global variable, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}builtin_err}{\cf2\f0\fs24\lang1033{\*\listtag0}.  The Poco virtual machine checks this variable after every function call; if an error has occurred (builtin_err != 0), the Poco program is}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  terminated and the error is reported to the user.  When a library routine detects an error, it sets builtin_err to the appropriate Errcode value and returns.  POE modules also have access to the global builtin_err variable.  The access is via a pointer in the REX interface layer but POCOLIB.H defines a macro which hides the indirection, allowing it to be coded simply as builtin_err in the POE source code.  When a POE function detects an error serious enough to warrant immediately stopping the Poco program (such as an invalid pointer), it must store the appropriate error code (e.g., Err_null_ref, Err_parameter_range, etc.) into builtin_err and return control to Poco.  It does not matter what function return value is returned to the Poco caller when builtin_err has been set because the Poco program will be terminated before executing another virtual-machine instruction.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch One of largest aspects of integrity checking is the special handling given to pointers in Poco.  In Poco C source code, pointers are declared and used just as they are in standard C.  Internally, the pointers are maintained as a 12-byte value, referred to as a Poco Protected Pointer.  These 12-byte values are mapped by a structure defined in POCOLIB.H as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch typedef struct popot \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void*pt;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void   *min;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void*max;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \} Popot;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The difference between Poco protected pointers and standard C pointers becomes visible when they are passed back and forth between Poco and library or POE functions.  Consider the following POE function and the prototype that is presented to Poco to describe that function:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot strscan(Popot str1, Popot str2)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* functional code */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Lib_proto mycalls[] = \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \{strscan,"char *StrScan(char *str1, char *str2);"\},}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \};}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The picture presented to Poco in the prototype indicates that two string pointers will be passed as parameters and a string pointer will be returned by the function.  In the POE code, Popot structures are declared because when Poco makes a call to a library function it will stack the entire 12-byte Popot structure for each pointer.  Similarly, a 12-byte structure is expected by Poco as a return value.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a Popot is a pointer to a scalar item (e.g., a pointer to a single char, int, long, double, etc.), the min and max fields will often equal the pt field.  When a Popot points to an array or a dynamically allocated block of memory, the min and max fields will be pointers to the first and last bytes of the array or memory block, respectively.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a Popot pointer is passed as an argument to a POE function, the function is expected to make the following checks:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component must be verified as non-NULL before it is dereferenced.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -If it is a pointer to an array (including a character array, i.e., a string), }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} must point somewhere in the range of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0}\~<=\~}{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0}\~<= }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -If it is a pointer to an array/string into which the POE function will return a value, the function must verify that enough room exists between }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} to hold the return value. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a Popot pointer is returned from a POE function, it should be constructed as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -When appropriate, copy the Popot from the input arguments and modify the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} component.  For example, a function which receives a pointer to a string and returns a pointer to a character within the string should copy the input Popot to the return value Popot, then set }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} in the return value to point to the character.  This will preserve the proper min and max values for the returned pointer.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -When a NULL pointer is being returned, all three components may be set to NULL or min and max may be preserved.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch -When returning a Popot pointer which is not based upon any input argument (e.g., a pointer to a data area belonging to the POE module, perhaps), set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}min}{\cf2\f0\fs24\lang1033{\*\listtag0} components to point to the value and set the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}max}{\cf2\f0\fs24\lang1033{\*\listtag0} component to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}pt+sizeof(value)}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Several macros and utility functions are available to POE modules to help manage Popot pointers.  These are documented below in the section }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}Special functions available to POE modules}{\cf2\f0\fs24\lang1033{\*\listtag0}.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 5. POE functions that accept variable argument lists }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch There is one situation in which Poco will not pass the full 12-byte Popot structure to a library routine:  when a pointer parameter is passed as part of a variable argument list.  For an}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  example of this, consider the printf() function as it might be prototyped in a POE module and the prototype Poco sees for it:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   void do_printf(Popot fmt, ...);/* proto in POE */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   void printf(char *fmt, ...);/* proto in Poco */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   printf("%s, %d", "A string", 2);/* as used in Poco */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Because the first argument (fmt) is fixed, it must be declared as a Popot structure.  However, the pointer which appears in the variable part of the args in a call to printf() (the Popot which describes "A string") is converted to a standard 4-byte C pointer before it is stacked.  This somewhat simplifies the task for a POE module which accepts a variable number of arguments since all values on the stack in the variable part of the argument list will be normal C values, not Popot pointers.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The example POE do_printf() prototype above is not quite complete.  When a POE function is coded to handle a variable number of arguments (i.e., when "..." is the last argument in the prototype given to Poco), the first two arguments to the POE function are the count of values stacked and the total number of bytes stacked.  Thus, a more complete example of the POE prototype would be:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void do_printf(long argc, long argl, Popot fmt, ...);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The prototype string presented to Poco would not change; the stacking of the arg count and length is a transparent process from the Poco program's point of view.  The arg count and length values are provided to the POE function to assist in checking that the proper number and type of arguments were passed in the variable part of the list.  (The nature of this checking, however, is necessarily dependent on the nature of the POE function.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 6. Special functions available to POE modules }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In addition to the functions provided by the host libraries, there are several special functions available to POE modules.  Two of these are macros which expand to in-line C code, the rest are functions accessed via indirect call.  For the indirect-call functions, macros have been defined to eliminate the tedious typing of coding indirect calls (see POCOLIB.H for details). }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot_bufsize(Popot *ppt)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro evaluates to the integer value of how many bytes are available between pt and max in the memory area described by ppt.  It is useful when returning a string to Poco via a pointer:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   Errcode somefunc(Popot retstr)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   \{}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char result[128];}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* generate result string somehow */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if (retstr.pt == NULL)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return builtin_err = Err_null_ref;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if (Popot_bufsize(&retstr) < 1+strlen(result))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return builtin_err = Err_string;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch else}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcpy(retstr.pt, result);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return Success;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode Popot_bufcheck(Popot *ppt, int size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This macro checks a Popot pointer to ensure that the pointer component is not NULL and that the specified number of bytes is available between pt and max.  It sets builtin_err to reflect the result of the testing; either Success, Err_null_ref, or Err_buf_too_small will be placed into builtin_err.  The above example might have been coded as:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch /* generate result string somehow */}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch if (Success != Popot_bufcheck(&retstr, 1+sizeof(result)))}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch return builtin_err;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch else}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcpy(retstr.pt, result);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note that this macro always modifies builtin_err, which implies that there is a slight performance degradation in trade for the convenience of checking both size and NULLness with one macro.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot ptr2ppt(void *pt, int size)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function converts a pointer and size to a Popot pointer. The value returned by this function can be assigned to a Popot structure or passed to another function directly, as in the following example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch char string[20];}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch poeQstring(ptr2ppt(string,sizeof(string)), }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch         sizeof(string),}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch         ptr2ppt("Please enter a string:",0));}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note in this call to the built in library Qstring function that the Popot passed for the return-value string includes the size of the string buffer.  The Popot passed for the prompt string has a dummy size value of zero.  This is consistent with the error checking rules specified earlier for library routines:  a string pointer used as an input parameter need only point into}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  the range delimited by min and max.  With a size of zero, pt, min, and max will all be equal, and the test will succeed.  A Popot for a string into which a result will be returned (as in the case of }{\cf2\f0\fs24\b\lang1033{\*\listtag0}string}{\cf2\f0\fs24\lang1033{\*\listtag0}, above) must have a max value which indicates the actual end of the string buffer to prevent spurious buffer overflow errors in the library routines, so the true size of the array must be included in that ptr2ppt() call.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void *ppt2ptr(Popot ppt)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function converts a Popot to a standard C pointer, }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}without doing any error checking on the Popot}{\cf2\f0\fs24\lang1033{\*\listtag0}.  It is useful primarily in converting the return value from a Poco built in library function call to a standard C pointer, as follows:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rcel *screen;}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch screen = ppt2ptr(poeGetSwapScreen());}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch In the example, the Popot returned by the built in library routine GetSwapScreen() can be assumed to have legal min and max values so they are basically discarded and only the pt value}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch is retained.  (Built in library routines will always generate valid Popot values when the pt component is non-NULL.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Rcel *GetPicScreen(void)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function will return a pointer to the current graphics screen.  It is functionally equivalent to the poeGetPicScreen() function, except that it returns a C pointer instead of a Popot.  The pointer that is returned by this function is required by most drawing functions in the GFX library.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch int FindPoe(char *name, Lib_proto **plib)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function can be used to locate another loaded POE module.  For it to be effective, the Poco program which loaded the current POE module must also have loaded other POE modules.  (i.e., this function does not search for POE modules on disk and cause them to be loaded.)  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}name}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter is compared (case insensitive) to the names of all loaded POE modules.  If a match is found a pointer to the POE's Lib_proto array is returned in *plib and the count of functions in that array is returned.  If the named POE module is not found, Err_not_found will be returned.  Once the Lib_proto array for another POE module has been located with this function, cross-POE function calls can be made via indirect calls.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch void GetMenuColors(int *idx, Rgb3 **lastrgbs, Rgb3 **ideals);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function returns information about the menu colors used by Animator.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}idx}{\cf2\f0\fs24\lang1033{\*\listtag0} parameter is a pointer to an array of five integers into which the current color index values will be returned.  (The five indicies are the color map slots that the current menu colors are using.) The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}lastrgbs}{\cf2\f0\fs24\lang1033{\*\listtag0} and }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ideals}{\cf2\f0\fs24\lang1033{\*\listtag0} parameters are pointers to pointers to Rgb3 structures.  Upon return from this function, the specified variables will point to an array of five Rgb3 elements.  The lastrgbs are the menu colors the user last saw.  The ideals are the menu colors the user prefers.  The lastrgb values may not equal the ideal values if the current color map doesn't include the exact colors the user prefers; in this case, the lastrgb values are the closest match.  Any of the parameters may be NULL, to signal that the corresponding return value is not needed by the caller.  This function is primarily useful for ensuring the user's favorite colors are present when building a new color palette. }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode Overtime(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function is the POE equivalent to the OverTime function in the Poco built in libraries.  The OverTime function from the standard Poco built in libraries is not available to POE modules (i.e., there is no poeOverTime() macro providing a call to the standard library entry point).  This is because that would cause a jump back into the Poco code rather than calling the specified POE routine to render the desired effect over time.  The }{\cf2\f0\fs24\b\lang1033{\*\listtag0}OTFunc}{\cf2\f0\fs24\lang1033{\*\listtag0} data type is defined in POCOLIB.H.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode OverSegment(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function is the POE equivalent to the OverSegment function in the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Errcode OverAll(OTFunc *effect, void *data)}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function is the POE equivalent to the OverAll function in the Poco built in libraries.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch Boolean CheckAbort(void *dummy);}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This function will detect whether the user is trying to abort the Poco program (is holding down the right mouse button or a key).  If so, the user will be prompted with the standard Abort? YES/NO dialog.  If the user selects YES, this function will return TRUE.  When an abort is requested and confirmed by the user, the POE module should set builtin_err to Err_abort, and return to the poco interpreter as quickly as possible.  No further instructions will be executed by the interpreter upon return from the POE}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  module.  If the poco program has specified an abort handler routine, it will be executed }{\cf2\f0\fs24\b\lang1033{\*\listtag0}before}{\cf2\f0\fs24\lang1033{\*\listtag0} the CheckAbort() routine returns to the POE module.  (Yes, the poco interpreter is reentrant.  Be careful of this, it is possible that the abort handler in the poco program could try to re-enter the POE module at any of the POE module's entry points. It is the POE module's responsibility to handle this without crashing.)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 7. Using the Poco Built in Library Functions }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Note that when the terms }{\cf2\f0\fs24\b\lang1033{\*\listtag0}built in library}{\cf2\f0\fs24\lang1033{\*\listtag0}, }{\cf2\f0\fs24\b\lang1033{\*\listtag0}built in function}{\cf2\f0\fs24\lang1033{\*\listtag0}, etc. are used in this section of the document they refer specifically to the functions documented in Chapter 4; that is, the functions available to a Poco program.  When the term }{\cf2\f0\fs24\b\lang1033{\*\listtag0}host library function}{\cf2\f0\fs24\lang1033{\*\listtag0} is used, it refers to functions from the host provided libraries }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}other than}{\cf2\f0\fs24\lang1033{\*\listtag0} AA_POCOLIB.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Most of the functions in the Poco built in libraries are accessible to a POE module via indirect function calls.  Several of the built in libraries have not been made accessible because other host libraries more appropriately service the need.  (For example, it makes more sense to call strcpy() from the AA_SYSLIB library than to call poestrcpy() with the associated conversions between C and Popot pointer types.)  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch To simplify the coding of POE modules which call built in library functions, macros have been coded which will evaluate to the indirect calling code for the built in functions.  These macros are defined in POCOLIB.H.  To call a built in function of a given name, simply preface the Poco built in function name with }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poe}{\cf2\f0\fs24\lang1033{\*\listtag0}.  Thus, to call }{\cf2\f0\fs24\b\lang1033{\*\listtag0}ResizeReset}{\cf2\f0\fs24\lang1033{\*\listtag0}(), code }{\cf2\f0\fs24\b\lang1033{\*\listtag0}poeResizeReset}{\cf2\f0\fs24\lang1033{\*\listtag0}().  By way of example, the poeResizeReset macro expands to the hieroglyph:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ((Porexlib *)_a_a_pocolib.next)->plmisc->plResizeReset}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When a POE function makes a call to a Poco built in library function, that library function believes that the caller is a Poco program.  For this reason, POE modules must "fool" the library routines by passing parameters the same way the Poco virtual machine does and in general by behaving as a Poco program would.  With the exception of pointers, the Poco virtual machine's data types and argument/return-value mechanisms are the same as the High C/Watcom "-3s" standard.  Handling of pointers as Popot values is discussed in its own section, above.  }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch   When a POE function makes a call to a built in library function that accepts a variable argument list, it must pass the count and length values to the built in function in the same way the Poco}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page  virtual machine does.  For example, a call to the built in printf() routine might be coded as:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch poeprintf(4,2*sizeof(int)+2*sizeof(char *),}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch             ptr2ppt("%s=%d, %s=%d",0),}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  "Variable 1", 99,}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch  "Variable 2", 999);}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This example call indicates to the library function that four arguments are being passed in the variable part of the argument list and that the total number of bytes stacked are two times the size of an integer plus two times the size of a string pointer.  Note the format string (the fixed argument) is passed as a Popot value but the other string pointers (which are not fixed) are passed as standard C pointers.  This technique, tedious though it may be, is required for all built in library functions with variable argument lists.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The remaining issue in using the built in library routines is the builtin_err variable.  The earlier discussion of system integrity issues described how a POE module must perform error checking and set the builtin_err variable appropriately.  While a bad status set in builtin_err will cause the Poco virtual machine to shut itself down automatically, a POE module must simulate this behavior manually.  Thus, it is imperative that the value of builtin_err be checked explicitly after every call to a built in library function.  Any built in function can potentially set builtin_err; there are no "safe" calls that "cannot fail."}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch The safest thing for a POE function to do when it detects a non-zero value in builtin_err after calling a built in library function is to return as quickly as possible to the calling routine in the Poco program.  Since no setjmp/longjmp facility is available to POE modules, this may involve tediously returning a bad status code through many levels of function calls within the POE code to the entry point routine.  If the POE code wants to report (or simply hide) the error and suppress the automatic reporting done by Poco, it may modify the builtin_err value to }{\cf2\f0\fs24\b\lang1033{\*\listtag0}Err_reported}{\cf2\f0\fs24\lang1033{\*\listtag0}.  This will cause the Poco program to terminate without reporting an error to the user.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch It is possible for a POE module to attempt to correct what it thinks went wrong with a library function call, reset builtin_err to zero, and continue processing (perhaps re-issuing the call or perhaps moving on to some alternate operation).  It is also possible for a POE module to crash Animator.  In other words, use this technique with care.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch 8. Notes on the runtime environment}{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\b\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\b\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When compiling a POE module, it is }{\cf2\f0\fs24\ul\lang1033{\*\listtag0}mandatory}{\cf2\f0\fs24\lang1033{\*\listtag0} that the compiler's options be set to generate inline 80387 floating point instructions.  A valid 387 environment will exist when the POE module is loaded.  On machines not equipped with an 80387, Animator will have set up a full 387 emulation environment.  If the inline-387 compiler option is not used, the POE module will not link correctly with MATHLIB.H.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch When using the Phar Lap linker to generate a POE module, it is mandatory that the }{\cf2\f0\fs24\b\lang1033{\*\listtag0}-DOSORDER}{\cf2\f0\fs24\lang1033{\*\listtag0} link option be used.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Upon entry to a POE function from Poco, it is guaranteed that there will be at least 2k of stack space available.  There is no way to ascertain for certain how much stack space is available.  Some assumptions could be made in certain tightly-controlled situations. Consider the following Poco program, for example:}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco stacksize 64k}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch #pragma poco library "eatstack.poe"}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch void main(void) \{PoeMain();\}}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch This example assumes a situation in which the PoeMain() call transfers control into a fairly complex POE module containing a complete application.  It would be safe for the POE module in this case to assume that most of the requested 64k of stack space is available.  A POE module may safely allocate its own stack and switch the 80386 hardware stack pointer to use it, providing that the stack pointer is restored to the proper value before returning control to the calling function in Poco.}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\abinodiroverride\ltrch Index}{\cf2\f0\fs24\b\ul\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch 2 Color button}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AA.MU2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Aborting Poco23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Absolute value91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch acos(double x)89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch AllocScreen(Screen **screen, int width, int height)66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Anim cel frame}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Anim cel frame count59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Anim cel next frame58}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Anim cel previous frame59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Animation}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading75}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch playing48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Arc cosine89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Arc sine90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Arc tangent90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch asin(double x)90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Aspect ratio}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch atan(double x)90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch atan2(double y, double x)90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Atoi(char *str)87}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Back(double amount)44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch BackFrame()46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Bias for Spline tool}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Setting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Blit(Screen *s, int sx, int sy, int w, int h, Screen *d, int d69}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Box(int x, int y, int w, int h)28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Brush size}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Button selection box13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch calloc(int el_count, int size_el)88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ceil(double x)90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Cel}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelBackFrame()59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelClip()56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelExists()56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelFrameCount()59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelGet(int x, int y, int w, int h)57}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelGetFrame()59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelMove(int dx, int dy)57}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelMoveTo(int x, int y)58}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelNextFrame()58}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelPaste()57}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelSetFrame(int frame)59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelTurn(double angle)58}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelTurnTo(double angle)58}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CelWhere(int *x, int *y, double *angle)59}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Chaining programs75}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CheckAbort(void *dummy)120}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Circle(int cx, int cy, int radius)28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Clear()27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Clock1000()46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Closed flag}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Color map}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Color selection menu18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Comments in source code6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Continuity for Spline tool}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch CopyScreen(Screen *source, Screen *dest)70}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cos(double x)90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cosh(double x)91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Cosine90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Current color}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting27, 32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Current directory}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Current frame47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Current screen handle66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Cursor}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch hiding25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch showing26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Cycle draw mode}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DeleteFrames(int count)49}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Directory}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DirList(char ***list, char *wild, Boolean get_dirs)95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Dither}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DosCopy(char *source, char *dest)94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DosDelete(char *filename)94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DosExists(char *filename)94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DosRename(char *old, char *new)95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Dot(int x, int y)27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch DragBox(int *x, int *y, int *w, int *h)21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Edge(int color)31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Error code}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch printing13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Error codes7}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch exit(ErrCode err)71}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch exp(double x)91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Exponents91, 92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fabs(double x)91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fclose(FILE *f)80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fflush(FILE *f)82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgetc(FILE *f)82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fgets(char *s, int maxlen, FILE *f)83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch File}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch checking for94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch closing80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch copying94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch deleting94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch flushing82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch opening80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pointer81, 82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch reading80, 82, 83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch renaming95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch writing81, 83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch File selector box18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Filename}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch breaking into parts93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch reconstructing94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Fill(int x, int y)31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Filled button}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FillTo(int x, int y, int to_color)31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FindPoe(char *name, Lib_proto **plib)119}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch floor(double x)91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fmod(double x, double y)91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fnmerge(char *path, char *dev, char *dir, char *f, char *suf)94}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fnsplit(char *path, char *dev, char *dir, char *f, char *suf)93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Font}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Font directory36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Font file selector36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Font name35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Font size35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FontHeight()35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fopen(char *name, char *mode)80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fprintf(FILE *f, char *format, ...)81}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputc(int c, FILE *f)83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fputs(char *s, FILE *f)83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Frame count}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Frame index47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Frames}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch deleting49}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch inserting48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fread(void *buf, int size, int count, FILE *f)80}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch free(void *pt)88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FreeDirList(char ***list)96}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch FreeScreen(Screen **screen)67}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fseek(FILE *f, long offset, int mode)81}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ftell(FILE *f)82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch fwrite(void *buf, int size, int count, FILE *f)81}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetAspectRatio(int *x, int *y)27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetBlock(Screen *s, char *pixbuf, int x, int y, int w, int h)68}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetBrushSize()38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getc(FILE *f)82}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetCelScreen()66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetChangeCount(void)72}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetClosed()42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetColor()27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetColorMap(int index, int *r, int *g, int *b)32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetComplete(void)56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetCycleDraw()43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetDir(char *dir)95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetDot(int x, int y)28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFilled()38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFontDir(char *dir)36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFontName(char *name)35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFrame()47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFrameCount()47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetFSA(void)53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetInk(char *buf)36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetInkDither()37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetInkStrength()37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetInSlow(void)54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetJustify()34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetKeyColor()39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetKeyMode()38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetMaskCreate()40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetMaskUse()39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetMenuColors(int *indicies, Rgb3 *lastrgbs, Rgb3 *ideals)120}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetMultiFrame()43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetOutSlow(void)55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPhysicalSize(int *width, int *height)26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPicScreen()65}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPicScreen(void)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch in POE module119}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPingPong(void)55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetPixel(Screen *s, int x, int y)67}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetProgramDir(char *dir)96}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetResourceDir(char *dir)96}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetReverse(void)56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetScreenColorMap(Screen *screen, int *maparray)33}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetScreenSize(Screen *s, int *x, int *y)67}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSegEnd(void)53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSegStart(void)53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSize(int *width, int *height)26}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSpeed()48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSplineTCB(int *t, int *c, int *b)41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetStarPoints()40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetStarRatio()41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetStill(void)54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetSwapScreen()66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetTimeSelect(void)52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetTwoColor()42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetTwoColorOn()42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GetUndoScreen()66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Global String Variables}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch overview97}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch permanent versus project97}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarDelete(char *varname)99}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarFirst(char **vname, char **vvalue)99}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarFlush()99}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarGet(char *varname, char *value)98}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarNext(char **vname, char **vvalue)100}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch GlobalVarSet(char *varname, char *value)97}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch HideCursor()25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Home()45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Host libraries112}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Hyperbolic cosine91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Hyperbolic sine92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Hyperbolic tangent93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch IconBlit(char *s, int next, int sx, int sy, int w, int h, Scre68}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Ink}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Ink strength}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch InsertFrames(int count)48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch IsBatchRun(void)74}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch IsDown()45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Justification options}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Key color}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Key color clear}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch KeyBlit(Screen *s, int sx, int sy, int w, int h, Screen *d, in69}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Keypress}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch checking for22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for22, 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Left(double angle)44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Line(int x1, int y1, int x2, int y2)28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Listed menu15, 16}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadCel(char *name)77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadColors(char *name)78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadFlic(char *name)75}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadFont(char *name)35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadMask(char *name)79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadPath(char *name)77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadPic(char *name)76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadPoly(char *name)78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadScreenPic(char *name, Screen *screen)76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch LoadTitles(char *name)79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch log(double x)92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch log10(double x)92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Logarithm}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch base 1092}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch natural92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch malloc(int size)88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Mask}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Mask button}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Mask create option}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcmp(void *a, void *b, int size)89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memcpy(void *dest, void *source, int size)88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memmove(void *dest, void *source, int size)88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Memory}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch allocating88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch comparing89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch copying88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch freeing88}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch moving89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch memset(void *dest, int source, int size)89}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Modulo91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Mouse click}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch checking for22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for22, 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Mouse movement}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Move(double amount)43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch MoveTo(double x, double y, double angle)45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch New animation71}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch New screen handle66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch NewFlic()71}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch NextFrame()46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch NULL pointer references6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Numbered pop-up menu14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Numeric slider bar15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptClearPath()63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptClearPos()62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptClearState()61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptContinue()64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptDefaultCenters()64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptFreePath(int **x, int **y)63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptFreeState(struct optState *os)62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptGetElement()64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptGetPath(int **x, int **y)63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptGetPos(struct optPos *op)62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptGetState(struct optState *os)61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Optics element}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Optics information}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch clearing61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting61, 64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Optics panel sliders}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Optics path movement}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch clearing63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptSetElement(int el)64}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptSetPath(int ptcount, int *x, int *y)63}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptSetPos(struct optPos *op)62}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptSetState(struct optState *os)61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch optState structure105}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptToAll()65}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptToFrame(double time)65}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OptToSegment(int start, int stop)65}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Oval(double angle, int xcen, int ycen, int xrad, int yrad)29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverAll(ErrCode (*func)(double time, void *data), void *data)51}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverAll(OTFunc *effect, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch in POE module120}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverSegment(ErrCode (*func)(double time, void *data), void *da50}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverSegment(OTFunc *effect, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch in POE module120}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch OverTime(ErrCode (*func)(double time, void *data), void *data)49}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Overtime(OTFunc *effect, void *data)}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch in POE module120}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Pausing46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PenDown()44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PenUp()44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Petal(double angle, int xcen, int ycen, int rad)30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PicDirtied(void)70}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch picscreen}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch definition66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch dirtied by POE module70}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Picture}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PlayFlic(long frames)47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco editor3}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poco menu1, 2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PocoChainTo(char *progpath)75}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POCOLIB.H111, 112, 115, 117, 120, 121}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PocoVersion()72}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch POE module}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch builtin_err114}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch cleanup routine112}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch coding the interface112}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch definition110}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch floating point123}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch host libraries112}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch init routine112}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Pocolib Interface110}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot: definition115}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot: passed in to POE function116}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot: returned from POE function116}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot: versus Poco pointer115}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch returning to Poco after error122}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch REX/Host Interface111}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch skeleton source code114}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch stack usage123}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch using Poco builtin libraries121}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch variable argument lists116}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch PollInput(int *x, int *y, int *left, int *right, int *key)22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Poly(int ptcount, int *x, int *y)29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Polygon29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot_bufcheck(Popot *ppt, int size)118}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Popot_bufsize(Popot *ppt)117}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch pow(double x, double y)92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Ppt2ptr(Popot ppt)119}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Previous frame46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch printf(char *format, ...)12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Ptr2ppt(void *pt, int size)118}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch putc(int c, FILE *f)83}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qchoice(char **buttons, int bcount, char *header, ...)13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qcolor()18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qerror(ErrCode err, char *format, ...)12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qfile(char *suf, char *button, char *in, char *out, Boolean fo18}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qfont()36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qlist(int *choice, char **items, int n, int *pos, char *text)15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qmenu(char **choices, int ccount, char *header)14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qnumber(int *num, int min, int max, char *header)15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qquestion(char *question, ...)15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qscroll(int *choice, char **items, int n, int *pos, char *butt16}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qstring(char *string, int size, char *header)14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Qtext(char *format, ...)13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rand()73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Random number generator73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch seeding73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rectangle28}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Redo()73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Regular polygon30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reset()72}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ResizeReset(int width, int height)72}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Resource directory 2, 96}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Resource file2}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Restore()73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Reuse78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RGB value}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Right(double angle)44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch rnd(int max)73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rounding down91}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rounding up90}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rpoly(double angle, int xcen, int ycen, int rad)30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rubber box19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rubber circle20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rubber line20, 21}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Rubber polygon20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RubBox(int *x, int *y, int *w, int *h)19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RubCircle(int *x, int *y, int *rad)19}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RubLine(int x1, int y1, int *x2, int *y2)20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch RubPoly(int **x, int **y)20}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveCel(char *name)77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveColors(char *name)79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveFlic(char *name)76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveMask(char *name)79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SavePath(char *name)78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SavePic(char *name)76}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SavePoly(char *name)78}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveScreenPic(char *name, Screen *screen)77}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SaveTitles(char *name)79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen block}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting68}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting68}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Screen size}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting26, 67}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetAbort(Boolean abort)23, 24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetAbortHandler(Boolean (*handler)(void *data), void *data)24}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetBlock(Screen *s, char *pixbuf, int x, int y, int w, int h)68}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetBrushSize(int size)38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetClosed(Boolean closed)42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetColor(int color)27}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetColorMap(int index, int r, int g, int b)31}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetComplete(Boolean complete)56}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetCycleDraw(Boolean cycle)43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetDir(char *dir)95}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetFilled(Boolean fill)37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetFrame(int frame)47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetFrameCount(int count)47}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetFSA(int fsamode)52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetInk(char *name)36}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetInkDither(Boolean dither)37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetInkStrength(int percent)37}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetInSlow(Boolean in_slow)54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetJustify(int just)34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetKeyColor(int color)39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetKeyMode(Boolean clear)38}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetMaskCreate(Boolean make_it)39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetMaskUse(Boolean use_it)39}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetMultiFrame()43}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetOutSlow(Boolean out_slow)54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetPingPong(Boolean pingpong)55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetPixel(Screen *s, int color, int x, int y)67}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetReverse(Boolean reverse)55}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetScreenColorMap(Screen *screen, int *maparray)32}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetSegEnd(int frame)53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetSegStart(int frame)53}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetSpeed(int speed)48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetSplineTCB(int t, int c, int b)41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetStarPoints(int points)40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetStarRatio(int ratio)40}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetStill(Boolean still)54}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetTimeSelect(Boolean is_multi)52}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetTwoColor(int color)42}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SetTwoColorOn(Boolean setit)41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch ShowCursor()25}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sin(double x)92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Sine92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sinh(double x)92}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sleep(double seconds)46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Speed}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting48}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Spiral(double angle, int x, int y, int rad, double turns)30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Spline(int ptcount, int *x, int *y)29}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sprintf(char *buf, char *format, ...)84}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch sqrt(double x)93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Square root93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch srand(int seed)73}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Star(double angle, int xcen, int ycen, int rad)30}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcat(char *dest, char *source)86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strchr(char *str, int c)86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcmp(char *a, char *b)84}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strcpy(char *dest, char *source)85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strdup(char *source)86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch stricmp(char *a, char *b)84}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String comparison84, 85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String concatenation86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String copying85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String duplication86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String input14}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String length85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch String searching87}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch StringWidth(char *string)35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch stristr(char *string, char *substring)87}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strlen(char *a)85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strncmp(char *a, char *b, int maxlen)85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strncpy(char *dest, char *source, int maxlen)85}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strrchr(char *str, int c)86}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch strstr(char *string, char *substring)87}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Suspending program operation46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Swap screen handle66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SwapClip()60}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SwapExists()60}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SwapRelease()61}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch SwapTrade()60}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TallestChar()35}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch tan(double x)93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Tangent93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch tanh(double x)93}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch \page }{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Tension for Spline tool}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting41}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Text}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch displaying13}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch output33, 34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Text buffer}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch loading79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch saving79}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Text(int x, int y, char *string)34}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Time Select menu49}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch TradeScreen(Screen *a, Screen *b)70}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Turtle graphics pen}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch getting45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch moving44, 45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch setting44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch turning44}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Undo screen handle66}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch UnPrintf()12}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch User input}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch checking for22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch waiting for22, 23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Variable declaration6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Variable initialization6}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch WaitClick(int *x, int *y, int *left, int *right, int *key)22}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Waiting46}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch WaitInput(int *x, int *y, int *left, int *right, int *key)23}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Where(double *x, double *y, double *angle)45}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch WordWrap(int x, int y, int width, int height, char *text)33}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}
\pard\plain\ltrpar\ql\ri-720\sl240\slmult1\itap0{\cf2\f0\fs24\lang1033{\*\listtag0}\abinodiroverride\ltrch Yes/no question15}{\cf2\f0\fs24\lang1033{\*\listtag0}\par}}