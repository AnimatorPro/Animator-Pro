Contents and reasons for misc1.zip.

------------------------------------------------------------------------------
 picdrive\tiff\tifwrite.c

	A bugfix.  The 5.0 doc clarifies that an IFD (the tags) must begin on an
	even word boundry; we now force that to happen.

------------------------------------------------------------------------------
 publib\danfli\make.inc
 publib\inc\makewc.inc
 rexlib\inc\makewc.inc
 poco\cycle\make.inc
 inc\makewc.inc

	All of the preceding were tweaked as follows:
	  > CFLAGS= was removed, so it can be set on the make commandline.
	  > all places where a make macro was set and it included a reference to
		another make macro, the reference was removed.	most make programs will
		not do multi-level expansion of macros, so a sequence like:
		 CPF = -j -3s $(CFLAGS)
		 .c.obj:
			$(CC) $* $(CPF)
		will not result in $(CFLAGS) getting expanded when the rule executes.
		you have to write:
		 .c.obj:
			$(CC) $* ($CPF) $(CFLAGS)
		this was done for CFLAGS, AFLAGS, and IL macros.  in each case, the
		CFLAGS or AFLAGS macro appears last on the line, so that any of the
		default flag settings can be overriden from the command line.
	  > all '-ox' optimizations were changed to '-oxt'.  this generates code
		that is overwhelmingly faster, and most often a good bit shorter.
	Note that all these issues are valid for the makefiles in PICDRIVE\INC, but
	I didn't touch those, due to pending release.

------------------------------------------------------------------------------
 inc\pocolib.h
 inc\pocorex.h
 inc\porexlib.h

	Consolidated all prototypes used internally to PJ under an #ifdef PRIVATE
	block, and all prototypes that need to be visible to POE modules under an
	#ifdef PUBLIC block.  The superstructure was already in place in the rexlib
	subdir to run cmacro as it gets copied to rexlib\inc during a make. Moved
	some prototypes between the 3 files so that all the ones PJ wants are now
	in pocolib.h.  Tidied things up and added some comments that should be
	helpful to POE developers.

------------------------------------------------------------------------------
 rexlib\make.bat
 rexlib\pocorex\pocorex.lbc
 rexlib\pocorex\makecall.bat
 rexlib\pocorex\pojump.i
 rexlib\pocorex\makefile

	All these changes are to implement the same sort of auto-generation of
	host library glue routines as is found in rexlib\syslib, et. al.

	There is one difference in the way I set it up: I have the makefile do
	most everything, whereas the other libraries require a manual run of
	makecalls.bat to generate the callglue asm code.  I'm not sure my method
	is ideal for the other libraries, since it requires 3 extra lines in the
	makefile for every library call in the host library, but it does have the
	benefit of being real hands-off automatic.

	After dropping these into place, CD to \paa\rexlib and do a make.
