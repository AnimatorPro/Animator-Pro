Module: a2blit.asm
GROUP: 'DGROUP' CONST,_BSS,_DATA

Segment: _TEXT BYTE USE16 0000009C bytes
0000                          _a2blit:
0000    55                        push        bp 
0001    8B EC                     mov         bp,sp 
0003    06                        push        es 
0004    1E                        push        ds 
0005    56                        push        si 
0006    57                        push        di 
0007    53                        push        bx 
0008    51                        push        cx 
0009    9A 00 00 00 00            call        _TEXT:clipblit 
000E    72 3F                     jb          L$1 
0010    8B 46 10                  mov         ax,word ptr 0x10[bp] 
0013    8E D8                     mov         ds,ax 
0015    8B 46 0C                  mov         ax,word ptr 0xc[bp] 
0018    8B 5E 12                  mov         bx,word ptr 0x12[bp] 
001B    F7 E3                     mul         bx 
001D    8B 5E 0A                  mov         bx,word ptr 0xa[bp] 
0020    B1 03                     mov         cl,0x03 
0022    D3 EB                     shr         bx,cl 
0024    03 C3                     add         ax,bx 
0026    01 46 0E                  add         word ptr 0xe[bp],ax 
0029    C4 7E 18                  les         di,dword ptr 0x18[bp] 
002C    8B 46 16                  mov         ax,word ptr 0x16[bp] 
002F    8B 5E 1C                  mov         bx,word ptr 0x1c[bp] 
0032    F7 E3                     mul         bx 
0034    03 F8                     add         di,ax 
0036    03 7E 14                  add         di,word ptr 0x14[bp] 
0039    89 7E 18                  mov         word ptr 0x18[bp],di 
003C    8A 4E 0A                  mov         cl,byte ptr 0xa[bp] 
003F    80 E1 07                  and         cl,0x07 
0042    B2 80                     mov         dl,0x80 
0044    D2 EA                     shr         dl,cl 
0046    8A 46 1E                  mov         al,byte ptr 0x1e[bp] 
0049    8A 5E 20                  mov         bl,byte ptr 0x20[bp] 
004C    EB 36                     jmp         L$6 
004E    90                        nop         
004F                          L$1:
004F    EB 43                     jmp         L$8 
0051    90                        nop         
0052                          L$2:
0052    8B 4E 06                  mov         cx,word ptr 0x6[bp] 
0055    8A F2                     mov         dh,dl 
0057    8B 76 0E                  mov         si,word ptr 0xe[bp] 
005A    8B 7E 18                  mov         di,word ptr 0x18[bp] 
005D    8A 24                     mov         ah,byte ptr [si] 
005F    46                        inc         si 
0060                          L$3:
0060    84 E6                     test        dh,ah 
0062    75 0D                     jne         L$4 
0064    26 88 1D                  mov         byte ptr es:[di],bl 
0067    47                        inc         di 
0068    D0 EE                     shr         dh,0x01 
006A    74 1F                     je          L$7 
006C    E2 F2                     loop        L$3 
006E    EB 08                     jmp         L$5 
0070    90                        nop         
0071                          L$4:
0071    AA                        stosb       
0072    D0 EE                     shr         dh,0x01 
0074    74 15                     je          L$7 
0076    E2 E8                     loop        L$3 
0078                          L$5:
0078    8B 4E 12                  mov         cx,word ptr 0x12[bp] 
007B    01 4E 0E                  add         word ptr 0xe[bp],cx 
007E    8B 4E 1C                  mov         cx,word ptr 0x1c[bp] 
0081    01 4E 18                  add         word ptr 0x18[bp],cx 
0084                          L$6:
0084    FF 4E 08                  dec         word ptr 0x8[bp] 
0087    78 0B                     js          L$8 
0089    EB C7                     jmp         L$2 
008B                          L$7:
008B    8A 24                     mov         ah,byte ptr [si] 
008D    46                        inc         si 
008E    B6 80                     mov         dh,0x80 
0090    E2 CE                     loop        L$3 
0092    EB E4                     jmp         L$5 
0094                          L$8:
0094    59                        pop         cx 
0095    5B                        pop         bx 
0096    5F                        pop         di 
0097    5E                        pop         si 
0098    1F                        pop         ds 
0099    07                        pop         es 
009A    5D                        pop         bp 
009B    CB                        retf        

Routine Size: 156 bytes,    Routine Base: _TEXT + 0000

No disassembly errors

Segment: _DATA WORD USE16 00000000 bytes

Segment: CONST WORD USE16 00000000 bytes

Segment: _BSS WORD USE16 00000000 bytes

BSS Size: 0 bytes

