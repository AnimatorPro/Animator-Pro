
Video Paint has certainly grown into a much more complex program than I
had anticipated when starting it.  I've taken it about as far as I can
at the moment without hitting greatly diminishing returns.  So far I've
spent about 1500 hours thinking about it and typing things in.  This
is about twice the time I spent on Cyber Paint.

So I think it's time to consider what purpose it will serve, and who
will buy it, and where we can go from here.

It's selling I guess for about $400.00.  Considering it  does require
a machine costing about $4000.00 to give it a good run the pricing seems
reasonable for software.    The question is - does this price it  into
the realm of a professional tool?  I think not.  The potential customers
are mainly in 3 categories -

	1.  The PC user - someone who has bought a computer most likely
	    because word processors are so much easier than typewriters.
		Has found out a computer has many other uses.  Enjoys at least
		the occassional computer game.  May be trying to use the PC
		as an educational tool.   This category is the largest by far.
		Will get program at this price if think it is fun and can find
		a way to justify it as a business expense or get their boss to
		pay for it.  I know we'd sell a lot more packages to this group
		pricing it like Borland.  We might make more profit pricing it like
		Autodesk.
	2.  The aspiring video artist - would be doing video even if it weren't
	    for computers, but is not doing video professionally.  This category
		is smaller than #1, but potentially much larger (as the price of
		the necessary equipment drops) than #3.  
	3.  The video professional.  Uses Video Paint first as a design tool,
		but then finds out they like it.  A real nuisance because VPaint
		can't quite do everything they'd need or like.  On the other hand
		often willing to pay big bucks for relatively small  enhancements,
		and generates free publicity.  Some of them are even quite nice when
		not under deadline.

The design of Vpaint is really more to please the users and artists than the
professionals.  Design decisions were made for it to run on a relatively
modest platform (8086 640K no EMS).   One of the first things
people will be asking for is increased resolution to take advantage of
some of the "Super VGA" boards.  To go to 640x400  would require an 80386 and 
3 meg RAM at a minimum.  The compression techniques would have to 
change from byte to 32-bit-word oriented to have the speed at this rez
(which would make the compression less effective too unless new techniques 
developed.)  Simply going to 'overscan' of some sort with perhaps a 356x240
resolution would require extensive EMS, code overlays,  and recoding of 
much of the assembly layers.  (In fact overscan on the existing platform
may be a harder venture than 640x400 on a new platform.)

So where do we go from here?  Though Vpaint takes up about as much memory
as I think it should be allowed to already (we really must leave room for
Sidekick!), it would not be unreasonable to find 40-60K for various
enhancements if we went to a modest code overlay structure.   Still
even this would want about a month of fairly solid testing both before
and after the primary overlay coding, and about 2-4 weeks of programming in
the middle.  A much more enjoyable 4-6 weeks of programming could be spent
on the enhancements.  Taking the program past this stage would quickly
get you into marginal returns.  The time would probably be better spent
on developing external coorperative programs and ways to invoke these
from vpaint.  (Or perhaps on designing the successor to Vpaint
on the successor to the VGA.)

Before I go off into rosy dreams of 16 bits a pixel in 512x400 resolution
with built in HDTV out, let's consider what could be done in about 40K of
enhancements.

	All drawing tools could reuse and tween (talking c. 16K,
	1-2 weeks coding)

	Could bring modeler objects into the Optics (about 10K I hope, 1-2
	weeks coding)

	Installable input devices (hopefully no more than 3 or 4K on since
	a lot of this capability comes in with the overlays anyways. 3-6
	days coding)

	Could use a FLI composite source in the Optics (probably just about
	3K and an extra temp file once I get it worked out. 2 days coding.)

	A transitions menu with 'lap' transitions and a scrolling list of
	wipes - might fit it into 15K.  3-6 days coding)

	New compression types - there are some techniques I've thought of which
	in many cases, especially on 16 bit VGA cards, could go half again
	faster in some cases (large delta cases) with only about a 10%
	space increase.  These probably wouldn't take more than
	4K of code once worked out, but could easily take a couple of weeks.

	Hooks for installing new drop-down items on the fly that will call
	programs not yet written when punched using something like the
	protocall developed for the renderer.  (I'd guess 5K and 6-8 days
	designing and coding.)


I've been planning on releasing a nice upgrade in about a year.  The
pre-overlay testing will then be accomplished by thousands of users,
and will be extremely thorough.  People don't seem to believe you can
have a significant upgrade in less than that time and the dealers don't
like it.  (At least this is what happened with Cyber Paint 2.0)
Sometime around then we're going to have to decide whether we want
a super-VGA version that requires an 80386 or to go with the DVI
chip-set RCA's selling for $5.00 a pop,  the Japanese Targa clone
that comes standard on every Toshiba, or the holographic display
based on digitally polarized cellophane that's been molecularly engineered 
by a strain of monoclonal ribosomes they've got in the works near
the outskirts of Liverpool.



