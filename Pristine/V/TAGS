dumptofile DEBUG.C /^dumptofile(name, pt, count)
delete_some TIME.C /^delete_some(x)
qdelete_frames TIME.C /^qdelete_frames()
qmake_frames TIME.C /^qmake_frames()
check_max_frames TIME.C /^check_max_frames(long new)
insert_frames TIME.C /^insert_frames(count, where)
arctan ARCTAN.C /^arctan(x,y)
arcnorm ARCTAN.C /^arcnorm(t)
do_title_menu TITLE.C /^do_title_menu()
tmu_menu TIMEMENU.C /^Flicmenu tmu_menu = 
insert_a_frame TIMEMENU.C /^insert_a_frame()
kill_a_frame TIMEMENU.C /^kill_a_frame()
redraw_range_buttons TIMEMENU.C /^redraw_range_buttons()
do_time_menu TIMEMENU.C /^do_time_menu()
go_time_menu TIMEMENU.C /^go_time_menu()
anywin WINDOW.C /^char anywin;
dwlist WINDOW.C /^struct dwindow dwlist[8];
dwlinestart WINDOW.C /^UBYTE *dwlinestart[YMAX]; /*
menu_space WINDOW.C /^UBYTE menu_space[YMAX];		/* 
in_control_space WINDOW.C /^in_control_space()
on_menus WINDOW.C /^on_menus(y)
make_dw WINDOW.C /^make_dw()
dwlinestart WINDOW.C /^UBYTE *dwlinestart[YMAX];
dwgetdot WINDOW.C /^dwgetdot(x,y)
dwdot WINDOW.C /^dwdot(x,y,color)
remove_wi WINDOW.C /^remove_wi(wi)
make_wi_list WINDOW.C /^make_wi_list()
swap_undo WINDOW.C /^swap_undo()
save_undo WINDOW.C /^save_undo()
unundo WINDOW.C /^unundo()
zoom_it WINDOW.C /^zoom_it()
upd_zoom_dot WINDOW.C /^upd_zoom_dot(x,y,c)
restore_top_bar WINDOW.C /^restore_top_bar()
blank_top_bar WINDOW.C /^blank_top_bar()
ltop_text WINDOW.C /^ltop_text(s)
top_text WINDOW.C /^top_text(s)
gif_byte_buff DECODER.C /^UBYTE gif_byte_buff[256+3]; 
gif_decoder DECODER.C /^WORD gif_decoder(linewidth)
qload_defaults VPAINT.C /^qload_defaults()
qsave_defaults VPAINT.C /^qsave_defaults()
qload_mask VPAINT.C /^qload_mask()
qsave_mask VPAINT.C /^qsave_mask()
qload_cel VPAINT.C /^qload_cel()
qsave_cel VPAINT.C /^qsave_cel()
qload_pic VPAINT.C /^qload_pic()
qsave_pic VPAINT.C /^qsave_pic()
qload VPAINT.C /^qload()
qsave VPAINT.C /^qsave()
check_cel_options VPAINT.C /^check_cel_options()
dokeys VPAINT.C /^dokeys()
config_scratch VPAINT.C /^config_scratch()
check_dfree VPAINT.C /^check_dfree()
selit VPAINT.C /^selit(menu, select)
edit_poly TWEEN.C /^edit_poly()
edit_curve TWEEN.C /^edit_curve()
do_tween TWEEN.C /^do_tween()
tween_poly TWEEN.C /^tween_poly()
tween_curve TWEEN.C /^tween_curve()
qload_overlay OVERLAY.C /^qload_overlay()
some_spline SPLINE.C /^some_spline(poly, dotout, ve
make_sp_poly SPLINE.C /^make_sp_poly(poly, dpoly, cl
filled_spline SPLINE.C /^filled_spline(poly)
hollow_spline SPLINE.C /^hollow_spline(poly)
is_path SPLINE.C /^int is_path;
free_screen SCREEN.C /^free_screen(s)
alloc_big_screen SCREEN.C /^alloc_big_screen(w,h)
alloc_screen SCREEN.C /^alloc_screen()
clone_screen SCREEN.C /^clone_screen(s)
screen_to_cel SCREEN.C /^screen_to_cel(s, c)
til_next_skip LCCOMP.C /^til_next_skip(s1, s2, bcount
til_next_same LCCOMP.C /^til_next_same(s2x,wcount)
lccomp LCCOMP.C /^lccomp(s1,s2,cbuf,width,heig
brun LCCOMP.C /^brun(s1,s2,cbuf,width,height
options_list OPTIONS.C /^Option_list *options_list = 
save_text_text OPTIONS.C /^save_text_text(m)
ccorner_poly_text OPTIONS.C /^ccorner_poly_text(m)
zero_sl OPTIONS.C /^zero_sl(m)
new_percent OPTIONS.C /^new_percent(newmode)
change_ink_mode OPTIONS.C /^change_ink_mode(m)
change_pen_mode OPTIONS.C /^change_pen_mode(m)
mload_text OPTIONS.C /^mload_text()
qload_text OPTIONS.C /^qload_text()
qsave_text OPTIONS.C /^qsave_text()
options OPTIONS.C /^options(m)
go_dmmenu OPTIONS.C /^go_dmmenu(m)
qtools OPTIONS.C /^qtools()
qinks OPTIONS.C /^qinks()
minks OPTIONS.C /^minks()
bad_code_count GIF.C /^int bad_code_count;
gif_bf GIF.C /^Bfile gif_bf;
gif_get_byte GIF.C /^gif_get_byte()
gif_out_line GIF.C /^gif_out_line(pixels, linelen
load_gif GIF.C /^load_gif(name, screen)
save_gif GIF.C /^save_gif(name, screen)
notafli FLI.C /^notafli(name)
not_fli_frame FLI.C /^not_fli_frame()
uncompfli FLI.C /^uncompfli(f, frame, colors)
gb_unfli FLI.C /^gb_unfli(f, ix, wait, frame)
unfli FLI.C /^unfli(f, ix, wait)
read_fli_head FLI.C /^read_fli_head(title, flih)
check_fli FLI.C /^check_fli(title)
gb_read_next_frame FLI.C /^gb_read_next_frame(fname,fd,
read_next_frame FLI.C /^read_next_frame(fname,fd,fsc
load_fli FLI.C /^load_fli(title)
wrap_frame FLI.C /^wrap_frame(frame)
check_loop FLI.C /^check_loop()
advance_frame_ix FLI.C /^advance_frame_ix()
mlast_frame FLI.C /^mlast_frame()
prev_frame FLI.C /^prev_frame()
mprev_frame FLI.C /^mprev_frame()
first_frame FLI.C /^first_frame()
mfirst_frame FLI.C /^mfirst_frame()
next_frame FLI.C /^next_frame()
mnext_frame FLI.C /^mnext_frame()
playit FLI.C /^playit()
mplayit FLI.C /^mplayit()
flip_range FLI.C /^flip_range()
loop_range FLI.C /^loop_range()
flip5 FLI.C /^flip5()
gb_fli_tseek FLI.C /^gb_fli_tseek(screen, cur_ix,
fli_tseek FLI.C /^fli_tseek(screen, cur_ix, ne
fli_abs_tseek FLI.C /^fli_abs_tseek(screen,new_ix)
free_cel CEL.C /^free_cel(c)
alloc_cel CEL.C /^alloc_cel(w,h,x,y)
clone_cel CEL.C /^clone_cel(s)
show_cel_a_sec CEL.C /^show_cel_a_sec()
load_cel CEL.C /^load_cel(name)
find_clip CEL.C /^find_clip(screen,tcolor)
clip_cel CEL.C /^clip_cel()
dupe_cel CEL.C /^dupe_cel()
cbvec CEL.C /^Vector cbvec = tblit8;	/* 'b
cmvec CEL.C /^Vector cmvec = tmove8;	/* 'm
set_zero_clear CEL.C /^set_zero_clear()
cmaps_same CEL.C /^cmaps_same(s1, s2)
cfit_cel CEL.C /^cfit_cel(c,dcmap)
need_fit_cel CEL.C /^need_fit_cel(c)
ccc CEL.C /^Vcel *ccc;	/* a color fitted
make_ccc CEL.C /^make_ccc()
free_ccc CEL.C /^free_ccc()
move_cel CEL.C /^move_cel()
paste_cel CEL.C /^paste_cel()
upaste_cel CEL.C /^upaste_cel()
move_tool CEL.C /^move_tool()
vmask_cel CEL.C /^vmask_cel()
pal_pal_sel PALET2.C /^Flicmenu pal_pal_sel = {
pal_cco_sel PALET2.C /^Flicmenu pal_cco_sel = {
pal_spe_sel PALET2.C /^Flicmenu pal_spe_sel = {
pal_bun_sel PALET2.C /^Flicmenu pal_bun_sel = {
palette_menu PALET2.C /^Flicmenu palette_menu = {
qload_palette PALET2.C /^qload_palette()
refit_screen PALET2.C /^refit_screen(c, ncmap, ocmap
in_cmap PALET2.C /^in_cmap(rgb, cmap, count)
qsave_palette PALET2.C /^qsave_palette()
refit_1c PALET2.C /^refit_1c(scale, p, ccolor, c
refit_vf PALET2.C /^refit_vf()
cdefault PALET2.C /^cdefault()
cuse_cel PALET2.C /^cuse_cel()
redraw_ccolor PALET2.C /^redraw_ccolor()
rampit PALET2.C /^rampit(r1, r2, dr, ccount, d
a_break_key PALET2.C /^a_break_key()
get_menu_colors PALET2.C /^get_menu_colors()
change_menc PALET2.C /^change_menc(ix)
crestore PALET2.C /^crestore()
ppalette PALET2.C /^ppalette()
palette PALET2.C /^palette()
cur_menu FEELMENU.C /^Flicmenu *cur_menu = &quick_
hang_child FEELMENU.C /^hang_child(m)
clip_rmove_menu FEELMENU.C /^clip_rmove_menu(m,dx,dy)
rmove_menu FEELMENU.C /^rmove_menu(m,dx,dy)
bottom_menu FEELMENU.C /^bottom_menu(m)
move_menu FEELMENU.C /^move_menu(m)
repeat_on_pdn FEELMENU.C /^repeat_on_pdn(v)
find_grid FEELMENU.C /^find_grid(m)
in_lr_half FEELMENU.C /^in_lr_half(m)
clip_slider FEELMENU.C /^clip_slider(s)
slide_where FEELMENU.C /^slide_where(m)
upd_slidepot FEELMENU.C /^upd_slidepot(m, erase, draw)
update_slidepot FEELMENU.C /^update_slidepot(m)
update_number_slider FEELMENU.C /^update_number_slider(m)
feel_slidepot FEELMENU.C /^feel_slidepot(m)
feel_number_slider FEELMENU.C /^feel_number_slider(m)
feelslide FEELMENU.C /^feelslide(m, update)
close_menu_bad FEELMENU.C /^close_menu_bad()
close_menu FEELMENU.C /^close_menu()
do_pmenu FEELMENU.C /^do_pmenu(m, s)
hfs_do_menu FEELMENU.C /^hfs_do_menu(m)
do_menu FEELMENU.C /^do_menu(m)
nod_do_menu FEELMENU.C /^nod_do_menu(m)
upc_char FEELMENU.C /^upc_char(c)
menu_keys FEELMENU.C /^menu_keys(m)
sub_menu_loop FEELMENU.C /^sub_menu_loop(selit, penfunc
in_menu FEELMENU.C /^in_menu(m)
rsel FEELMENU.C /^rsel( m)
toggle_group FEELMENU.C /^toggle_group(m)
change_mode FEELMENU.C /^change_mode(m)
go_in_circles_message FEELMENU.C /^go_in_circles_message(s)
redraw_sel FEELMENU.C /^redraw_sel(m)
toggle_draw_mode FEELMENU.C /^toggle_draw_mode(m)
tog_pen FEELMENU.C /^tog_pen()
toggle_pen FEELMENU.C /^toggle_pen(m)
inc_sl FEELMENU.C /^inc_sl()
a_inc_slider FEELMENU.C /^a_inc_slider(m,vector)
inc_slider FEELMENU.C /^inc_slider(m)
dec_sl FEELMENU.C /^dec_sl()
a_dec_slider FEELMENU.C /^a_dec_slider(m,vector)
dec_slider FEELMENU.C /^dec_slider(m)
zero_group FEELMENU.C /^zero_group(m)
make_bhash TRUECOLO.C /^make_bhash()
is_bhash TRUECOLO.C /^is_bhash()
cycle_ccolor TRUECOLO.C /^cycle_ccolor()
make_render_cashes TRUECOLO.C /^make_render_cashes()
glow_lookup TRUECOLO.C /^UBYTE *glow_lookup;
free_bhash TRUECOLO.C /^free_bhash()
free_render_cashes TRUECOLO.C /^free_render_cashes()
color_ave TRUECOLO.C /^color_ave(x,y,rgb)
color_dif TRUECOLO.C /^color_dif(rgb,c)
c_closestc TRUECOLO.C /^c_closestc(rgb,c)
bclosest_col TRUECOLO.C /^bclosest_col(rgb,count)
desaturate TRUECOLO.C /^desaturate(rgb, d)
brighten_ccomp TRUECOLO.C /^brighten_ccomp(c)
rclosest_color TRUECOLO.C /^rclosest_color(oldc, underc)
tclosest_color TRUECOLO.C /^tclosest_color(underc)
tccolor TRUECOLO.C /^tccolor(dcolor, tcolor, tint
true_blend TRUECOLO.C /^true_blend(c1, c2, percent, 
true_blends TRUECOLO.C /^true_blends(c1,c2,p,q,d,coun
true_fades TRUECOLO.C /^true_fades(c1,rgb,p,q,d,coun
nz_fitting_cmap TRUECOLO.C /^nz_fitting_cmap(scm, dcm, ct
fitting_cmap TRUECOLO.C /^fitting_cmap(scm, dcm, ctabl
fitting_cmap TRUECOLO.C /^fitting_cmap(scm, dcm, ctabl
compromise_cmap TRUECOLO.C /^compromise_cmap(s1,s2,d)
free_cfont CFONT.C /^free_cfont()
print_font CFONT.C /^print_font(title, font)
save_font CFONT.C /^save_font(title, font)
load_install_font CFONT.C /^load_install_font(fname)
grab_usr_font CFONT.C /^grab_usr_font()
test_exe_head VIP.C /^test_exe_head(int file, Exe_
verify_exe_head VIP.C /^verify_exe_head(int file, Ex
check_exe VIP.C /^check_exe(char *name)
load_exe VIP.C /^void *load_exe(char *filenam
init_vip VIP.C /^init_vip(char *name)
vip_get_input VIP.C /^vip_get_input()
cleanup_vip VIP.C /^cleanup_vip()
usr_font RFONT.C /^struct font_hdr *usr_font = 
sail_name RFONT.C /^char sail_name[] = "SAIL.FNT
sail_data RFONT.C /^UBYTE sail_data[] = {
sail_ch_ofst RFONT.C /^WORD sail_ch_ofst[] = {
sail_font RFONT.C /^struct font_hdr sail_font =
intel_swap RFONT.C /^intel_swap(pt, count)
systext RFONT.C /^systext(s, x, y, color,tblit
gftext RFONT.C /^gftext(screen, f, s, x, y, c
gftext RFONT.C /^gftext(screen, f, s, x, y, c
write_sail_font RFONT.C /^write_sail_font()
fchar_width RFONT.C /^fchar_width(f,s)
fnstring_width RFONT.C /^long fnstring_width(f, s, n)
fstring_width RFONT.C /^long fstring_width(f, s)
widest_char RFONT.C /^widest_char(f)
font_cel_height RFONT.C /^font_cel_height(f)
sdot MARQI.C /^sdot(x,y)
marqidot MARQI.C /^marqidot(x,y)
swap_box MARQI.C /^swap_box()
rub_line MARQI.C /^rub_line()
some_frame MARQI.C /^some_frame(x0,y0,x1,y1,dotou
cut_cursor MARQI.C /^cut_cursor()
r_in_place MARQI.C /^r_in_place(x0,y0,x1,y1)
rub_in_place MARQI.C /^rub_in_place(x0,y0,x1,y1)
rub_box MARQI.C /^rub_box()
gcut_out MARQI.C /^gcut_out()
rs_box MARQI.C /^rs_box()
msome_vector MARQI.C /^msome_vector(pts, count, dot
marqi_poly MARQI.C /^marqi_poly(pts, count)
undo_poly MARQI.C /^undo_poly(pts, count)
box_coors MARQI.C /^box_coors(x,y,ox,oy)
move_box MARQI.C /^move_box(x0,y0,w,h)
cut_out MARQI.C /^cut_out()
rub_circle_diagonal MARQI.C /^rub_circle_diagonal()
pti_input MARQI.C /^pti_input()
center_rad MARQI.C /^center_rad()
rub_circle MARQI.C /^rub_circle()
quad9 MARQI.C /^quad9(x,y,w,h)
redisplay_drawer FILEMENU.C /^Vector redisplay_drawer;	/* 
wild_lst FILEMENU.C /^struct name_list *wild_lst;
new_dev FILEMENU.C /^new_dev(m)
go_rootdir FILEMENU.C /^go_rootdir(m)
go_updir FILEMENU.C /^go_updir(m)
type_file_name FILEMENU.C /^type_file_name(m)
undo_file FILEMENU.C /^undo_file(m)
undo_drawer FILEMENU.C /^undo_drawer(m)
dir_too_long FILEMENU.C /^dir_too_long(char *drawer, c
fsel_name FILEMENU.C /^fsel_name(m)
fq_drawer_stringq FILEMENU.C /^fq_drawer_stringq(m)
fq_toggle_wild FILEMENU.C /^fq_toggle_wild(m)
fq_wild_stringq FILEMENU.C /^fq_wild_stringq(m)
fq_ok FILEMENU.C /^fq_ok()
free_wild_list FILEMENU.C /^free_wild_list()
build_wild_list FILEMENU.C /^build_wild_list()
make_path_name FILEMENU.C /^make_path_name(drawer, file,
got_suffix FILEMENU.C /^got_suffix(f)
remove_suffix FILEMENU.C /^remove_suffix(s)
fq_ok_plus FILEMENU.C /^fq_ok_plus()
hook_devices FILEMENU.C /^hook_devices(m, buttons)
get_filename FILEMENU.C /^get_filename(prompt, suffix)
recordall MACRO.C /^int recordall = 1;
clickonly MACRO.C /^char clickonly;
usemacro MACRO.C /^char usemacro;
inwaittil MACRO.C /^char inwaittil;
start_macro MACRO.C /^start_macro()
realtime_macro MACRO.C /^realtime_macro()
use_macro MACRO.C /^use_macro()
repeat_macro MACRO.C /^repeat_macro()
close_macro MACRO.C /^close_macro()
get_macro MACRO.C /^get_macro()
put_macro MACRO.C /^put_macro(click)
save_macro MACRO.C /^save_macro()
load_macro MACRO.C /^load_macro()
macrosync MACRO.C /^macrosync()
jexists JFILE.C /^jexists(title)
jdelete JFILE.C /^jdelete(title)
jrename JFILE.C /^jrename(oldname, newname)
jcreate JFILE.C /^jcreate(title)
jopen JFILE.C /^jopen(title, mode)
jclose JFILE.C /^jclose(f)
gentle_close JFILE.C /^gentle_close(f)
jreadwrite JFILE.C /^jreadwrite(f,buf,size,ah)
copy_in_file JFILE.C /^copy_in_file(file, bytes, so
jcopyfile JFILE.C /^jcopyfile(source,dest)
jseek JFILE.C /^jseek(f, offset, mode)
jtell JFILE.C /^jtell(f)
read_gulp JFILE.C /^read_gulp(name, buf, size)
write_gulp JFILE.C /^write_gulp(name, buf, size)
get_dos_err_line JFILE.C /^get_dos_err_line(char *errbu
cant_create JFILE.C /^cant_create(name)
cant_find JFILE.C /^cant_find(name)
truncated JFILE.C /^truncated(filename)
overwrite_old JFILE.C /^overwrite_old(name)
mangled JFILE.C /^mangled(name)
jdelete_rerr JFILE.C /^jdelete_rerr(title)
check_abort JFILE.C /^check_abort(frame, of)
really_delete JFILE.C /^really_delete(name)
short_path BROWSE.C /^short_path(Flicmenu *m)
browse_files BROWSE.C /^browse_files(say, button)
go_browse BROWSE.C /^go_browse()
poke_bg GFX.C /^poke_bg(p)
restore_bg GFX.C /^restore_bg()
flash_bg GFX.C /^flash_bg(p)
flash_green GFX.C /^flash_green()
flash_red GFX.C /^flash_red()
flash_blue GFX.C /^flash_blue()
see_cmap GFX.C /^see_cmap()
copy_form GFX.C /^copy_form(s, d)
xor_form GFX.C /^xor_form(s,d)
exchange_form GFX.C /^exchange_form(s, d)
color_form GFX.C /^color_form(f,color)
zero_lots GFX.C /^zero_lots(pt, size)
clear_form GFX.C /^clear_form(f)
cclear_form GFX.C /^cclear_form(f)
draw_frame GFX.C /^draw_frame(color, x0, y0, x1
sscale_by GFX.C /^sscale_by(x,p,q)
uscale_by GFX.C /^uscale_by(x, p, q)
rscale_by GFX.C /^rscale_by(x,p,q)
count_cused GFX.C /^count_cused(c, i)
make_cused GFX.C /^make_cused(p, c)
exchange_bytes GFX.C /^exchange_bytes(a, b, count)
tflxname CONFIG.C /^char tflxname[] = "H:\\AAT\\
new_tflx_name CONFIG.C /^char new_tflx_name[] = "H:\\
tmacro_name CONFIG.C /^char tmacro_name[] = "H:\\AA
alt_name CONFIG.C /^char alt_name[] = "H:\\AAT\\
screen_name CONFIG.C /^char screen_name[] = "H:\\AA
cel_name CONFIG.C /^char cel_name[] = "H:\\AAT\\
text_name CONFIG.C /^char text_name[] = "H:\\AAT\
cclip_name CONFIG.C /^char cclip_name[] = "H:\\AAT
mask_name CONFIG.C /^char mask_name[] = "H:\\AAT\
poly_name CONFIG.C /^char poly_name[] = "H:\\AAT\
poly1_name CONFIG.C /^char poly1_name[] = "H:\\AAT
poly2_name CONFIG.C /^char poly2_name[] = "H:\\AAT
ppoly_name CONFIG.C /^char ppoly_name[] = "H:\\AAT
bscreen_name CONFIG.C /^char bscreen_name[] = "H:\\A
another_name CONFIG.C /^char another_name[] = "H:\\A
optics_name CONFIG.C /^char optics_name[] = "H:\\AA
default_name CONFIG.C /^char default_name[] = "DEFAU
conf_name CONFIG.C /^char conf_name[] = "aa.cfg";
vconfg CONFIG.C /^struct config vconfg;					/*
vconfg_ext CONFIG.C /^struct config_ext vconfg_ext
path_temps CONFIG.C /^path_temps(c)
do_copy_overs CONFIG.C /^do_copy_overs(char olddev, c
rewrite_config CONFIG.C /^rewrite_config()
new_config CONFIG.C /^new_config()
qedit_text TEXTEDIT.C /^qedit_text()
qplace_text TEXTEDIT.C /^qplace_text()
qpwt TEXTEDIT.C /^qpwt(paste)
ttool TEXTEDIT.C /^ttool(paste)
text_tool TEXTEDIT.C /^text_tool()
qfont_text TEXTEDIT.C /^qfont_text()
string_in NAMES.C /^string_in(pat, string)
to_upper NAMES.C /^to_upper(s)
ustrcmp NAMES.C /^ustrcmp(as, bs)
ustrncmp NAMES.C /^ustrncmp(as, bs, len)
upc NAMES.C /^upc(s)
tr_string NAMES.C /^tr_string(string, in, out)
cut_suffix NAMES.C /^cut_suffix(title, suffix)
suffix_in NAMES.C /^suffix_in(string, suff)
lines_size NAMES.C /^lines_size(lines)
el_ix NAMES.C /^el_ix(list, el)
list_el NAMES.C /^list_el(list, ix)
list_ix NAMES.C /^list_ix(list, el)
els_in_list NAMES.C /^els_in_list(list)
remove_el NAMES.C /^remove_el(list,el)
sort_list NAMES.C /^sort_list(list, cmp)
sort_name_list NAMES.C /^sort_name_list(list)
jstrcmp NAMES.C /^jstrcmp(a, b)
sort_array NAMES.C /^sort_array(array, count, cmp
name_in_list NAMES.C /^name_in_list(name, list)
clone_string NAMES.C /^clone_string(s)
bitmasks NAMES.C /^unsigned char bitmasks[8] =
getbit NAMES.C /^getbit(table, ix)
setbit NAMES.C /^setbit(table,ix)
free_list NAMES.C /^free_list(lst)
free_name_list NAMES.C /^free_name_list(lst)
longest_string NAMES.C /^longest_string(strings, coun
intabs NAMES.C /^intabs(a)
intmin NAMES.C /^intmin(a, b)
reverse_bytes NAMES.C /^reverse_bytes(b,count)
exchange_buf NAMES.C /^exchange_buf(s1, s2, count)
back_copy_bytes NAMES.C /^back_copy_bytes(s,d,count)
ovalf_tool ELLIPSE.C /^ovalf_tool()
cluster_count VPSUBS.C /^cluster_count()
cluster_bundle VPSUBS.C /^cluster_bundle()
dmd_lookup VPSUBS.C /^UBYTE dmd_lookup[] =
idmd_lookup VPSUBS.C /^UBYTE idmd_lookup[sizeof(dmd
rethink_settings VPSUBS.C /^rethink_settings()
default_settings VPSUBS.C /^default_settings()
in_ctable VPSUBS.C /^in_ctable(color, table, coun
restore VPSUBS.C /^restore()
mrestore VPSUBS.C /^mrestore()
mundo_pic VPSUBS.C /^mundo_pic()
undo_pic VPSUBS.C /^undo_pic()
init_seq VPSUBS.C /^init_seq()
kill_seq VPSUBS.C /^kill_seq()
flush_tempflx VPSUBS.C /^flush_tempflx()
outofhere VPSUBS.C /^outofhere()
toggle_menu VPSUBS.C /^toggle_menu()
defrag VPSUBS.C /^defrag()
interp_range VPSUBS.C /^interp_range(c1, c2,  i, div
fli_comp_frame WRITEFLI.C /^fli_comp_frame(comp_buf, las
fli_first_frame WRITEFLI.C /^fli_first_frame(cbuf, name,f
fli_next_frame WRITEFLI.C /^fli_next_frame(cbuf,last_scr
fli_last_frame WRITEFLI.C /^fli_last_frame(cbuf,last_scr
aa_vip INPUT.C /^Vip aa_vip;
gel_input INPUT.C /^WORD gel_input;
firstx INPUT.C /^WORD firstx, firsty;
firsty INPUT.C /^WORD firstx, firsty;
omouse_button INPUT.C /^WORD omouse_button;
grid_x INPUT.C /^WORD grid_x, grid_y;
grid_y INPUT.C /^WORD grid_x, grid_y;
uzx INPUT.C /^WORD uzx,uzy;	/* unzoomed xy
uzy INPUT.C /^WORD uzx,uzy;	/* unzoomed xy
lastx INPUT.C /^WORD lastx, lasty;
lasty INPUT.C /^WORD lastx, lasty;
mouse_moved INPUT.C /^WORD mouse_moved;	/* mouse n
key_hit INPUT.C /^WORD key_hit;
key_in INPUT.C /^WORD key_in;
mouse_on INPUT.C /^WORD mouse_on = 1;
zoomcursor INPUT.C /^char zoomcursor;
brushcursor INPUT.C /^PLANEPTR brushcursor;
mouse_regs INPUT.C /^union regs mouse_regs;
got_mouse INPUT.C /^char got_mouse;
init_hr INPUT.C /^init_hr()
reuse_input INPUT.C /^reuse_input()
hide_mouse INPUT.C /^hide_mouse()
show_mouse INPUT.C /^show_mouse()
get_gridxy INPUT.C /^get_gridxy()
c_input INPUT.C /^c_input()
check_input INPUT.C /^check_input()
vsync_input INPUT.C /^vsync_input(count)
timed_input INPUT.C /^timed_input(count)
wait_input INPUT.C /^wait_input()
wait_penup INPUT.C /^wait_penup()
wait_rup INPUT.C /^wait_rup()
wait_click INPUT.C /^wait_click()
mouse_int INPUT.C /^/*FCN*mouse_int(fcn)
ucursor INPUT.C /^ucursor()
get80hz INPUT.C /^get80hz()
wait_sync INPUT.C /^wait_sync()
wait_a_jiffy INPUT.C /^wait_a_jiffy(j)
wait_til INPUT.C /^wait_til(time)
diamond_cursor BRUSH.C /^UBYTE diamond_cursor[] = {
default_c BRUSH.C /^struct cursor default_c = {0
spray1_cursor BRUSH.C /^UBYTE spray1_cursor[] = {
spray2_cursor BRUSH.C /^UBYTE spray2_cursor[] = {
diagonal_cursor BRUSH.C /^UBYTE diagonal_cursor[] = {
circ3_cursor BRUSH.C /^UBYTE circ3_cursor[] = {
dot_pens BRUSH.C /^UBYTE *dot_pens[] = {dot_c, 
white_cursor BRUSH.C /^PLANEPTR white_cursor = (PLA
black_cursor BRUSH.C /^	black_cursor = (PLANEPTR)de
show_1_frame SPLICE.C /^show_1_frame(title, fd, lscr
qload_splice SPLICE.C /^qload_splice()
bclose BFILE.C /^bclose(bf)
bopen BFILE.C /^bopen(name, bf)
bcreate BFILE.C /^bcreate(name, bf)
bflush BFILE.C /^bflush(bf)
bseek BFILE.C /^bseek(bf, offset, mode)
bputbyte BFILE.C /^bputbyte(bf,c)
bwrite BFILE.C /^bwrite(bf, buf, count)
bgetbyte BFILE.C /^bgetbyte(bf)
bread BFILE.C /^bread(bf, buf, count)
continu_line TEXTBOX.C /^continu_line(line)
continu_box TEXTBOX.C /^continu_box(lines)
stand_by_box TEXTBOX.C /^stand_by_box(lines)
stand_by TEXTBOX.C /^stand_by(line)
yes_no_box TEXTBOX.C /^yes_no_box(lines)
yes_no_line TEXTBOX.C /^yes_no_line(line)
do_key_box TEXTBOX.C /^do_key_box(names)
rgb_to_hls HLSTORGB.C /^rgb_to_hls(r,g,b,h,l,s)
hls_to_rgb HLSTORGB.C /^hls_to_rgb(r, g, b, h, l, s)
pack_cmap CPACK.C /^pack_cmap(source,scount,dest
a3d_menu A3DDAT.C /^Flicmenu a3d_menu = 
got_path A3DDAT.C /^WORD got_path;
inspin A3DDAT.C /^char inspin;
a3d_disables A3DDAT.C /^a3d_disables()
arrange_a3d_menu A3DDAT.C /^arrange_a3d_menu()
rthread_cmap CTHREAD.C /^rthread_cmap(gotit, scmap, d
multimenu MULTIMEN.C /^multimenu(v)
go_multi MULTIMEN.C /^go_multi()
pxmin SCANEDGE.C /^int pxmin, pxmax, pymin, pym
pxmax SCANEDGE.C /^int pxmin, pxmax, pymin, pym
pymin SCANEDGE.C /^int pxmin, pxmax, pymin, pym
pymax SCANEDGE.C /^int pxmin, pxmax, pymin, pym
find_pminmax SCANEDGE.C /^find_pminmax(poly)
fill_concave SCANEDGE.C /^fill_concave(poly)
free_alt ALT.C /^free_alt()
grab_alt ALT.C /^grab_alt()
swap_alt ALT.C /^swap_alt()
ccircle CIRCLE.C /^ccircle(xcen, ycen, rad, dot
cline CLINE.C /^cline(x1, y1, x2, y2, dotout
ccolor_sel QUICKDAT.C /^Flicmenu ccolor_sel = {
it0_sel QUICKDAT.C /^Flicmenu it0_sel = {
itgroup_sel QUICKDAT.C /^Flicmenu itgroup_sel = {
minitime_sel QUICKDAT.C /^Flicmenu minitime_sel = {
spec1_sel QUICKDAT.C /^Flicmenu spec1_sel = {
ink_group_sel QUICKDAT.C /^Flicmenu ink_group_sel = {
dsel1_sel QUICKDAT.C /^Flicmenu dsel1_sel = {
dsel_group_sel QUICKDAT.C /^Flicmenu dsel_group_sel = {
dsel_hanger_sel QUICKDAT.C /^Flicmenu dsel_hanger_sel = {
quick_menu QUICKDAT.C /^Flicmenu quick_menu = 
see_pen QUICKDAT.C /^see_pen(m)
predraw QUICKDAT.C /^predraw()
toggle_mask QUICKDAT.C /^toggle_mask(m)
see_mask_m QUICKDAT.C /^see_mask_m(m)
bmasks FLOOD.C /^UBYTE bmasks[] = {0x80,0x40,
fill FLOOD.C /^fill(x,y)
flood FLOOD.C /^flood(x,y,endcolor)
default_vs GLOBALS.C /^Vsettings default_vs = 
vs GLOBALS.C /^Vsettings vs;		/* The settin
ivmode GLOBALS.C /^int ivmode;			/* Video mode 
init_drawer GLOBALS.C /^char init_drawer[71];	/* dir
sys_cmap GLOBALS.C /^UBYTE sys_cmap[COLORS*3];
vf GLOBALS.C /^Vscreen vf = { 0,0,XMAX,YMAX
menu_vf GLOBALS.C /^Vscreen menu_vf = { 0,0,XMAX
uf GLOBALS.C /^Vscreen uf = { 0,0,XMAX,YMAX
render_form GLOBALS.C /^Vscreen *render_form = &vf;
alt_form GLOBALS.C /^Vscreen *alt_form;
cel GLOBALS.C /^Vcel *cel;
mask_plane GLOBALS.C /^PLANEPTR mask_plane;
text_buf GLOBALS.C /^char *text_buf;
text_size GLOBALS.C /^int text_size;
text_alloc GLOBALS.C /^int text_alloc;
under_flag GLOBALS.C /^char under_flag;
devices GLOBALS.C /^char devices[26];
dev_count GLOBALS.C /^int dev_count;
sqr_root SQRROOT.C /^sqr_root(i)
calc_distance SQRROOT.C /^calc_distance(x1,y1,x2,y2)
render_line THIKLINE.C /^render_line(x,y,xx,yy)
render_1_line THIKLINE.C /^render_1_line(x,y,xx,yy)
device FILEDATA.C /^WORD device;
fdev3_sel FILEDATA.C /^Flicmenu fdev3_sel =
fdev2_sel FILEDATA.C /^Flicmenu fdev2_sel =
wild FILEDATA.C /^char wild[12];
wild_stringq FILEDATA.C /^struct stringq wild_stringq 
fwild_sel FILEDATA.C /^Flicmenu fwild_sel =
und_drawer FILEDATA.C /^char und_drawer[71] = "c:";
drawer_stringq FILEDATA.C /^struct stringq drawer_string
fdrawer_sel FILEDATA.C /^Flicmenu fdrawer_sel =
file_stringq FILEDATA.C /^struct stringq file_stringq 
ffile_sel FILEDATA.C /^Flicmenu ffile_sel =
fscroller FILEDATA.C /^struct name_scroller fscroll
flist_sel FILEDATA.C /^Flicmenu flist_sel =
fscroll_sel FILEDATA.C /^Flicmenu fscroll_sel =
ftitle_sel FILEDATA.C /^Flicmenu ftitle_sel =
fileq_menu FILEDATA.C /^Flicmenu fileq_menu = 
init_wacom WACOM.C /^init_wacom()
wacom_get_input WACOM.C /^wacom_get_input()
cst_cancel COMMONST.C /^char cst_cancel[] = commonst
cst__cancel COMMONST.C /^char cst__cancel[] = commons
cst_ok COMMONST.C /^char cst_ok[]	= commonst_101
cst_ COMMONST.C /^char cst_[] = "";
cst_space COMMONST.C /^char cst_space[] = " ";
cst_fsep COMMONST.C /^char cst_fsep[] = "\\";
cst_wild_all COMMONST.C /^char cst_wild_all[] = "*.*";
to_tablet TABLET.C /^to_tablet(c)
read_tablet TABLET.C /^read_tablet(c, count)
comm_ready TABLET.C /^comm_ready()
flush_comm TABLET.C /^flush_comm()
wait_10milli TABLET.C /^wait_10milli()
uf_in_emm CLEANUP.C /^char uf_in_emm;		/* undo buf
emm_handle CLEANUP.C /^int emm_handle;		/* EMM hand
config_ints CLEANUP.C /^config_ints()
unconfig_ints CLEANUP.C /^unconfig_ints()
old_video CLEANUP.C /^old_video()
cleanup_input CLEANUP.C /^cleanup_input()
uninit_sys CLEANUP.C /^uninit_sys()
fill_tool PENTOOLS.C /^fill_tool()
flood_tool PENTOOLS.C /^flood_tool()
edge_tool PENTOOLS.C /^edge_tool()
drizl_tool PENTOOLS.C /^drizl_tool()
streak_tool PENTOOLS.C /^streak_tool()
draw_tool PENTOOLS.C /^draw_tool()
spray_tool PENTOOLS.C /^spray_tool()
circle_tool PENTOOLS.C /^circle_tool()
line_tool PENTOOLS.C /^line_tool()
gel_tool GEL.C /^gel_tool()
fhead TEMPFLX.C /^struct fli_head fhead;
cur_flx TEMPFLX.C /^Flx *cur_flx;
tflx TEMPFLX.C /^int tflx;	/* handle for temp
close_tflx TEMPFLX.C /^close_tflx()
empty_tempflx TEMPFLX.C /^empty_tempflx()
otempflx TEMPFLX.C /^otempflx()
open_tempflx TEMPFLX.C /^open_tempflx()
write_tflx_start TEMPFLX.C /^write_tflx_start(tablesize)
frame_to_tflx TEMPFLX.C /^frame_to_tflx(sfile, name, f
make_tempflx TEMPFLX.C /^make_tempflx(name)
finish_tflx TEMPFLX.C /^finish_tflx()
ring_tflx TEMPFLX.C /^ring_tflx(cbuf)
frame1_foff TEMPFLX.C /^frame1_foff()
gary_menu_ww SEEME.C /^gary_menu_ww(m)
sunder_menu SEEME.C /^sunder_menu(m)
sdraw_menu SEEME.C /^sdraw_menu(m)
runder_menu SEEME.C /^runder_menu(m,pt)
qdraw_a_menu SEEME.C /^qdraw_a_menu(m)
hilit SEEME.C /^hilit(m)
a_block SEEME.C /^a_block(color, m)
a_frame SEEME.C /^a_frame(color, m)
box_diag_corner SEEME.C /^box_diag_corner(x0,y0,w,h,co
mb_ccorner SEEME.C /^mb_ccorner(m,color)
mb_isquare SEEME.C /^mb_isquare(m,color)
blacktext SEEME.C /^blacktext(m)
greytext SEEME.C /^greytext(m)
menu_text SEEME.C /^menu_text(m,color)
ccorner_text SEEME.C /^ccorner_text(m)
dcorner_text SEEME.C /^dcorner_text(m)
ddcorner_text SEEME.C /^ddcorner_text(m)
move_tab_text SEEME.C /^move_tab_text(m)
ncorner_text SEEME.C /^ncorner_text(m)
ncorner_int SEEME.C /^ncorner_int(m)
ncorner_number SEEME.C /^ncorner_number(m)
ncorner_cursor SEEME.C /^ncorner_cursor(m)
ccorner_cursor SEEME.C /^ccorner_cursor(m)
gary_see_title SEEME.C /^gary_see_title(m)
gary_menu_back SEEME.C /^gary_menu_back(m)
gbnumber_plus1 SEEME.C /^gbnumber_plus1(m)
left_text SEEME.C /^left_text(m)
free_poly POLYTOOL.C /^free_poly(p)
clone_poly_list POLYTOOL.C /^LLpoint *clone_poly_list(LLp
clone_poly POLYTOOL.C /^Poly *clone_poly(Poly *p)
dot_poly POLYTOOL.C /^dot_poly(poly, dotout)
some_poly POLYTOOL.C /^some_poly(poly, vector)
poly_last_point POLYTOOL.C /^poly_last_point(p)
render_poly POLYTOOL.C /^render_poly(wply, filled)
rado_poly POLYTOOL.C /^rado_poly(ado_s, ptcount, fi
poly_grad_dims POLYTOOL.C /^poly_grad_dims(p)
finish_polyt POLYTOOL.C /^finish_polyt(filled)
maybe_finish_polyt POLYTOOL.C /^maybe_finish_polyt(filled)
poly_add_point POLYTOOL.C /^poly_add_point()
start_polyt POLYTOOL.C /^start_polyt()
polyf_tool POLYTOOL.C /^polyf_tool()
mmake_path POLYTOOL.C /^mmake_path()
make_poly POLYTOOL.C /^make_poly()
curve_tool POLYTOOL.C /^curve_tool()
shapef_tool POLYTOOL.C /^shapef_tool()
make_sp_wpoly POLYTOOL.C /^make_sp_wpoly(x0,y0,rad,thet
rpolyf_tool POLYTOOL.C /^rpolyf_tool()
starf_tool POLYTOOL.C /^starf_tool()
petlf_tool POLYTOOL.C /^petlf_tool()
load_working_poly POLYTOOL.C /^load_working_poly()
load_poly POLYTOOL.C /^load_poly(name)
save_poly POLYTOOL.C /^save_poly(name,  poly)
is_closedp POLYTOOL.C /^is_closedp()
rub_wpoly POLYTOOL.C /^rub_wpoly()
undraw_wpoints POLYTOOL.C /^undraw_wpoints()
move_poly_points POLYTOOL.C /^move_poly_points()
linkup_poly POLYTOOL.C /^linkup_poly(p)
qblue_pic BLUE.C /^qblue_pic()
qunblue_pic BLUE.C /^qunblue_pic()
insert_tween BLUE.C /^insert_tween()
clean_tween BLUE.C /^clean_tween()
qget_changes BLUE.C /^qget_changes()
qnext_changes BLUE.C /^qnext_changes()
qnext_blue BLUE.C /^qnext_blue()
init_summa SUMMA.C /^init_summa()
summa_get_input SUMMA.C /^summa_get_input()
cleanup_summa SUMMA.C /^cleanup_summa()
zin CURSORDA.C /^struct cursor zin = {0, izin
zout CURSORDA.C /^struct cursor zout = {0, izo
cdown CURSORDA.C /^struct cursor cdown = 	{ 0, 
cleft CURSORDA.C /^struct cursor cleft = 	{ 0, 
cright CURSORDA.C /^struct cursor cright = 	{ 0,
cup CURSORDA.C /^struct cursor cup = 	{ 0, iu
cright2 CURSORDA.C /^struct cursor cright2 = 	{ 0
ctridown CURSORDA.C /^struct cursor ctridown = 	{ 
ctriup CURSORDA.C /^struct cursor ctriup = 	{ 0,
Qccb CHOICES.C /^	} Qccb;
qchoice CHOICES.C /^qchoice(header, choices, cco
qmenu CHOICES.C /^qmenu(header, choices, ccoun
fake_push FREEM.C /^fake_push()
push_screen FREEM.C /^push_screen()
load_temp_cel FREEM.C /^load_temp_cel()
push_cel FREEM.C /^push_cel()
push_text FREEM.C /^push_text()
loaded_screen FREEM.C /^char loaded_screen;
pop_screen FREEM.C /^pop_screen()
pop_cel FREEM.C /^pop_cel()
pop_text FREEM.C /^pop_text()
push_most FREEM.C /^push_most()
push_pics FREEM.C /^push_pics()
pop_most FREEM.C /^pop_most()
pop_pics FREEM.C /^pop_pics()
check_loaded_screen FREEM.C /^check_loaded_screen()
maybe_push_most FREEM.C /^maybe_push_most()
maybe_pop_most FREEM.C /^maybe_pop_most()
push_inks FREEM.C /^push_inks()
ink_push_cel FREEM.C /^ink_push_cel()
ink_pop_cel FREEM.C /^ink_pop_cel()
pop_inks FREEM.C /^pop_inks()
dseg AUTOSEG.C /^dseg(rvec)
venetian_tween DISSOLVE.C /^venetian_tween(s2, d, tix, t
dissolve_tween DISSOLVE.C /^dissolve_tween(s2, d, tix, t
diskd_tween DISSOLVE.C /^diskd_tween(s2, d, tix, tcou
random RANDOM.C /^random()
edge1 SEP.C /^edge1(ecolor)
separate SEP.C /^separate()
sep_tool SEP.C /^sep_tool()
dirty_file SAVEFLI.C /^char dirty_file;
dirty_frame SAVEFLI.C /^char dirty_frame;
dirtyf SAVEFLI.C /^dirtyf()
dirties SAVEFLI.C /^dirties()
cleans SAVEFLI.C /^cleans()
scrub_cur_frame SAVEFLI.C /^scrub_cur_frame()
noroom SAVEFLI.C /^noroom()
write_tflx SAVEFLI.C /^write_tflx(cbuf, size)
fli_comp1 SAVEFLI.C /^fli_comp1(cbuf,this_screen,t
f_tempflx SAVEFLI.C /^f_tempflx()
sub_cur_frame SAVEFLI.C /^sub_cur_frame()
sv_fli SAVEFLI.C /^sv_fli(name)
save_fli SAVEFLI.C /^save_fli(name)
sixhi_data SIXHI.C /^UBYTE sixhi_data[] = {
sixhi_font SIXHI.C /^struct font_hdr sixhi_font =
change_dev DOSSTUFF.C /^change_dev(newdev)
change_dir DOSSTUFF.C /^change_dir(name)
get_device DOSSTUFF.C /^get_device()
get_devices DOSSTUFF.C /^get_devices()
valid_device DOSSTUFF.C /^valid_device(d)
make_current_drawer DOSSTUFF.C /^make_current_drawer()
make_dir DOSSTUFF.C /^make_dir(name)
dfree DOSSTUFF.C /^dfree(d)
feel_string_req STRINGQ.C /^feel_string_req(m)
see_string_req STRINGQ.C /^see_string_req(m)
init_stq_string STRINGQ.C /^init_stq_string(stq)
undo_stringq STRINGQ.C /^undo_stringq(m, stq_item)
upd_stringq STRINGQ.C /^upd_stringq(name, stringq)
sys5 INITCMAP.C /^UBYTE sys5;		/* Has system t
init_cmap INITCMAP.C /^UBYTE init_cmap[COLORS*3] = 
pure_white INITCMAP.C /^UBYTE pure_white[3] = {63,63
pure_black INITCMAP.C /^UBYTE pure_black[3] = {0,0,0
pure_red INITCMAP.C /^UBYTE pure_red[] = {63, 0, 0
pure_green INITCMAP.C /^UBYTE pure_green[] = {0, 63,
pure_blue INITCMAP.C /^UBYTE pure_blue[] = {0, 0, 6
mc_colors INITCMAP.C /^WORD mc_colors[5];
visible_cmap INITCMAP.C /^visible_cmap()
uncheck_cmap INITCMAP.C /^uncheck_cmap()
find_colors INITCMAP.C /^find_colors()
dtextcel TEXTWIND.C /^dtextcel()
rub_twin TEXTWIND.C /^rub_twin()
free_text TEXTWIND.C /^free_text()
imax A3D.C /^int imax(int a, int b)
otoobig A3D.C /^otoobig()
default_center A3D.C /^default_center(v)
xform_to_ado_poly A3D.C /^xform_to_ado_poly(sp0, sp1, 
iscale_theta A3D.C /^iscale_theta()
ado_xyz_slider A3D.C /^ado_xyz_slider(m)
xyz_zero_sl A3D.C /^xyz_zero_sl(m)
tween_pt_count A3D.C /^tween_pt_count(Poly *p1, Pol
mado_preview A3D.C /^mado_preview()
mauto_ado A3D.C /^mauto_ado()
qload_a3d A3D.C /^qload_a3d()
qsave_a3d A3D.C /^qsave_a3d()
mview_path A3D.C /^mview_path()
edit_path A3D.C /^edit_path()
move_along A3D.C /^move_along(m)
go_ado A3D.C /^go_ado()
pmhmpauto AUTO.C /^pmhmpauto(what)
hmpauto AUTO.C /^hmpauto(what)
uzauto AUTO.C /^uzauto(what)
clear_pic AUTO.C /^clear_pic()
auto_blue_nums AUTO.C /^auto_blue_nums()
auto_trails AUTO.C /^auto_trails()
greys_only AUTO.C /^greys_only()
auto_engrave AUTO.C /^auto_engrave()
auto_dither AUTO.C /^auto_dither()
auto_put AUTO.C /^auto_put()
auto_set AUTO.C /^auto_set()
crop_video AUTO.C /^crop_video()
auto_shrink AUTO.C /^auto_shrink()
quantize AUTO.C /^quantize()
auto_expand AUTO.C /^auto_expand()
dauto AUTO.C /^dauto(rvec, frame_mode)
clip_tseg AUTO.C /^clip_tseg()
tr_r1 AUTO.C /^int tr_r1,tr_r2;
tr_r2 AUTO.C /^int tr_r1,tr_r2;
tr_rdir AUTO.C /^int tr_rdir;
tr_tix AUTO.C /^int tr_tix;
tr_frames AUTO.C /^int tr_frames;
find_seg_range AUTO.C /^find_seg_range()
find_range AUTO.C /^find_range()
calc_time_scale AUTO.C /^calc_time_scale(ix, intween)
auto_apply AUTO.C /^auto_apply(rvec, ix, intween
dopreview AUTO.C /^dopreview(rvec)
dopreview AUTO.C /^dopreview(rvec)
doauto AUTO.C /^doauto(rvec)
gif_wpt COMPRS.C /^unsigned char *gif_wpt;
gif_wcount COMPRS.C /^long gif_wcount;
gif_compress_data COMPRS.C /^gif_compress_data(min_code_s
add_option DRAWMODE.C /^Option_list add_option =
dm_list DRAWMODE.C /^Option_list *dm_list = first
ink_word DRAWMODE.C /^ink_word()
force_opaque DRAWMODE.C /^force_opaque(m)
see_cur_ink DRAWMODE.C /^see_cur_ink(m)
add_up_frames FINDFREE.C /^add_up_frames()
flx_file_hi FINDFREE.C /^flx_file_hi()	/* return last
ff_tflx FINDFREE.C /^ff_tflx(size, xcount, xpt)
find_free_tflx FINDFREE.C /^find_free_tflx(size)
find_conjugates GEOMETRY.C /^find_conjugates(function)
fccomp FCCOMP.C /^fccomp(s1, s2, cbuf, count)
postage_stamp PSTAMP.C /^postage_stamp(x,y,name)
menu_ix PULL.C /^char menu_ix, sel_ix;
sel_ix PULL.C /^char menu_ix, sel_ix;
draw_pull PULL.C /^WORD *draw_pull(), *save_beh
in_pblock PULL.C /^in_pblock(x, y, p)
pull_color PULL.C /^pull_color(x, y, p)
pull_block PULL.C /^pull_block(x, y, p)
pull_oblock PULL.C /^pull_oblock(x, y, p)
pull_text PULL.C /^pull_text(x, y, p)
pull_brush PULL.C /^pull_brush(x, y, p)
abehind PULL.C /^WORD *abehind, *bbehind, *cb
bbehind PULL.C /^WORD *abehind, *bbehind, *cb
cbehind PULL.C /^WORD *abehind, *bbehind, *cb
mbehind PULL.C /^WORD *mbehind;	/* buffer for
draw_mp PULL.C /^draw_mp()
hide_mp PULL.C /^hide_mp()
interp_pull PULL.C /^interp_pull()
see_pull PULL.C /^see_pull(x,y,p)
unxmenu PULL.C /^unxmenu(p)
xone PULL.C /^xone(p, one)
xonflag PULL.C /^xonflag(p, flag)
enable_pulls PULL.C /^enable_pulls(p)
update_mask_pulls PULL.C /^update_mask_pulls()
pull_keys PULL.C /^pull_keys(p)
init_input INIT.C /^init_input()
init_sys INIT.C /^init_sys()
diag_to_table ROTATE.C /^diag_to_table(s,sbpr,dtable,
sq_poly ROTATE.C /^sq_poly(w, h, x, y, dest)
raster_transform ROTATE.C /^raster_transform(b, dpoly, f
vrotate_cel ROTATE.C /^vrotate_cel()
ccolor_box SEEMENU.C /^ccolor_box(m)
see_menu_back SEEMENU.C /^see_menu_back( m)
color_block1 SEEMENU.C /^color_block1(color,m)
m2color_block SEEMENU.C /^m2color_block(m, fcolor, bco
white_block SEEMENU.C /^white_block(m)
black_block SEEMENU.C /^black_block(m)
grey_block SEEMENU.C /^grey_block(m)
bwtext SEEMENU.C /^bwtext(m)
wbtext SEEMENU.C /^wbtext(m)
wbtexty1 SEEMENU.C /^wbtexty1(m)
wbtext_offset SEEMENU.C /^wbtext_offset(m, dx, dy)
see_num SEEMENU.C /^see_num(m, xoff, yoff, fore)
menu_cursor SEEMENU.C /^menu_cursor(m, color,c)
bcursor SEEMENU.C /^bcursor(m)
inverse_c SEEMENU.C /^inverse_c(m, c)
right_arrow SEEMENU.C /^right_arrow(m)
hilight SEEMENU.C /^hilight(m)
draw_sel SEEMENU.C /^draw_sel(m)
see_cluster SEEMENU.C /^see_cluster(m)
f_cbun SEEMENU.C /^f_cbun(m)
feel_cluster SEEMENU.C /^feel_cluster(m)
parent_menu SEEMENU.C /^parent_menu(parent, match)
draw_menus SEEMENU.C /^draw_menus(m)
unhi_group SEEMENU.C /^unhi_group(m, mgroup)
hi_group SEEMENU.C /^hi_group(m, mgroup)
cursor_box SEEMENU.C /^cursor_box(m)
text_boxp1 SEEMENU.C /^text_boxp1(m)
white_frame SEEMENU.C /^white_frame(m)
isin SINTAB.C /^isin(t)
icos SINTAB.C /^icos(t)
itmult SINTAB.C /^itmult(trig, x)
polar SINTAB.C /^polar(theta, rad, xy)
rotate_points SINTAB.C /^rotate_points(theta, cx, cy,
mem_free MEMORY.C /^unsigned mem_free;
ptr_offset MEMORY.C /^ptr_offset(offset, seg)
ptr_seg MEMORY.C /^ptr_seg(offset, seg)
make_long MEMORY.C /^make_long(l)
make_ptr MEMORY.C /^make_ptr(pt)
frags MEMORY.C /^frags()
largest_frag MEMORY.C /^largest_frag()
long_to_pt MEMORY.C /^long_to_pt(l)
pt_to_long MEMORY.C /^pt_to_long(offset, seg)
outta_memory MEMORY.C /^outta_memory()
mfree MEMORY.C /^mfree(nb, amount)
early_magic MEMORY.C /^early_magic(pt)
mem_to_magic MEMORY.C /^mem_to_magic(pt, amount)
check_mem_magic MEMORY.C /^check_mem_magic(p, amount)
freememory MEMORY.C /^freememory(pt)
laskmem MEMORY.C /^laskmem(size)
askmem MEMORY.C /^askmem(size)
lbegmem MEMORY.C /^lbegmem(size)
begmem MEMORY.C /^begmem(size)
begmemc MEMORY.C /^begmemc(size)
gentle_freemem MEMORY.C /^gentle_freemem(pt)
ck_block MEMORY.C /^ck_block(pt)
ck_heap MEMORY.C /^ck_heap()
check_heap MEMORY.C /^check_heap()
seal_heap MEMORY.C /^seal_heap()
see_qtslider SLIDER.C /^see_qtslider(m)
see_qslider SLIDER.C /^see_qslider(m)
in_left_arrow SLIDER.C /^in_left_arrow(m)
in_right_arrow SLIDER.C /^in_right_arrow(m)
feel_qslider SLIDER.C /^feel_qslider(m)
render_xy RENDER.C /^render_xy(x0,y0,x1,y1)
render_xywh RENDER.C /^render_xywh(x,y,w,h)
render_full_screen RENDER.C /^render_full_screen()
bizarre_blit RENDER.C /^bizarre_blit()
transpblit RENDER.C /^transpblit(tcel,clearcolor, 
make_brender_cashes RENDER.C /^make_brender_cashes()
free_brender_cashes RENDER.C /^free_brender_cashes()
rblit_cel RENDER.C /^rblit_cel(c)
cfit_rblit_cel RENDER.C /^cfit_rblit_cel(c)
render_cel RENDER.C /^render_cel()
render_blit RENDER.C /^render_blit(w,h,sx,sy,s, sbp
render_xmin RENDER.C /^int render_xmin, render_ymin
render_ymin RENDER.C /^int render_xmin, render_ymin
render_xmax RENDER.C /^int render_xmax = XMAX, rend
render_ymax RENDER.C /^int render_xmax = XMAX, rend
render_dot RENDER.C /^render_dot(x,y)
c_clip_blit RENDER.C /^c_clip_blit(p)
p RENDER.C /^register struct clipp {int w
render_bitmap_blit RENDER.C /^render_bitmap_blit(w,h,sx,sy
render_hline RENDER.C /^render_hline(y, x0, x1)
render_disk RENDER.C /^render_disk(cenx,ceny,rad)
render_frame RENDER.C /^render_frame(x0, y0, x1, y1)
render_box RENDER.C /^render_box(x,y,xx,yy)
r_box RENDER.C /^r_box(x,y,xx,yy)
brush_blitblock RENDER.C /^brush_blitblock(b)
render_brush RENDER.C /^render_brush(x,y)
render_outline RENDER.C /^render_outline(pt, count)
render_opoly RENDER.C /^render_opoly(poly)
render_circle RENDER.C /^render_circle(cenx, ceny, ra
render_separate RENDER.C /^render_separate(ctable, ccou
save_mask MASK.C /^save_mask(name)
load_mask MASK.C /^load_mask(name)
quse_mask MASK.C /^quse_mask()
qstencil MASK.C /^qstencil()
mgo_stencil MASK.C /^mgo_stencil()
draw_moos MORFOBJ.C /^draw_moos()
new_moo MORFOBJ.C /^Morf_obj *new_moo()
get_moo MORFOBJ.C /^Morf_obj *get_moo(int ix)
count_moos MORFOBJ.C /^count_moos()
free_moos MORFOBJ.C /^free_moos()
clear_all_moos MORFOBJ.C /^clear_all_moos()
add_new_moo MORFOBJ.C /^add_new_moo(Morf_obj *moo)
draw_moo MORFOBJ.C /^draw_moo(Morf_obj *moo)
free_moo MORFOBJ.C /^free_moo(Morf_obj *moo)
save_moo MORFOBJ.C /^save_moo(Morf_obj *moo, int 
load_moo MORFOBJ.C /^load_moo(Morf_obj *moo, int 
scroll SCROLLER.C /^struct name_scroller *scroll
calc_scroll_pos SCROLLER.C /^calc_scroll_pos(scroll, scro
iscroller SCROLLER.C /^iscroller(scr, names,scroll_
scroll_ycount SCROLLER.C /^scroll_ycount(list_sel)
init_scroller SCROLLER.C /^init_scroller(scroll, names,
redraw_scroller SCROLLER.C /^redraw_scroller(scroll_sel, 
end_clip_scroll SCROLLER.C /^end_clip_scroll()
ffeelscroll SCROLLER.C /^ffeelscroll(m)
fflscr SCROLLER.C /^fflscr(m, realtime)
print_list SCROLLER.C /^print_list(m)
see_scroll SCROLLER.C /^see_scroll(m)
which_sel SCROLLER.C /^which_sel(m)
sel_name SCROLLER.C /^sel_name(m)
fincup SCROLLER.C /^fincup(m)
fincdown SCROLLER.C /^fincdown(m)
tseg_group_sel TSEG.C /^Flicmenu tseg_group_sel = {
redraw_tseg TSEG.C /^redraw_tseg()
see_seg_size TSEG.C /^see_seg_size(m)
change_time_mode TSEG.C /^change_time_mode(m)
presets_pull A3DPULL.C /^Pull presets_pull =
set_ado_asterisks A3DPULL.C /^set_ado_asterisks()
a3d_pull_disables A3DPULL.C /^a3d_pull_disables()
qsave_backwards BACKWARD.C /^qsave_backwards()
cmap_to_cluster CLUSTER.C /^cmap_to_cluster(cmap, ccount
cluster_to_cmap CLUSTER.C /^cluster_to_cmap()
ccycle CLUSTER.C /^ccycle()
cl_cut CLUSTER.C /^cl_cut()
feel_pp CLUSTER.C /^feel_pp(m)
get_a_end CLUSTER.C /^get_a_end(dfunc)
cl_paste CLUSTER.C /^cl_paste()
cl_blend CLUSTER.C /^cl_blend()
some_cmod CLUSTER.C /^some_cmod(f, scale)
ctint CLUSTER.C /^ctint()
cneg CLUSTER.C /^cneg()
force_ramp CLUSTER.C /^force_ramp()
cclose CLUSTER.C /^cclose()
cluster_invert CLUSTER.C /^cluster_invert()
cluster_reverse CLUSTER.C /^cluster_reverse()
cluster_line CLUSTER.C /^cluster_line()
cunused CLUSTER.C /^cunused()
qselect_bundle CLUSTER.C /^qselect_bundle()
find_ramp CLUSTER.C /^find_ramp()
mselect_bundle CLUSTER.C /^mselect_bundle(m)
change_cluster_mode CLUSTER.C /^change_cluster_mode(m)
see_powell_palette CLUSTER.C /^see_powell_palette(m)
ping_cluster CLUSTER.C /^ping_cluster()
cl_swap CLUSTER.C /^cl_swap()
right_click_pp CLUSTER.C /^right_click_pp(m)
cpack CSORT.C /^cpack()
csort CSORT.C /^csort()
cthread CSORT.C /^cthread()
cspec CSORT.C /^cspec()
qgrid GRID.C /^qgrid()
root_pull MAINPULL.C /^struct pull root_pull = {
disables MAINPULL.C /^disables()
crit_errval DISKERR.C /^int crit_errval;
init_de DISKERR.C /^init_de()
one_palette ONEPAL.C /^one_palette()
zoom_form ZOOM.C /^Vscreen *zoom_form;
set_zoom_level ZOOM.C /^set_zoom_level()
unset_zoom ZOOM.C /^unset_zoom()
toggle_zoom ZOOM.C /^toggle_zoom(m)
ktoggle_zoom ZOOM.C /^ktoggle_zoom()
unzoom ZOOM.C /^unzoom()
rezoom ZOOM.C /^rezoom()
init_zoom ZOOM.C /^init_zoom()
pal_pull PALPULL.C /^	struct pull pal_pull = {
pal_disables PALPULL.C /^pal_disables()
pal_checks PALPULL.C /^pal_checks()
palette_selit PALPULL.C /^palette_selit(menu, sel)
qreq_number QNUMBER.C /^qreq_number(hailing, inum, m
save_pic SAVEPIC.C /^save_pic(name, screen, squaw
load_some_pic SAVEPIC.C /^load_some_pic(name, screen)
load_pic SAVEPIC.C /^load_pic(name, screen)
unscale_cmap SAVEPIC.C /^unscale_cmap(cmap)
load_vga SAVEPIC.C /^load_vga(name, screen)
set_pbrush SELBRUSH.C /^set_pbrush()
spiral_tool SPIRAL.C /^spiral_tool()
wwnext_line WORDWRAP.C /^wwnext_line(f, s, w, buf, su
wwcount_lines WORDWRAP.C /^wwcount_lines(f, s, w)
wwtext WORDWRAP.C /^wwtext(screen, f, s, x, y, w
justify_line WORDWRAP.C /^justify_line(screen, font, l
load_text WORDWRAP.C /^load_text(name)
save_text WORDWRAP.C /^save_text(name)
render_first STRETCH.C /^int render_first;
finish_stretch_rot STRETCH.C /^finish_stretch_rot(v)
vstretch_cel STRETCH.C /^vstretch_cel()
morf_pull MORFPULL.C /^	struct pull morf_pull = {
qload_faces MORFMENU.C /^qload_faces()
qsave_faces MORFMENU.C /^qsave_faces()
morf_func MORFMENU.C /^morf_func()
go_morf MORFMENU.C /^go_morf()
morf_tool MORFDATA.C /^int morf_tool;
morf_tool_group_sel MORFDATA.C /^Flicmenu morf_tool_group_sel
moo_3d MORFFACE.C /^Moo_point moo_3d[M3D_SIZE];
m3d_size MORFFACE.C /^int m3d_size = M3D_SIZE;
m3d_next MORFFACE.C /^int m3d_next = 0;
clear_all_faces MORFFACE.C /^clear_all_faces()
clone_structure MORFFACE.C /^void *clone_structure(void *
get_moo_3d MORFFACE.C /^Moo_point *get_moo_3d(ix)
closest_moo_point MORFFACE.C /^closest_moo_point(Moo_coor x
closest_moo_3d MORFFACE.C /^closest_moo_3d(Moo_coor xyz[
check_moo_3d_free MORFFACE.C /^check_moo_3d_free(int count)
next_moo_3d MORFFACE.C /^next_moo_3d()
unget_moo_3d MORFFACE.C /^unget_moo_3d()
some_face MORFFACE.C /^some_face(Morf_obj *moo, Vec
rub_face MORFFACE.C /^rub_face(Morf_obj *moo)
unrub_face MORFFACE.C /^unrub_face(Morf_obj *moo)
render_face MORFFACE.C /^render_face(Morf_obj *moo)
draw_face MORFFACE.C /^draw_face(Morf_obj *moo)
free_face MORFFACE.C /^free_face(Morf_obj *moo)
morf_new_face MORFFACE.C /^morf_new_face()
get_shift MORFFACE.C /^get_shift()
make_face MORFFACE.C /^make_face(Morf_obj *moo, int
morf_make_face MORFFACE.C /^morf_make_face()
see_morf_points MORFFACE.C /^see_morf_points()
morf_link_face MORFFACE.C /^morf_link_face()
save_face MORFFACE.C /^save_face(Morf_obj *moo, int
load_face MORFFACE.C /^load_face(Morf_obj *moo, int
s_faces MORFFACE.C /^s_faces(int file)
save_faces MORFFACE.C /^save_faces(char *name)
l_faces MORFFACE.C /^l_faces(int file)
load_faces MORFFACE.C /^load_faces(char *name)
status STATUS.C /^status()
credits_lines STATUS.C /^char *credits_lines[] =
about STATUS.C /^about()
save_ok FILES.C /^char save_ok, load_ok, info_
load_ok FILES.C /^char save_ok, load_ok, info_
info_ok FILES.C /^char save_ok, load_ok, info_
qcopyfile FILES.C /^qcopyfile(char *sname, char 
fml_info FILES.C /^fml_info()
go_files FILES.C /^go_files(type)
goodconf MAIN.C /^char goodconf;
main MAIN.C /^main(argc, argv)
_sysint PEEKPOKE.ASM /^	PUBLIC _sysint
_norm_pointer PEEKPOKE.ASM /^	PUBLIC	_norm_pointer
_enorm_pointer PEEKPOKE.ASM /^	PUBLIC	_enorm_pointer
_stuff_bytes PEEKPOKE.ASM /^	PUBLIC	_stuff_bytes
_stuff_words PEEKPOKE.ASM /^	PUBLIC	_stuff_words
_xor_words PEEKPOKE.ASM /^	PUBLIC	_xor_words
_copy_bytes PEEKPOKE.ASM /^	public _copy_bytes
_copy_structure PEEKPOKE.ASM /^    PUBLIC _copy_structure
_xor_group PEEKPOKE.ASM /^	public _xor_group
_exchange_words PEEKPOKE.ASM /^	public _exchange_words
_copy_words PEEKPOKE.ASM /^	PUBLIC	_copy_words
_xlat PEEKPOKE.ASM /^	PUBLIC _xlat
_back_scan PEEKPOKE.ASM /^	public _back_scan
_zoom4blit ZOOM4BLI.ASM /^	PUBLIC	_zoom4blit
_shrink5 SHRINK5.ASM /^	PUBLIC	_shrink5
_shrink4 SHRINK4.ASM /^	PUBLIC	_shrink4
_tnskip SKIP.ASM /^	PUBLIC _tnskip
_tnsame SKIP.ASM /^	PUBLIC	_tnsame
_zoomblit ZOOMBLIT.ASM /^	PUBLIC	_zoomblit
_bsame COMP.ASM /^	PUBLIC _bsame
_fsame COMP.ASM /^	PUBLIC _fsame
_bcontrast COMP.ASM /^	PUBLIC _bcontrast
_fcontrast COMP.ASM /^	PUBLIC _fcontrast
_bcompare COMP.ASM /^	PUBLIC _bcompare
_fcompare COMP.ASM /^	PUBLIC _fcompare
_unrun COMP.ASM /^	PUBLIC _unrun
_unsbsrsccomp COMP.ASM /^	PUBLIC _unsbsrsccomp
_unlccomp COMP.ASM /^	PUBLIC _unlccomp
_fcuncomp COMP.ASM /^	public _fcuncomp
_cset_colors COMP.ASM /^	public _cset_colors
_closestc CLOSESTC.ASM /^	PUBLIC _closestc
_ublit8 UBLIT8.ASM /^	PUBLIC	_ublit8
clipblit CLIPIT.ASM /^	PUBLIC	clipblit
clipline CLIPLINE.ASM /^	public clipline
_a1blit A1BLIT.ASM /^	PUBLIC	_a1blit
_a2blit A2BLIT.ASM /^	PUBLIC	_a2blit
_blit8 BLIT8.ASM /^	PUBLIC	_blit8
_colorave COLORAVE.ASM /^	PUBLIC _colorave
_dto_table DIAG.ASM /^	public _dto_table
_emm_present EMMCHEK.ASM /^	PUBLIC	_emm_present
_tblit8 TBLIT8.ASM /^	PUBLIC	_tblit8
_tmove8 TMOVE8.ASM /^	PUBLIC	_tmove8
_un5brun UN5BRUN.ASM /^	PUBLIC _un5brun
_un5copy UN5BRUN.ASM /^	public _un5copy
_unbrun UNBRUN.ASM /^	PUBLIC _unbrun
_fastint INT.ASM /^	public _fastint	
_setint INT.ASM /^	public _setint
_Restoreint INT.ASM /^	public _Restoreint
__get80hz INT.ASM /^	public __get80hz
_pollvstatus INT.ASM /^	public _pollvstatus
_wait_vblank INT.ASM /^	public _wait_vblank
_wait_novblank INT.ASM /^	public _wait_novblank
_jset_colors INT.ASM /^	public _jset_colors
_xorblock CBLOCK.ASM /^	PUBLIC	_xorblock
_cblock CBLOCK.ASM /^	PUBLIC	_cblock
_chli CBLOCK.ASM /^	PUBLIC	_chli
_cvli CBLOCK.ASM /^	PUBLIC	_cvli
_getd CBLOCK.ASM /^	PUBLIC	_getd
_cdot CBLOCK.ASM /^	PUBLIC	_cdot
